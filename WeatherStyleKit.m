//
//  WeatherStyleKit.m
//  WeatherApp
//
//  Created by RyanRosello on 2/2/16.
//  Copyright (c) 2016 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "WeatherStyleKit.h"


@implementation WeatherStyleKit

#pragma mark Cache

static UIImage* _imageOfCanvas1 = nil;
static UIImage* _imageOfCanvas4 = nil;
static UIImage* _imageOfCanvas6 = nil;
static UIImage* _imageOfCanvas7 = nil;
static UIImage* _imageOfCanvas8 = nil;
static UIImage* _imageOfCanvas9 = nil;
static UIImage* _imageOfCanvas10 = nil;
static UIImage* _imageOfCanvas11 = nil;
static UIImage* _imageOfCanvas13 = nil;
static UIImage* _imageOfCanvas2 = nil;
static UIImage* _imageOfCanvas3 = nil;
static UIImage* _imageOfCanvas5 = nil;
static UIImage* _imageOfCanvas15 = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawCanvas1
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* color17 = [UIColor colorWithRed: 0.333 green: 0.333 blue: 0.333 alpha: 0.86];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextSetAlpha(context, 0.6);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75.5, 32.5, 20, 18)];
        [UIColor.grayColor setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 25, 20, 18)];
        [UIColor.grayColor setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75.5, 23.5, 20, 16)];
        [UIColor.grayColor setFill];
        [oval36Path fill];
        [UIColor.blackColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(57.5, 26, 20, 17)];
        [UIColor.grayColor setFill];
        [oval40Path fill];
        [UIColor.blackColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(37.5, 34.5, 20, 17)];
        [UIColor.grayColor setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 32, 21, 18)];
        [UIColor.grayColor setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60, 31.5, 23, 17)];
        [UIColor.grayColor setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(95.5, 31.5, 21, 19)];
        [UIColor.grayColor setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(83, 29, 20, 15)];
        [UIColor.grayColor setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(221.5, 27, 133, 135)];
        CGContextSaveGState(context);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(288, 27), CGPointMake(288, 162), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(286, 67.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 64.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273.5, 71.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(269, 60.5)];
        [oval58Path addCurveToPoint: CGPointMake(265.15, 78.03) controlPoint1: CGPointMake(270.89, 63.43) controlPoint2: CGPointMake(267.33, 70.89)];
        [oval58Path addCurveToPoint: CGPointMake(269, 93.5) controlPoint1: CGPointMake(263.03, 84.97) controlPoint2: CGPointMake(262.22, 91.62)];
        [oval58Path addCurveToPoint: CGPointMake(257, 122.5) controlPoint1: CGPointMake(284.41, 97.78) controlPoint2: CGPointMake(257, 111.66)];
        [oval58Path addCurveToPoint: CGPointMake(287.5, 161.5) controlPoint1: CGPointMake(257, 159.78) controlPoint2: CGPointMake(324.78, 161.5)];
        [oval58Path addCurveToPoint: CGPointMake(220, 94) controlPoint1: CGPointMake(250.22, 161.5) controlPoint2: CGPointMake(220, 131.28)];
        [oval58Path addCurveToPoint: CGPointMake(287.5, 26.5) controlPoint1: CGPointMake(220, 56.72) controlPoint2: CGPointMake(250.22, 26.5)];
        [oval58Path addCurveToPoint: CGPointMake(269, 60.5) controlPoint1: CGPointMake(304.25, 26.5) controlPoint2: CGPointMake(262.54, 50.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(259.35, 26.5), CGPointMake(259.35, 161.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 247.95, 69.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 261.06, 76.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250, 68.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 71, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(255.5, 129)];
        [bezier21Path addCurveToPoint: CGPointMake(255.51, 123.11) controlPoint1: CGPointMake(259.37, 126.51) controlPoint2: CGPointMake(257.64, 121.5)];
        [bezier21Path addCurveToPoint: CGPointMake(237, 116) controlPoint1: CGPointMake(250.35, 127.02) controlPoint2: CGPointMake(237, 116)];
        [bezier21Path addCurveToPoint: CGPointMake(255.5, 129) controlPoint1: CGPointMake(237, 116) controlPoint2: CGPointMake(249.98, 132.55)];
        [bezier21Path closePath];
        [UIColor.whiteColor setFill];
        [bezier21Path fill];
        [color setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];


        //// Bezier 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 287.6, 122.87);
        CGContextRotateCTM(context, -9.13 * M_PI / 180);

        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(-14.49, -6.25)];
        [bezier22Path addCurveToPoint: CGPointMake(18.65, -6.25) controlPoint1: CGPointMake(-1.66, 10.32) controlPoint2: CGPointMake(18.65, -6.25)];
        [bezier22Path addLineToPoint: CGPointMake(1.69, 11.16)];
        [bezier22Path addLineToPoint: CGPointMake(-6.34, 7.76)];
        [bezier22Path addCurveToPoint: CGPointMake(-14.49, -6.25) controlPoint1: CGPointMake(-6.34, 7.76) controlPoint2: CGPointMake(-27.32, -22.81)];
        [bezier22Path closePath];
        [color2 setFill];
        [bezier22Path fill];
        [UIColor.blackColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(286.5, 73.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(387.5, 129.5, 17, 18)];
        [color17 setFill];
        [oval98Path fill];
        [UIColor.blackColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(368.5, 126.5, 23, 24)];
        [color17 setFill];
        [oval16Path fill];
        [UIColor.blackColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381.5, 140.5, 20, 22)];
        [color17 setFill];
        [oval19Path fill];
        [UIColor.blackColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239.5, 140.5, 26, 26)];
        [color17 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253, 149, 21, 20)];
        [color17 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265.5, 143, 25, 24)];
        [color17 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 152, 21, 20)];
        [color17 setFill];
        [oval4Path fill];
        [UIColor.blackColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295.5, 147, 27, 22)];
        [color17 setFill];
        [oval5Path fill];
        [UIColor.blackColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 152, 28, 24)];
        [color17 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(329.5, 146.5, 19, 20)];
        [color17 setFill];
        [oval7Path fill];
        [UIColor.blackColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 149, 27, 26)];
        [color17 setFill];
        [oval9Path fill];
        [UIColor.blackColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 154, 19, 21)];
        [color17 setFill];
        [oval8Path fill];
        [UIColor.blackColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 134, 25, 25)];
        [color17 setFill];
        [oval10Path fill];
        [UIColor.blackColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 134, 24, 25)];
        [color17 setFill];
        [oval11Path fill];
        [UIColor.blackColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(303.5, 129.5, 26, 25)];
        [color17 setFill];
        [oval12Path fill];
        [UIColor.blackColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(322.5, 138.5, 20, 24)];
        [color17 setFill];
        [oval13Path fill];
        [UIColor.blackColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 138, 19, 21)];
        [color17 setFill];
        [oval14Path fill];
        [UIColor.blackColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 129, 27, 25)];
        [color17 setFill];
        [oval15Path fill];
        [UIColor.blackColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 140.5, 23, 22)];
        [color17 setFill];
        [oval17Path fill];
        [UIColor.blackColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 150.5, 22, 23)];
        [color17 setFill];
        [oval18Path fill];
        [UIColor.blackColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(386.5, 153.5, 20, 19)];
        [color17 setFill];
        [oval20Path fill];
        [UIColor.blackColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(398, 140.5, 18, 20)];
        [color17 setFill];
        [oval101Path fill];
        [UIColor.blackColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(400, 155.5, 16, 15)];
        [color17 setFill];
        [oval106Path fill];
        [UIColor.blackColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 100.75, 146.5);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-92.82, 2.21, 20, 18.34)];
        [color17 setFill];
        [oval104Path fill];
        [UIColor.blackColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-79.81, -12.04, 24, 26)];
        [color17 setFill];
        [oval105Path fill];
        [UIColor.blackColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-66.68, -18.97, 23, 22)];
        [color17 setFill];
        [oval138Path fill];
        [UIColor.blackColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 97 Drawing
        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-8.25, -10.5, 19, 20)];
        [color17 setFill];
        [oval97Path fill];
        [UIColor.blackColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60.75, -11.5, 26, 26)];
        [color17 setFill];
        [oval86Path fill];
        [UIColor.blackColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(52.25, -3, 21, 20)];
        [color17 setFill];
        [oval87Path fill];
        [UIColor.blackColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(35.75, -9, 25, 24)];
        [color17 setFill];
        [oval88Path fill];
        [UIColor.blackColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 90 Drawing
        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(3.75, -5, 27, 22)];
        [color17 setFill];
        [oval90Path fill];
        [UIColor.blackColor setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];


        //// Oval 91 Drawing
        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-10.75, 2, 24, 20)];
        [color17 setFill];
        [oval91Path fill];
        [UIColor.blackColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-22.25, -5.5, 19, 20)];
        [color17 setFill];
        [oval92Path fill];
        [UIColor.blackColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-48.25, -2, 25, 24)];
        [color17 setFill];
        [oval93Path fill];
        [UIColor.blackColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-31.25, 2, 19, 21)];
        [color17 setFill];
        [oval94Path fill];
        [UIColor.blackColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(41.25, -18, 25, 25)];
        [color17 setFill];
        [oval95Path fill];
        [UIColor.blackColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        //// Oval 96 Drawing
        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22.25, -17, 22, 23)];
        [color17 setFill];
        [oval96Path fill];
        [UIColor.blackColor setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-31.75, -14, 19, 21)];
        [color17 setFill];
        [oval99Path fill];
        [UIColor.blackColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-49.25, -23, 27, 25)];
        [color17 setFill];
        [oval100Path fill];
        [UIColor.blackColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-54.75, -11.5, 23, 22)];
        [color17 setFill];
        [oval102Path fill];
        [UIColor.blackColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-66.25, -1.5, 22, 23)];
        [color17 setFill];
        [oval103Path fill];
        [UIColor.blackColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24.25, 0, 21, 20)];
        [color17 setFill];
        [oval89Path fill];
        [UIColor.blackColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-78.82, 2.76, 18, 16.34)];
        [color17 setFill];
        [oval139Path fill];
        [UIColor.blackColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        CGContextEndTransparencyLayer(context);

        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 41 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 161.48, 44.32);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval41Path fill];
        [UIColor.blackColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];

        CGContextRestoreGState(context);


        //// Oval 43 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 177.23, 45.46);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval43Path fill];
        [UIColor.blackColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];

        CGContextRestoreGState(context);


        //// Oval 44 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 195.11, 51.89);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color17 setFill];
        [oval44Path fill];
        [UIColor.blackColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];

        CGContextRestoreGState(context);


        //// Oval 45 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 203.63, 47.35);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 21)];
        [color17 setFill];
        [oval45Path fill];
        [UIColor.blackColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];

        CGContextRestoreGState(context);


        //// Oval 46 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 217.95, 49.17);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval46Path fill];
        [UIColor.blackColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];

        CGContextRestoreGState(context);


        //// Oval 47 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 230.47, 40.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color17 setFill];
        [oval47Path fill];
        [UIColor.blackColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];

        CGContextRestoreGState(context);


        //// Oval 49 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 233.78, 46.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color17 setFill];
        [oval49Path fill];
        [UIColor.blackColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];

        CGContextRestoreGState(context);


        //// Oval 50 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 176.34, 38.02);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 20)];
        [color17 setFill];
        [oval50Path fill];
        [UIColor.blackColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];

        CGContextRestoreGState(context);


        //// Oval 51 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 193.22, 36);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval51Path fill];
        [UIColor.blackColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];

        CGContextRestoreGState(context);


        //// Oval 52 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 209.07, 29.58);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 22)];
        [color17 setFill];
        [oval52Path fill];
        [UIColor.blackColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];

        CGContextRestoreGState(context);


        //// Oval 53 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 220.56, 37.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 20)];
        [color17 setFill];
        [oval53Path fill];
        [UIColor.blackColor setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 69, 20, 18)];
        [color3 setFill];
        [oval109Path fill];
        [UIColor.blackColor setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 61.5, 20, 18)];
        [color3 setFill];
        [oval110Path fill];
        [UIColor.blackColor setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 60, 20, 16)];
        [color3 setFill];
        [oval111Path fill];
        [UIColor.blackColor setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 62.5, 20, 17)];
        [color3 setFill];
        [oval112Path fill];
        [UIColor.blackColor setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 71, 20, 17)];
        [color3 setFill];
        [oval113Path fill];
        [UIColor.blackColor setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 68.5, 21, 18)];
        [color3 setFill];
        [oval114Path fill];
        [UIColor.blackColor setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 115 Drawing
        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 68, 23, 17)];
        [color3 setFill];
        [oval115Path fill];
        [UIColor.blackColor setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 68, 21, 19)];
        [color3 setFill];
        [oval116Path fill];
        [UIColor.blackColor setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 65.5, 20, 15)];
        [color3 setFill];
        [oval117Path fill];
        [UIColor.blackColor setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 59, 20, 18)];
        [color3 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360.5, 51.5, 20, 18)];
        [color3 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 50, 20, 16)];
        [color3 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 52.5, 20, 17)];
        [color3 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(308, 61, 20, 17)];
        [color3 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(315.5, 58.5, 21, 18)];
        [color3 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(330.5, 58, 23, 17)];
        [color3 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(366, 58, 21, 19)];
        [color3 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(353.5, 55.5, 20, 15)];
        [color3 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 50, 20, 18)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.blackColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 42.5, 20, 18)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.blackColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 41, 20, 16)];
        [color3 setFill];
        [oval120Path fill];
        [UIColor.blackColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 43.5, 20, 17)];
        [color3 setFill];
        [oval121Path fill];
        [UIColor.blackColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 52, 20, 17)];
        [color3 setFill];
        [oval122Path fill];
        [UIColor.blackColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 49.5, 21, 18)];
        [color3 setFill];
        [oval123Path fill];
        [UIColor.blackColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 49, 23, 17)];
        [color3 setFill];
        [oval124Path fill];
        [UIColor.blackColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 49, 21, 19)];
        [color3 setFill];
        [oval125Path fill];
        [UIColor.blackColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 46.5, 20, 15)];
        [color3 setFill];
        [oval126Path fill];
        [UIColor.blackColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 127 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 204.6, 79.11);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.66, -2.32, 17.78, 16.2)];
        [color17 setFill];
        [oval127Path fill];
        [UIColor.blackColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];

        CGContextRestoreGState(context);


        //// Oval 128 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 192.42, 85.24);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.88, -2.22, 16.76, 18.03)];
        [color17 setFill];
        [oval128Path fill];
        [UIColor.blackColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];

        CGContextRestoreGState(context);


        //// Oval 129 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 216.89, 84.9);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.64, -2.44, 18.78, 16.19)];
        [color17 setFill];
        [oval129Path fill];
        [UIColor.blackColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];

        CGContextRestoreGState(context);


        //// Oval 130 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 248.4, 93.25);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.76, -2.33, 17.77, 17.11)];
        [color17 setFill];
        [oval130Path fill];
        [UIColor.blackColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];

        CGContextRestoreGState(context);


        //// Oval 131 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 231.77, 94.3);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.64, -2.44, 18.78, 16.19)];
        [color17 setFill];
        [oval131Path fill];
        [UIColor.blackColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];

        CGContextRestoreGState(context);


        //// Oval 132 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 219.3, 98.52);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.47, -2.06, 15.81, 14.4)];
        [color17 setFill];
        [oval132Path fill];
        [UIColor.blackColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];

        CGContextRestoreGState(context);


        //// Oval 133 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 203.29, 94.46);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.9, -2.94, 22.75, 18.87)];
        [color17 setFill];
        [oval133Path fill];
        [UIColor.blackColor setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];

        CGContextRestoreGState(context);


        //// Oval 134 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 192.16, 96.87);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.64, -2.44, 18.78, 16.19)];
        [color17 setFill];
        [oval134Path fill];
        [UIColor.blackColor setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];

        CGContextRestoreGState(context);


        //// Oval 135 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.62, 87.82);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.79, -2.1, 15.78, 17.13)];
        [color17 setFill];
        [oval135Path fill];
        [UIColor.blackColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];

        CGContextRestoreGState(context);


        //// Oval 136 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 179.42, 93.88);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.67, -2.2, 16.79, 16.21)];
        [color17 setFill];
        [oval136Path fill];
        [UIColor.blackColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];

        CGContextRestoreGState(context);


        //// Oval 137 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 232.87, 87.53);
        CGContextRotateCTM(context, 6.8 * M_PI / 180);

        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.43, -2.41, 18.8, 14.36)];
        [color17 setFill];
        [oval137Path fill];
        [UIColor.blackColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 7
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 68 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.7, 85.93);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.33, 13.84)];
        [color3 setFill];
        [oval68Path fill];
        [UIColor.blackColor setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];

        CGContextRestoreGState(context);


        //// Oval 69 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 179.72, 91.21);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.37, 15.43)];
        [color3 setFill];
        [oval69Path fill];
        [UIColor.blackColor setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];

        CGContextRestoreGState(context);


        //// Oval 70 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 155.41, 90.94);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.25, 13.82)];
        [color3 setFill];
        [oval70Path fill];
        [UIColor.blackColor setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];

        CGContextRestoreGState(context);


        //// Oval 71 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 127.07, 98.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.31, 14.63)];
        [color3 setFill];
        [oval71Path fill];
        [UIColor.blackColor setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];

        CGContextRestoreGState(context);


        //// Oval 72 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 141.63, 99.03);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.25, 13.82)];
        [color3 setFill];
        [oval72Path fill];
        [UIColor.blackColor setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];

        CGContextRestoreGState(context);


        //// Oval 73 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.1, 102.65);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.51, 12.3)];
        [color3 setFill];
        [oval73Path fill];
        [UIColor.blackColor setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];

        CGContextRestoreGState(context);


        //// Oval 74 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 164.08, 99.2);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.9, 16.11)];
        [color3 setFill];
        [oval74Path fill];
        [UIColor.blackColor setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];

        CGContextRestoreGState(context);


        //// Oval 75 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 178.31, 101.25);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.25, 13.82)];
        [color3 setFill];
        [oval75Path fill];
        [UIColor.blackColor setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];

        CGContextRestoreGState(context);


        //// Oval 78 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 188.88, 93.42);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.46, 14.66)];
        [color3 setFill];
        [oval78Path fill];
        [UIColor.blackColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];

        CGContextRestoreGState(context);


        //// Oval 107 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 191.93, 98.66);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.4, 13.86)];
        [color3 setFill];
        [oval107Path fill];
        [UIColor.blackColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];

        CGContextRestoreGState(context);


        //// Oval 108 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 140.78, 93.2);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.28, 12.25)];
        [color3 setFill];
        [oval108Path fill];
        [UIColor.blackColor setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(65, 61.5, 26, 24)];
        [color3 setFill];
        [oval32Path fill];
        [UIColor.blackColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(34.5, 70, 22, 20)];
        [color3 setFill];
        [oval34Path fill];
        [UIColor.blackColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(14.5, 72.5, 22, 21)];
        [color3 setFill];
        [oval37Path fill];
        [UIColor.blackColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 79.5, 25, 25)];
        [color3 setFill];
        [oval38Path fill];
        [UIColor.blackColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-7.5, 84, 22, 22)];
        [color3 setFill];
        [oval39Path fill];
        [UIColor.blackColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(125, 72.5, 28, 25)];
        [color3 setFill];
        [oval21Path fill];
        [UIColor.blackColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(117.5, 79, 22, 20)];
        [color3 setFill];
        [oval22Path fill];
        [UIColor.blackColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(102, 75, 25, 23)];
        [color3 setFill];
        [oval23Path fill];
        [UIColor.blackColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(89.5, 82, 23, 20)];
        [color3 setFill];
        [oval24Path fill];
        [UIColor.blackColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(73, 76, 26, 23)];
        [color3 setFill];
        [oval25Path fill];
        [UIColor.blackColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 82, 27, 24)];
        [color3 setFill];
        [oval26Path fill];
        [UIColor.blackColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(43, 75.5, 23, 22)];
        [color3 setFill];
        [oval27Path fill];
        [UIColor.blackColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(18, 79, 28, 26)];
        [color3 setFill];
        [oval28Path fill];
        [UIColor.blackColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 29 Drawing
        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(34.5, 84, 22, 21)];
        [color3 setFill];
        [oval29Path fill];
        [UIColor.blackColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];


        //// Oval 30 Drawing
        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 66, 28, 24)];
        [color3 setFill];
        [oval30Path fill];
        [UIColor.blackColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(84.5, 66, 28, 24)];
        [color3 setFill];
        [oval31Path fill];
        [UIColor.blackColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(52, 71.5, 21, 22)];
        [color3 setFill];
        [oval33Path fill];
        [UIColor.blackColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas4
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* shadow2Color = [UIColor colorWithRed: 1 green: 0.799 blue: 0.229 alpha: 1];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* moonFrontShadowColor = [UIColor colorWithRed: 1 green: 0.985 blue: 0.815 alpha: 1];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonFrontShadow = [[NSShadow alloc] init];
    [moonFrontShadow setShadowColor: [moonFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(moonFrontShadowColor.CGColor) * 0.14]];
    [moonFrontShadow setShadowOffset: CGSizeMake(28.1, 36.1)];
    [moonFrontShadow setShadowBlurRadius: 37];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Star 15 Drawing
    UIBezierPath* star15Path = [UIBezierPath bezierPath];
    [star15Path moveToPoint: CGPointMake(297.5, 13.5)];
    [star15Path addLineToPoint: CGPointMake(301.38, 19.16)];
    [star15Path addLineToPoint: CGPointMake(307.96, 21.1)];
    [star15Path addLineToPoint: CGPointMake(303.78, 26.54)];
    [star15Path addLineToPoint: CGPointMake(303.97, 33.4)];
    [star15Path addLineToPoint: CGPointMake(297.5, 31.1)];
    [star15Path addLineToPoint: CGPointMake(291.03, 33.4)];
    [star15Path addLineToPoint: CGPointMake(291.22, 26.54)];
    [star15Path addLineToPoint: CGPointMake(287.04, 21.1)];
    [star15Path addLineToPoint: CGPointMake(293.62, 19.16)];
    [star15Path closePath];
    [color11 setFill];
    [star15Path fill];
    [shadow2Color setStroke];
    star15Path.lineWidth = 1;
    [star15Path stroke];


    //// Bezier 8 Drawing
    UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
    [UIColor.blackColor setStroke];
    bezier8Path.lineWidth = 1;
    [bezier8Path stroke];


    //// Star 5 Drawing
    UIBezierPath* star5Path = [UIBezierPath bezierPath];
    [star5Path moveToPoint: CGPointMake(210, 12)];
    [star5Path addLineToPoint: CGPointMake(214.58, 18.69)];
    [star5Path addLineToPoint: CGPointMake(222.36, 20.98)];
    [star5Path addLineToPoint: CGPointMake(217.42, 27.41)];
    [star5Path addLineToPoint: CGPointMake(217.64, 35.52)];
    [star5Path addLineToPoint: CGPointMake(210, 32.8)];
    [star5Path addLineToPoint: CGPointMake(202.36, 35.52)];
    [star5Path addLineToPoint: CGPointMake(202.58, 27.41)];
    [star5Path addLineToPoint: CGPointMake(197.64, 20.98)];
    [star5Path addLineToPoint: CGPointMake(205.42, 18.69)];
    [star5Path closePath];
    [color11 setFill];
    [star5Path fill];
    [shadow2Color setStroke];
    star5Path.lineWidth = 1;
    [star5Path stroke];


    //// Group 2
    {
        //// Star 18 Drawing
        UIBezierPath* star18Path = [UIBezierPath bezierPath];
        [star18Path moveToPoint: CGPointMake(364.5, 72.5)];
        [star18Path addLineToPoint: CGPointMake(367.32, 76.62)];
        [star18Path addLineToPoint: CGPointMake(372.11, 78.03)];
        [star18Path addLineToPoint: CGPointMake(369.07, 81.98)];
        [star18Path addLineToPoint: CGPointMake(369.2, 86.97)];
        [star18Path addLineToPoint: CGPointMake(364.5, 85.3)];
        [star18Path addLineToPoint: CGPointMake(359.8, 86.97)];
        [star18Path addLineToPoint: CGPointMake(359.93, 81.98)];
        [star18Path addLineToPoint: CGPointMake(356.89, 78.03)];
        [star18Path addLineToPoint: CGPointMake(361.68, 76.62)];
        [star18Path closePath];
        [color11 setFill];
        [star18Path fill];
        [shadow2Color setStroke];
        star18Path.lineWidth = 1;
        [star18Path stroke];


        //// Star 12 Drawing
        UIBezierPath* star12Path = [UIBezierPath bezierPath];
        [star12Path moveToPoint: CGPointMake(344.5, 9.5)];
        [star12Path addLineToPoint: CGPointMake(347.67, 14.13)];
        [star12Path addLineToPoint: CGPointMake(353.06, 15.72)];
        [star12Path addLineToPoint: CGPointMake(349.64, 20.17)];
        [star12Path addLineToPoint: CGPointMake(349.79, 25.78)];
        [star12Path addLineToPoint: CGPointMake(344.5, 23.9)];
        [star12Path addLineToPoint: CGPointMake(339.21, 25.78)];
        [star12Path addLineToPoint: CGPointMake(339.36, 20.17)];
        [star12Path addLineToPoint: CGPointMake(335.94, 15.72)];
        [star12Path addLineToPoint: CGPointMake(341.33, 14.13)];
        [star12Path closePath];
        [color11 setFill];
        [star12Path fill];
        [shadow2Color setStroke];
        star12Path.lineWidth = 1;
        [star12Path stroke];


        //// Star 16 Drawing
        UIBezierPath* star16Path = [UIBezierPath bezierPath];
        [star16Path moveToPoint: CGPointMake(400, 11)];
        [star16Path addLineToPoint: CGPointMake(402.82, 15.12)];
        [star16Path addLineToPoint: CGPointMake(407.61, 16.53)];
        [star16Path addLineToPoint: CGPointMake(404.57, 20.48)];
        [star16Path addLineToPoint: CGPointMake(404.7, 25.47)];
        [star16Path addLineToPoint: CGPointMake(400, 23.8)];
        [star16Path addLineToPoint: CGPointMake(395.3, 25.47)];
        [star16Path addLineToPoint: CGPointMake(395.43, 20.48)];
        [star16Path addLineToPoint: CGPointMake(392.39, 16.53)];
        [star16Path addLineToPoint: CGPointMake(397.18, 15.12)];
        [star16Path closePath];
        [color11 setFill];
        [star16Path fill];
        [shadow2Color setStroke];
        star16Path.lineWidth = 1;
        [star16Path stroke];


        //// Star 19 Drawing
        UIBezierPath* star19Path = [UIBezierPath bezierPath];
        [star19Path moveToPoint: CGPointMake(378.5, 42.5)];
        [star19Path addLineToPoint: CGPointMake(380.26, 45.07)];
        [star19Path addLineToPoint: CGPointMake(383.26, 45.95)];
        [star19Path addLineToPoint: CGPointMake(381.35, 48.43)];
        [star19Path addLineToPoint: CGPointMake(381.44, 51.55)];
        [star19Path addLineToPoint: CGPointMake(378.5, 50.5)];
        [star19Path addLineToPoint: CGPointMake(375.56, 51.55)];
        [star19Path addLineToPoint: CGPointMake(375.65, 48.43)];
        [star19Path addLineToPoint: CGPointMake(373.74, 45.95)];
        [star19Path addLineToPoint: CGPointMake(376.74, 45.07)];
        [star19Path closePath];
        [color11 setFill];
        [star19Path fill];
        [shadow2Color setStroke];
        star19Path.lineWidth = 1;
        [star19Path stroke];


        //// Star 20 Drawing
        UIBezierPath* star20Path = [UIBezierPath bezierPath];
        [star20Path moveToPoint: CGPointMake(400, 100)];
        [star20Path addLineToPoint: CGPointMake(404.94, 107.2)];
        [star20Path addLineToPoint: CGPointMake(413.31, 109.67)];
        [star20Path addLineToPoint: CGPointMake(407.99, 116.6)];
        [star20Path addLineToPoint: CGPointMake(408.23, 125.33)];
        [star20Path addLineToPoint: CGPointMake(400, 122.4)];
        [star20Path addLineToPoint: CGPointMake(391.77, 125.33)];
        [star20Path addLineToPoint: CGPointMake(392.01, 116.6)];
        [star20Path addLineToPoint: CGPointMake(386.69, 109.67)];
        [star20Path addLineToPoint: CGPointMake(395.06, 107.2)];
        [star20Path closePath];
        [color11 setFill];
        [star20Path fill];
        [shadow2Color setStroke];
        star20Path.lineWidth = 1;
        [star20Path stroke];


        //// Star 13 Drawing
        UIBezierPath* star13Path = [UIBezierPath bezierPath];
        [star13Path moveToPoint: CGPointMake(348.5, 150.5)];
        [star13Path addLineToPoint: CGPointMake(352.73, 156.68)];
        [star13Path addLineToPoint: CGPointMake(359.91, 158.79)];
        [star13Path addLineToPoint: CGPointMake(355.35, 164.72)];
        [star13Path addLineToPoint: CGPointMake(355.55, 172.21)];
        [star13Path addLineToPoint: CGPointMake(348.5, 169.7)];
        [star13Path addLineToPoint: CGPointMake(341.45, 172.21)];
        [star13Path addLineToPoint: CGPointMake(341.65, 164.72)];
        [star13Path addLineToPoint: CGPointMake(337.09, 158.79)];
        [star13Path addLineToPoint: CGPointMake(344.27, 156.68)];
        [star13Path closePath];
        [color11 setFill];
        [star13Path fill];
        [shadow2Color setStroke];
        star13Path.lineWidth = 1;
        [star13Path stroke];
    }


    //// Group
    {
        //// Star Drawing
        UIBezierPath* starPath = [UIBezierPath bezierPath];
        [starPath moveToPoint: CGPointMake(61.5, 38.5)];
        [starPath addLineToPoint: CGPointMake(64.32, 42.62)];
        [starPath addLineToPoint: CGPointMake(69.11, 44.03)];
        [starPath addLineToPoint: CGPointMake(66.07, 47.98)];
        [starPath addLineToPoint: CGPointMake(66.2, 52.97)];
        [starPath addLineToPoint: CGPointMake(61.5, 51.3)];
        [starPath addLineToPoint: CGPointMake(56.8, 52.97)];
        [starPath addLineToPoint: CGPointMake(56.93, 47.98)];
        [starPath addLineToPoint: CGPointMake(53.89, 44.03)];
        [starPath addLineToPoint: CGPointMake(58.68, 42.62)];
        [starPath closePath];
        [color11 setFill];
        [starPath fill];
        [shadow2Color setStroke];
        starPath.lineWidth = 1;
        [starPath stroke];


        //// Star 2 Drawing
        UIBezierPath* star2Path = [UIBezierPath bezierPath];
        [star2Path moveToPoint: CGPointMake(106, 58)];
        [star2Path addLineToPoint: CGPointMake(108.47, 61.6)];
        [star2Path addLineToPoint: CGPointMake(112.66, 62.84)];
        [star2Path addLineToPoint: CGPointMake(109.99, 66.3)];
        [star2Path addLineToPoint: CGPointMake(110.11, 70.66)];
        [star2Path addLineToPoint: CGPointMake(106, 69.2)];
        [star2Path addLineToPoint: CGPointMake(101.89, 70.66)];
        [star2Path addLineToPoint: CGPointMake(102.01, 66.3)];
        [star2Path addLineToPoint: CGPointMake(99.34, 62.84)];
        [star2Path addLineToPoint: CGPointMake(103.53, 61.6)];
        [star2Path closePath];
        [color11 setFill];
        [star2Path fill];
        [shadow2Color setStroke];
        star2Path.lineWidth = 1;
        [star2Path stroke];


        //// Star 3 Drawing
        UIBezierPath* star3Path = [UIBezierPath bezierPath];
        [star3Path moveToPoint: CGPointMake(106, 17)];
        [star3Path addLineToPoint: CGPointMake(108.82, 21.12)];
        [star3Path addLineToPoint: CGPointMake(113.61, 22.53)];
        [star3Path addLineToPoint: CGPointMake(110.57, 26.48)];
        [star3Path addLineToPoint: CGPointMake(110.7, 31.47)];
        [star3Path addLineToPoint: CGPointMake(106, 29.8)];
        [star3Path addLineToPoint: CGPointMake(101.3, 31.47)];
        [star3Path addLineToPoint: CGPointMake(101.43, 26.48)];
        [star3Path addLineToPoint: CGPointMake(98.39, 22.53)];
        [star3Path addLineToPoint: CGPointMake(103.18, 21.12)];
        [star3Path closePath];
        [color11 setFill];
        [star3Path fill];
        [shadow2Color setStroke];
        star3Path.lineWidth = 1;
        [star3Path stroke];


        //// Star 4 Drawing
        UIBezierPath* star4Path = [UIBezierPath bezierPath];
        [star4Path moveToPoint: CGPointMake(147, 20)];
        [star4Path addLineToPoint: CGPointMake(148.76, 22.57)];
        [star4Path addLineToPoint: CGPointMake(151.76, 23.45)];
        [star4Path addLineToPoint: CGPointMake(149.85, 25.93)];
        [star4Path addLineToPoint: CGPointMake(149.94, 29.05)];
        [star4Path addLineToPoint: CGPointMake(147, 28)];
        [star4Path addLineToPoint: CGPointMake(144.06, 29.05)];
        [star4Path addLineToPoint: CGPointMake(144.15, 25.93)];
        [star4Path addLineToPoint: CGPointMake(142.24, 23.45)];
        [star4Path addLineToPoint: CGPointMake(145.24, 22.57)];
        [star4Path closePath];
        [color11 setFill];
        [star4Path fill];
        [shadow2Color setStroke];
        star4Path.lineWidth = 1;
        [star4Path stroke];


        //// Star 6 Drawing
        UIBezierPath* star6Path = [UIBezierPath bezierPath];
        [star6Path moveToPoint: CGPointMake(159.5, 64.5)];
        [star6Path addLineToPoint: CGPointMake(163.38, 70.16)];
        [star6Path addLineToPoint: CGPointMake(169.96, 72.1)];
        [star6Path addLineToPoint: CGPointMake(165.78, 77.54)];
        [star6Path addLineToPoint: CGPointMake(165.97, 84.4)];
        [star6Path addLineToPoint: CGPointMake(159.5, 82.1)];
        [star6Path addLineToPoint: CGPointMake(153.03, 84.4)];
        [star6Path addLineToPoint: CGPointMake(153.22, 77.54)];
        [star6Path addLineToPoint: CGPointMake(149.04, 72.1)];
        [star6Path addLineToPoint: CGPointMake(155.62, 70.16)];
        [star6Path closePath];
        [color11 setFill];
        [star6Path fill];
        [shadow2Color setStroke];
        star6Path.lineWidth = 1;
        [star6Path stroke];


        //// Star 7 Drawing
        UIBezierPath* star7Path = [UIBezierPath bezierPath];
        [star7Path moveToPoint: CGPointMake(106, 99)];
        [star7Path addLineToPoint: CGPointMake(109.17, 103.63)];
        [star7Path addLineToPoint: CGPointMake(114.56, 105.22)];
        [star7Path addLineToPoint: CGPointMake(111.14, 109.67)];
        [star7Path addLineToPoint: CGPointMake(111.29, 115.28)];
        [star7Path addLineToPoint: CGPointMake(106, 113.4)];
        [star7Path addLineToPoint: CGPointMake(100.71, 115.28)];
        [star7Path addLineToPoint: CGPointMake(100.86, 109.67)];
        [star7Path addLineToPoint: CGPointMake(97.44, 105.22)];
        [star7Path addLineToPoint: CGPointMake(102.83, 103.63)];
        [star7Path closePath];
        [color11 setFill];
        [star7Path fill];
        [shadow2Color setStroke];
        star7Path.lineWidth = 1;
        [star7Path stroke];


        //// Star 8 Drawing
        UIBezierPath* star8Path = [UIBezierPath bezierPath];
        [star8Path moveToPoint: CGPointMake(30.5, 11.5)];
        [star8Path addLineToPoint: CGPointMake(33.67, 16.13)];
        [star8Path addLineToPoint: CGPointMake(39.06, 17.72)];
        [star8Path addLineToPoint: CGPointMake(35.64, 22.17)];
        [star8Path addLineToPoint: CGPointMake(35.79, 27.78)];
        [star8Path addLineToPoint: CGPointMake(30.5, 25.9)];
        [star8Path addLineToPoint: CGPointMake(25.21, 27.78)];
        [star8Path addLineToPoint: CGPointMake(25.36, 22.17)];
        [star8Path addLineToPoint: CGPointMake(21.94, 17.72)];
        [star8Path addLineToPoint: CGPointMake(27.33, 16.13)];
        [star8Path closePath];
        [color11 setFill];
        [star8Path fill];
        [shadow2Color setStroke];
        star8Path.lineWidth = 1;
        [star8Path stroke];


        //// Star 9 Drawing
        UIBezierPath* star9Path = [UIBezierPath bezierPath];
        [star9Path moveToPoint: CGPointMake(74.5, 72)];
        [star9Path addLineToPoint: CGPointMake(76.62, 75.09)];
        [star9Path addLineToPoint: CGPointMake(80.21, 76.15)];
        [star9Path addLineToPoint: CGPointMake(77.92, 79.11)];
        [star9Path addLineToPoint: CGPointMake(78.03, 82.85)];
        [star9Path addLineToPoint: CGPointMake(74.5, 81.6)];
        [star9Path addLineToPoint: CGPointMake(70.97, 82.85)];
        [star9Path addLineToPoint: CGPointMake(71.08, 79.11)];
        [star9Path addLineToPoint: CGPointMake(68.79, 76.15)];
        [star9Path addLineToPoint: CGPointMake(72.38, 75.09)];
        [star9Path closePath];
        [color11 setFill];
        [star9Path fill];
        [shadow2Color setStroke];
        star9Path.lineWidth = 1;
        [star9Path stroke];


        //// Star 10 Drawing
        UIBezierPath* star10Path = [UIBezierPath bezierPath];
        [star10Path moveToPoint: CGPointMake(25, 83.5)];
        [star10Path addLineToPoint: CGPointMake(28.17, 88.13)];
        [star10Path addLineToPoint: CGPointMake(33.56, 89.72)];
        [star10Path addLineToPoint: CGPointMake(30.14, 94.17)];
        [star10Path addLineToPoint: CGPointMake(30.29, 99.78)];
        [star10Path addLineToPoint: CGPointMake(25, 97.9)];
        [star10Path addLineToPoint: CGPointMake(19.71, 99.78)];
        [star10Path addLineToPoint: CGPointMake(19.86, 94.17)];
        [star10Path addLineToPoint: CGPointMake(16.44, 89.72)];
        [star10Path addLineToPoint: CGPointMake(21.83, 88.13)];
        [star10Path closePath];
        [color11 setFill];
        [star10Path fill];
        [shadow2Color setStroke];
        star10Path.lineWidth = 1;
        [star10Path stroke];


        //// Star 11 Drawing
        UIBezierPath* star11Path = [UIBezierPath bezierPath];
        [star11Path moveToPoint: CGPointMake(185.5, 133.5)];
        [star11Path addLineToPoint: CGPointMake(189.38, 139.16)];
        [star11Path addLineToPoint: CGPointMake(195.96, 141.1)];
        [star11Path addLineToPoint: CGPointMake(191.78, 146.54)];
        [star11Path addLineToPoint: CGPointMake(191.97, 153.4)];
        [star11Path addLineToPoint: CGPointMake(185.5, 151.1)];
        [star11Path addLineToPoint: CGPointMake(179.03, 153.4)];
        [star11Path addLineToPoint: CGPointMake(179.22, 146.54)];
        [star11Path addLineToPoint: CGPointMake(175.04, 141.1)];
        [star11Path addLineToPoint: CGPointMake(181.62, 139.16)];
        [star11Path closePath];
        [color11 setFill];
        [star11Path fill];
        [shadow2Color setStroke];
        star11Path.lineWidth = 1;
        [star11Path stroke];


        //// Star 14 Drawing
        UIBezierPath* star14Path = [UIBezierPath bezierPath];
        [star14Path moveToPoint: CGPointMake(51.5, 146.5)];
        [star14Path addLineToPoint: CGPointMake(56.08, 153.19)];
        [star14Path addLineToPoint: CGPointMake(63.86, 155.48)];
        [star14Path addLineToPoint: CGPointMake(58.92, 161.91)];
        [star14Path addLineToPoint: CGPointMake(59.14, 170.02)];
        [star14Path addLineToPoint: CGPointMake(51.5, 167.3)];
        [star14Path addLineToPoint: CGPointMake(43.86, 170.02)];
        [star14Path addLineToPoint: CGPointMake(44.08, 161.91)];
        [star14Path addLineToPoint: CGPointMake(39.14, 155.48)];
        [star14Path addLineToPoint: CGPointMake(46.92, 153.19)];
        [star14Path closePath];
        [color11 setFill];
        [star14Path fill];
        [shadow2Color setStroke];
        star14Path.lineWidth = 1;
        [star14Path stroke];


        //// Star 17 Drawing
        UIBezierPath* star17Path = [UIBezierPath bezierPath];
        [star17Path moveToPoint: CGPointMake(83.5, 65.5)];
        [star17Path addLineToPoint: CGPointMake(84.56, 67.04)];
        [star17Path addLineToPoint: CGPointMake(86.35, 67.57)];
        [star17Path addLineToPoint: CGPointMake(85.21, 69.06)];
        [star17Path addLineToPoint: CGPointMake(85.26, 70.93)];
        [star17Path addLineToPoint: CGPointMake(83.5, 70.3)];
        [star17Path addLineToPoint: CGPointMake(81.74, 70.93)];
        [star17Path addLineToPoint: CGPointMake(81.79, 69.06)];
        [star17Path addLineToPoint: CGPointMake(80.65, 67.57)];
        [star17Path addLineToPoint: CGPointMake(82.44, 67.04)];
        [star17Path closePath];
        [color11 setFill];
        [star17Path fill];
        [shadow2Color setStroke];
        star17Path.lineWidth = 1;
        [star17Path stroke];


        //// Star 22 Drawing
        UIBezierPath* star22Path = [UIBezierPath bezierPath];
        [star22Path moveToPoint: CGPointMake(92.5, 59.5)];
        [star22Path addLineToPoint: CGPointMake(93.56, 61.04)];
        [star22Path addLineToPoint: CGPointMake(95.35, 61.57)];
        [star22Path addLineToPoint: CGPointMake(94.21, 63.06)];
        [star22Path addLineToPoint: CGPointMake(94.26, 64.93)];
        [star22Path addLineToPoint: CGPointMake(92.5, 64.3)];
        [star22Path addLineToPoint: CGPointMake(90.74, 64.93)];
        [star22Path addLineToPoint: CGPointMake(90.79, 63.06)];
        [star22Path addLineToPoint: CGPointMake(89.65, 61.57)];
        [star22Path addLineToPoint: CGPointMake(91.44, 61.04)];
        [star22Path closePath];
        [color11 setFill];
        [star22Path fill];
        [shadow2Color setStroke];
        star22Path.lineWidth = 1;
        [star22Path stroke];
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(211.5, 31, 133, 135)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [oval86Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(278, 31), CGPointMake(278, 166), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(276, 71.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval87Path fill];
        [color setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(263, 68.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval88Path fill];
        [color setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(263.5, 75.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval89Path fill];
        [color setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier2Path fill];
        [color setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];


        //// Oval 90 Drawing
        UIBezierPath* oval90Path = [UIBezierPath bezierPath];
        [oval90Path moveToPoint: CGPointMake(259, 64.5)];
        [oval90Path addCurveToPoint: CGPointMake(255.15, 82.03) controlPoint1: CGPointMake(260.89, 67.43) controlPoint2: CGPointMake(257.33, 74.89)];
        [oval90Path addCurveToPoint: CGPointMake(259, 97.5) controlPoint1: CGPointMake(253.03, 88.97) controlPoint2: CGPointMake(252.22, 95.62)];
        [oval90Path addCurveToPoint: CGPointMake(247, 126.5) controlPoint1: CGPointMake(274.41, 101.78) controlPoint2: CGPointMake(247, 115.66)];
        [oval90Path addCurveToPoint: CGPointMake(277.5, 165.5) controlPoint1: CGPointMake(247, 163.78) controlPoint2: CGPointMake(314.78, 165.5)];
        [oval90Path addCurveToPoint: CGPointMake(210, 98) controlPoint1: CGPointMake(240.22, 165.5) controlPoint2: CGPointMake(210, 135.28)];
        [oval90Path addCurveToPoint: CGPointMake(277.5, 30.5) controlPoint1: CGPointMake(210, 60.72) controlPoint2: CGPointMake(240.22, 30.5)];
        [oval90Path addCurveToPoint: CGPointMake(259, 64.5) controlPoint1: CGPointMake(294.25, 30.5) controlPoint2: CGPointMake(252.54, 54.51)];
        [oval90Path closePath];
        CGContextSaveGState(context);
        [oval90Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(249.35, 30.5), CGPointMake(249.35, 165.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];


        //// Oval 91 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 237.95, 73.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval91Path fill];
        [UIColor.darkGrayColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];

        CGContextRestoreGState(context);


        //// Oval 92 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 251.06, 80.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval92Path fill];
        [UIColor.darkGrayColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier3Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier3Path.lineWidth = 1;
        [bezier3Path stroke];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier4Path.lineWidth = 1;
        [bezier4Path stroke];


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier5Path.lineWidth = 1;
        [bezier5Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(240, 72.5, 4, 4)];
        [color setFill];
        [oval93Path fill];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250, 75, 3.5, 4)];
        [color setFill];
        [oval94Path fill];


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
        [bezier6Path moveToPoint: CGPointMake(245.5, 133)];
        [bezier6Path addCurveToPoint: CGPointMake(245.51, 127.11) controlPoint1: CGPointMake(249.37, 130.51) controlPoint2: CGPointMake(247.64, 125.5)];
        [bezier6Path addCurveToPoint: CGPointMake(227, 120) controlPoint1: CGPointMake(240.35, 131.02) controlPoint2: CGPointMake(227, 120)];
        [bezier6Path addCurveToPoint: CGPointMake(245.5, 133) controlPoint1: CGPointMake(227, 120) controlPoint2: CGPointMake(239.98, 136.55)];
        [bezier6Path closePath];
        [UIColor.whiteColor setFill];
        [bezier6Path fill];
        [color setStroke];
        bezier6Path.lineWidth = 1;
        [bezier6Path stroke];


        //// Bezier 7 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 277.6, 126.87);
        CGContextRotateCTM(context, -9.13 * M_PI / 180);

        UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
        [bezier7Path moveToPoint: CGPointMake(-14.49, -6.25)];
        [bezier7Path addCurveToPoint: CGPointMake(18.65, -6.25) controlPoint1: CGPointMake(-1.66, 10.32) controlPoint2: CGPointMake(18.65, -6.25)];
        [bezier7Path addLineToPoint: CGPointMake(1.69, 11.16)];
        [bezier7Path addLineToPoint: CGPointMake(-6.34, 7.76)];
        [bezier7Path addCurveToPoint: CGPointMake(-14.49, -6.25) controlPoint1: CGPointMake(-6.34, 7.76) controlPoint2: CGPointMake(-27.32, -22.81)];
        [bezier7Path closePath];
        [color2 setFill];
        [bezier7Path fill];
        [UIColor.blackColor setStroke];
        bezier7Path.lineWidth = 1;
        [bezier7Path stroke];

        CGContextRestoreGState(context);


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(276.5, 77.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval95Path fill];
        [color setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas6
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* moonFrontShadowColor = [UIColor colorWithRed: 1 green: 0.985 blue: 0.815 alpha: 1];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];
    NSShadow* moonFrontShadow = [[NSShadow alloc] init];
    [moonFrontShadow setShadowColor: [moonFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(moonFrontShadowColor.CGColor) * 0.14]];
    [moonFrontShadow setShadowOffset: CGSizeMake(28.1, 36.1)];
    [moonFrontShadow setShadowBlurRadius: 37];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(221.5, 27, 133, 135)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(288, 27), CGPointMake(288, 162), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(286, 67.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 64.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273.5, 71.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(269, 60.5)];
        [oval58Path addCurveToPoint: CGPointMake(265.15, 78.03) controlPoint1: CGPointMake(270.89, 63.43) controlPoint2: CGPointMake(267.33, 70.89)];
        [oval58Path addCurveToPoint: CGPointMake(269, 93.5) controlPoint1: CGPointMake(263.03, 84.97) controlPoint2: CGPointMake(262.22, 91.62)];
        [oval58Path addCurveToPoint: CGPointMake(257, 122.5) controlPoint1: CGPointMake(284.41, 97.78) controlPoint2: CGPointMake(257, 111.66)];
        [oval58Path addCurveToPoint: CGPointMake(287.5, 161.5) controlPoint1: CGPointMake(257, 159.78) controlPoint2: CGPointMake(324.78, 161.5)];
        [oval58Path addCurveToPoint: CGPointMake(220, 94) controlPoint1: CGPointMake(250.22, 161.5) controlPoint2: CGPointMake(220, 131.28)];
        [oval58Path addCurveToPoint: CGPointMake(287.5, 26.5) controlPoint1: CGPointMake(220, 56.72) controlPoint2: CGPointMake(250.22, 26.5)];
        [oval58Path addCurveToPoint: CGPointMake(269, 60.5) controlPoint1: CGPointMake(304.25, 26.5) controlPoint2: CGPointMake(262.54, 50.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(259.35, 26.5), CGPointMake(259.35, 161.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 247.95, 69.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 261.06, 76.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250, 68.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 71, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(255.5, 129)];
        [bezier21Path addCurveToPoint: CGPointMake(255.51, 123.11) controlPoint1: CGPointMake(259.37, 126.51) controlPoint2: CGPointMake(257.64, 121.5)];
        [bezier21Path addCurveToPoint: CGPointMake(237, 116) controlPoint1: CGPointMake(250.35, 127.02) controlPoint2: CGPointMake(237, 116)];
        [bezier21Path addCurveToPoint: CGPointMake(255.5, 129) controlPoint1: CGPointMake(237, 116) controlPoint2: CGPointMake(249.98, 132.55)];
        [bezier21Path closePath];
        [UIColor.whiteColor setFill];
        [bezier21Path fill];
        [color setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];


        //// Bezier 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 287.6, 122.87);
        CGContextRotateCTM(context, -9.13 * M_PI / 180);

        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(-14.49, -6.25)];
        [bezier22Path addCurveToPoint: CGPointMake(18.65, -6.25) controlPoint1: CGPointMake(-1.66, 10.32) controlPoint2: CGPointMake(18.65, -6.25)];
        [bezier22Path addLineToPoint: CGPointMake(1.69, 11.16)];
        [bezier22Path addLineToPoint: CGPointMake(-6.34, 7.76)];
        [bezier22Path addCurveToPoint: CGPointMake(-14.49, -6.25) controlPoint1: CGPointMake(-6.34, 7.76) controlPoint2: CGPointMake(-27.32, -22.81)];
        [bezier22Path closePath];
        [color2 setFill];
        [bezier22Path fill];
        [UIColor.blackColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(286.5, 73.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(378, 55, 20, 18)];
        [color10 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(392.5, 47.5, 20, 18)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(378, 46, 20, 16)];
        [color10 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360, 48.5, 20, 17)];
        [color10 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(342, 59, 16, 13)];
        [color10 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 55.5, 19, 16)];
        [color10 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363.5, 55, 21, 15)];
        [color10 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(398, 54, 21, 19)];
        [color10 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(385.5, 51.5, 20, 15)];
        [color10 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 4 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 315.96, 131.4);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 14.09)];
        [color3 setFill];
        [oval4Path fill];
        [UIColor.blackColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];

        CGContextRestoreGState(context);


        //// Oval 5 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 327.56, 131.09);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 16)];
        [color3 setFill];
        [oval5Path fill];
        [UIColor.blackColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];

        CGContextRestoreGState(context);


        //// Oval 6 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 339.5, 132.61);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color3 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];

        CGContextRestoreGState(context);


        //// Oval 9 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 377.47, 123.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color3 setFill];
        [oval9Path fill];
        [UIColor.blackColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];

        CGContextRestoreGState(context);


        //// Oval 11 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 334.89, 127.41);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.97, 12.7)];
        [color3 setFill];
        [oval11Path fill];
        [UIColor.blackColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];

        CGContextRestoreGState(context);


        //// Oval 12 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 344.5, 123.5);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.28, 14.03)];
        [color3 setFill];
        [oval12Path fill];
        [UIColor.blackColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];

        CGContextRestoreGState(context);


        //// Oval 13 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 354.03, 126.63);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 13.89)];
        [color3 setFill];
        [oval13Path fill];
        [UIColor.blackColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];

        CGContextRestoreGState(context);


        //// Oval 34 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 387.95, 135.4);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.7, 12.33)];
        [color3 setFill];
        [oval34Path fill];
        [UIColor.blackColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];

        CGContextRestoreGState(context);


        //// Oval 10 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 380.78, 129.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.7, 18)];
        [color3 setFill];
        [oval10Path fill];
        [UIColor.blackColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];

        CGContextRestoreGState(context);


        //// Oval 14 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 368.29, 126.36);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 13.87)];
        [color3 setFill];
        [oval14Path fill];
        [UIColor.blackColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];

        CGContextRestoreGState(context);


        //// Oval 8 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 365.77, 134.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 15.71)];
        [color3 setFill];
        [oval8Path fill];
        [UIColor.blackColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];

        CGContextRestoreGState(context);


        //// Oval 7 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 351.48, 135.41);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.14, 13.89)];
        [color3 setFill];
        [oval7Path fill];
        [UIColor.blackColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(17.5, 87.5, 17, 14)];
        [color10 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(9.5, 92.5, 21, 18)];
        [color10 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0.5, 101.5, 17, 14)];
        [color10 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(32.5, 88.5, 20, 17)];
        [color10 setFill];
        [oval40Path fill];
        [UIColor.blackColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 99.5, 20, 18)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(63, 92, 20, 18)];
        [color10 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 90.5, 20, 16)];
        [color10 setFill];
        [oval36Path fill];
        [UIColor.blackColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(25.5, 98.5, 23, 17)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69.5, 100.5, 19, 17)];
        [color10 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56, 96, 20, 15)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15.5, 101.5, 20, 17)];
        [color10 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(38.5, 100.5, 19, 13)];
        [color10 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 33 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 71.5, 49.57);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13, 10)];
        [color3 setFill];
        [oval33Path fill];
        [UIColor.blackColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];

        CGContextRestoreGState(context);


        //// Oval 31 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.1, 37.18);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 15.68)];
        [color3 setFill];
        [oval31Path fill];
        [UIColor.blackColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];

        CGContextRestoreGState(context);


        //// Oval 30 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 80.03, 44.4);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 12.8)];
        [color3 setFill];
        [oval30Path fill];
        [UIColor.blackColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];

        CGContextRestoreGState(context);


        //// Oval 26 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 101.11, 42.49);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 14)];
        [color3 setFill];
        [oval26Path fill];
        [UIColor.blackColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];

        CGContextRestoreGState(context);


        //// Oval 27 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 102.11, 54.47);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval27Path fill];
        [UIColor.blackColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];

        CGContextRestoreGState(context);


        //// Oval 25 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 170.86, 40.29);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 17.46)];
        [color3 setFill];
        [oval25Path fill];
        [UIColor.blackColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];

        CGContextRestoreGState(context);


        //// Oval 23 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 144.6, 39.68);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 15.68)];
        [color3 setFill];
        [oval23Path fill];
        [UIColor.blackColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];

        CGContextRestoreGState(context);


        //// Oval 18 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 154.75, 48.72);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 19)];
        [color3 setFill];
        [oval18Path fill];
        [UIColor.blackColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];

        CGContextRestoreGState(context);


        //// Oval 20 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 177.8, 43.18);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16.44)];
        [color3 setFill];
        [oval20Path fill];
        [UIColor.blackColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];

        CGContextRestoreGState(context);


        //// Oval 21 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.78, 47.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color3 setFill];
        [oval21Path fill];
        [UIColor.blackColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];

        CGContextRestoreGState(context);


        //// Oval 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 129.67, 41.14);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 14)];
        [color3 setFill];
        [oval22Path fill];
        [UIColor.blackColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 24 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 115.22, 42.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval24Path fill];
        [UIColor.blackColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];

        CGContextRestoreGState(context);


        //// Oval 29 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 91, 47.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval29Path fill];
        [UIColor.blackColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];

        CGContextRestoreGState(context);


        //// Oval 15 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 114.25, 51.13);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18, 14.41)];
        [color3 setFill];
        [oval15Path fill];
        [UIColor.blackColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];

        CGContextRestoreGState(context);


        //// Oval 32 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 80.5, 53.57);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13, 10)];
        [color3 setFill];
        [oval32Path fill];
        [UIColor.blackColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];

        CGContextRestoreGState(context);


        //// Oval 28 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 91, 53.58);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval28Path fill];
        [UIColor.blackColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];

        CGContextRestoreGState(context);


        //// Oval 16 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 129.45, 47.71);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 18)];
        [color3 setFill];
        [oval16Path fill];
        [UIColor.blackColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];

        CGContextRestoreGState(context);


        //// Oval 17 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 145.11, 52.39);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color3 setFill];
        [oval17Path fill];
        [UIColor.blackColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];

        CGContextRestoreGState(context);


        //// Oval 19 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 169.06, 50.54);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 18)];
        [color3 setFill];
        [oval19Path fill];
        [UIColor.blackColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 109 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 142.33, 116.11);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.78, 16.2)];
        [color3 setFill];
        [oval109Path fill];
        [UIColor.blackColor setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];

        CGContextRestoreGState(context);


        //// Oval 110 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 155.29, 122.24);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.76, 18.03)];
        [color3 setFill];
        [oval110Path fill];
        [UIColor.blackColor setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];

        CGContextRestoreGState(context);


        //// Oval 111 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 129.04, 121.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.78, 16.19)];
        [color3 setFill];
        [oval111Path fill];
        [UIColor.blackColor setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];

        CGContextRestoreGState(context);


        //// Oval 112 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.43, 130.25);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.77, 17.11)];
        [color3 setFill];
        [oval112Path fill];
        [UIColor.blackColor setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];

        CGContextRestoreGState(context);


        //// Oval 113 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 114.16, 131.3);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.78, 16.19)];
        [color3 setFill];
        [oval113Path fill];
        [UIColor.blackColor setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];

        CGContextRestoreGState(context);


        //// Oval 114 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 129.8, 135.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.81, 14.4)];
        [color3 setFill];
        [oval114Path fill];
        [UIColor.blackColor setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];

        CGContextRestoreGState(context);


        //// Oval 115 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 138.39, 131.46);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.75, 18.87)];
        [color3 setFill];
        [oval115Path fill];
        [UIColor.blackColor setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];

        CGContextRestoreGState(context);


        //// Oval 116 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 153.78, 133.87);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.78, 16.19)];
        [color3 setFill];
        [oval116Path fill];
        [UIColor.blackColor setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];

        CGContextRestoreGState(context);


        //// Oval 117 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 165.19, 124.82);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.78, 17.13)];
        [color3 setFill];
        [oval117Path fill];
        [UIColor.blackColor setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];

        CGContextRestoreGState(context);


        //// Oval 118 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.49, 130.88);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.79, 16.21)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.blackColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];

        CGContextRestoreGState(context);


        //// Oval 119 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 113.25, 124.53);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.8, 14.36)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.blackColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas7
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* shadow2Color = [UIColor colorWithRed: 1 green: 0.799 blue: 0.229 alpha: 1];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* moonFrontShadowColor = [UIColor colorWithRed: 1 green: 0.985 blue: 0.815 alpha: 1];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];
    NSShadow* moonFrontShadow = [[NSShadow alloc] init];
    [moonFrontShadow setShadowColor: [moonFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(moonFrontShadowColor.CGColor) * 0.14]];
    [moonFrontShadow setShadowOffset: CGSizeMake(28.1, 36.1)];
    [moonFrontShadow setShadowBlurRadius: 37];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Star 21 Drawing
    UIBezierPath* star21Path = [UIBezierPath bezierPath];
    [star21Path moveToPoint: CGPointMake(85, 32)];
    [star21Path addLineToPoint: CGPointMake(87.82, 36.12)];
    [star21Path addLineToPoint: CGPointMake(92.61, 37.53)];
    [star21Path addLineToPoint: CGPointMake(89.57, 41.48)];
    [star21Path addLineToPoint: CGPointMake(89.7, 46.47)];
    [star21Path addLineToPoint: CGPointMake(85, 44.8)];
    [star21Path addLineToPoint: CGPointMake(80.3, 46.47)];
    [star21Path addLineToPoint: CGPointMake(80.43, 41.48)];
    [star21Path addLineToPoint: CGPointMake(77.39, 37.53)];
    [star21Path addLineToPoint: CGPointMake(82.18, 36.12)];
    [star21Path closePath];
    [color11 setFill];
    [star21Path fill];
    [shadow2Color setStroke];
    star21Path.lineWidth = 1;
    [star21Path stroke];


    //// Star 23 Drawing
    UIBezierPath* star23Path = [UIBezierPath bezierPath];
    [star23Path moveToPoint: CGPointMake(129.5, 51.5)];
    [star23Path addLineToPoint: CGPointMake(131.97, 55.1)];
    [star23Path addLineToPoint: CGPointMake(136.16, 56.34)];
    [star23Path addLineToPoint: CGPointMake(133.49, 59.8)];
    [star23Path addLineToPoint: CGPointMake(133.61, 64.16)];
    [star23Path addLineToPoint: CGPointMake(129.5, 62.7)];
    [star23Path addLineToPoint: CGPointMake(125.39, 64.16)];
    [star23Path addLineToPoint: CGPointMake(125.51, 59.8)];
    [star23Path addLineToPoint: CGPointMake(122.84, 56.34)];
    [star23Path addLineToPoint: CGPointMake(127.03, 55.1)];
    [star23Path closePath];
    [color11 setFill];
    [star23Path fill];
    [shadow2Color setStroke];
    star23Path.lineWidth = 1;
    [star23Path stroke];


    //// Star 24 Drawing
    UIBezierPath* star24Path = [UIBezierPath bezierPath];
    [star24Path moveToPoint: CGPointMake(129.5, 10.5)];
    [star24Path addLineToPoint: CGPointMake(132.32, 14.62)];
    [star24Path addLineToPoint: CGPointMake(137.11, 16.03)];
    [star24Path addLineToPoint: CGPointMake(134.07, 19.98)];
    [star24Path addLineToPoint: CGPointMake(134.2, 24.97)];
    [star24Path addLineToPoint: CGPointMake(129.5, 23.3)];
    [star24Path addLineToPoint: CGPointMake(124.8, 24.97)];
    [star24Path addLineToPoint: CGPointMake(124.93, 19.98)];
    [star24Path addLineToPoint: CGPointMake(121.89, 16.03)];
    [star24Path addLineToPoint: CGPointMake(126.68, 14.62)];
    [star24Path closePath];
    [color11 setFill];
    [star24Path fill];
    [shadow2Color setStroke];
    star24Path.lineWidth = 1;
    [star24Path stroke];


    //// Star 25 Drawing
    UIBezierPath* star25Path = [UIBezierPath bezierPath];
    [star25Path moveToPoint: CGPointMake(170.5, 13.5)];
    [star25Path addLineToPoint: CGPointMake(172.26, 16.07)];
    [star25Path addLineToPoint: CGPointMake(175.26, 16.95)];
    [star25Path addLineToPoint: CGPointMake(173.35, 19.43)];
    [star25Path addLineToPoint: CGPointMake(173.44, 22.55)];
    [star25Path addLineToPoint: CGPointMake(170.5, 21.5)];
    [star25Path addLineToPoint: CGPointMake(167.56, 22.55)];
    [star25Path addLineToPoint: CGPointMake(167.65, 19.43)];
    [star25Path addLineToPoint: CGPointMake(165.74, 16.95)];
    [star25Path addLineToPoint: CGPointMake(168.74, 16.07)];
    [star25Path closePath];
    [color11 setFill];
    [star25Path fill];
    [shadow2Color setStroke];
    star25Path.lineWidth = 1;
    [star25Path stroke];


    //// Star 26 Drawing
    UIBezierPath* star26Path = [UIBezierPath bezierPath];
    [star26Path moveToPoint: CGPointMake(183, 58)];
    [star26Path addLineToPoint: CGPointMake(186.88, 63.66)];
    [star26Path addLineToPoint: CGPointMake(193.46, 65.6)];
    [star26Path addLineToPoint: CGPointMake(189.28, 71.04)];
    [star26Path addLineToPoint: CGPointMake(189.47, 77.9)];
    [star26Path addLineToPoint: CGPointMake(183, 75.6)];
    [star26Path addLineToPoint: CGPointMake(176.53, 77.9)];
    [star26Path addLineToPoint: CGPointMake(176.72, 71.04)];
    [star26Path addLineToPoint: CGPointMake(172.54, 65.6)];
    [star26Path addLineToPoint: CGPointMake(179.12, 63.66)];
    [star26Path closePath];
    [color11 setFill];
    [star26Path fill];
    [shadow2Color setStroke];
    star26Path.lineWidth = 1;
    [star26Path stroke];


    //// Star 27 Drawing
    UIBezierPath* star27Path = [UIBezierPath bezierPath];
    [star27Path moveToPoint: CGPointMake(129.5, 92.5)];
    [star27Path addLineToPoint: CGPointMake(132.67, 97.13)];
    [star27Path addLineToPoint: CGPointMake(138.06, 98.72)];
    [star27Path addLineToPoint: CGPointMake(134.64, 103.17)];
    [star27Path addLineToPoint: CGPointMake(134.79, 108.78)];
    [star27Path addLineToPoint: CGPointMake(129.5, 106.9)];
    [star27Path addLineToPoint: CGPointMake(124.21, 108.78)];
    [star27Path addLineToPoint: CGPointMake(124.36, 103.17)];
    [star27Path addLineToPoint: CGPointMake(120.94, 98.72)];
    [star27Path addLineToPoint: CGPointMake(126.33, 97.13)];
    [star27Path closePath];
    [color11 setFill];
    [star27Path fill];
    [shadow2Color setStroke];
    star27Path.lineWidth = 1;
    [star27Path stroke];


    //// Star 28 Drawing
    UIBezierPath* star28Path = [UIBezierPath bezierPath];
    [star28Path moveToPoint: CGPointMake(54, 5)];
    [star28Path addLineToPoint: CGPointMake(57.17, 9.63)];
    [star28Path addLineToPoint: CGPointMake(62.56, 11.22)];
    [star28Path addLineToPoint: CGPointMake(59.14, 15.67)];
    [star28Path addLineToPoint: CGPointMake(59.29, 21.28)];
    [star28Path addLineToPoint: CGPointMake(54, 19.4)];
    [star28Path addLineToPoint: CGPointMake(48.71, 21.28)];
    [star28Path addLineToPoint: CGPointMake(48.86, 15.67)];
    [star28Path addLineToPoint: CGPointMake(45.44, 11.22)];
    [star28Path addLineToPoint: CGPointMake(50.83, 9.63)];
    [star28Path closePath];
    [color11 setFill];
    [star28Path fill];
    [shadow2Color setStroke];
    star28Path.lineWidth = 1;
    [star28Path stroke];


    //// Star 29 Drawing
    UIBezierPath* star29Path = [UIBezierPath bezierPath];
    [star29Path moveToPoint: CGPointMake(98, 65.5)];
    [star29Path addLineToPoint: CGPointMake(100.12, 68.59)];
    [star29Path addLineToPoint: CGPointMake(103.71, 69.65)];
    [star29Path addLineToPoint: CGPointMake(101.42, 72.61)];
    [star29Path addLineToPoint: CGPointMake(101.53, 76.35)];
    [star29Path addLineToPoint: CGPointMake(98, 75.1)];
    [star29Path addLineToPoint: CGPointMake(94.47, 76.35)];
    [star29Path addLineToPoint: CGPointMake(94.58, 72.61)];
    [star29Path addLineToPoint: CGPointMake(92.29, 69.65)];
    [star29Path addLineToPoint: CGPointMake(95.88, 68.59)];
    [star29Path closePath];
    [color11 setFill];
    [star29Path fill];
    [shadow2Color setStroke];
    star29Path.lineWidth = 1;
    [star29Path stroke];


    //// Star 30 Drawing
    UIBezierPath* star30Path = [UIBezierPath bezierPath];
    [star30Path moveToPoint: CGPointMake(48.5, 77)];
    [star30Path addLineToPoint: CGPointMake(51.67, 81.63)];
    [star30Path addLineToPoint: CGPointMake(57.06, 83.22)];
    [star30Path addLineToPoint: CGPointMake(53.64, 87.67)];
    [star30Path addLineToPoint: CGPointMake(53.79, 93.28)];
    [star30Path addLineToPoint: CGPointMake(48.5, 91.4)];
    [star30Path addLineToPoint: CGPointMake(43.21, 93.28)];
    [star30Path addLineToPoint: CGPointMake(43.36, 87.67)];
    [star30Path addLineToPoint: CGPointMake(39.94, 83.22)];
    [star30Path addLineToPoint: CGPointMake(45.33, 81.63)];
    [star30Path closePath];
    [color11 setFill];
    [star30Path fill];
    [shadow2Color setStroke];
    star30Path.lineWidth = 1;
    [star30Path stroke];


    //// Star 31 Drawing
    UIBezierPath* star31Path = [UIBezierPath bezierPath];
    [star31Path moveToPoint: CGPointMake(209, 127)];
    [star31Path addLineToPoint: CGPointMake(212.88, 132.66)];
    [star31Path addLineToPoint: CGPointMake(219.46, 134.6)];
    [star31Path addLineToPoint: CGPointMake(215.28, 140.04)];
    [star31Path addLineToPoint: CGPointMake(215.47, 146.9)];
    [star31Path addLineToPoint: CGPointMake(209, 144.6)];
    [star31Path addLineToPoint: CGPointMake(202.53, 146.9)];
    [star31Path addLineToPoint: CGPointMake(202.72, 140.04)];
    [star31Path addLineToPoint: CGPointMake(198.54, 134.6)];
    [star31Path addLineToPoint: CGPointMake(205.12, 132.66)];
    [star31Path closePath];
    [color11 setFill];
    [star31Path fill];
    [shadow2Color setStroke];
    star31Path.lineWidth = 1;
    [star31Path stroke];


    //// Star 32 Drawing
    UIBezierPath* star32Path = [UIBezierPath bezierPath];
    [star32Path moveToPoint: CGPointMake(75, 140)];
    [star32Path addLineToPoint: CGPointMake(79.58, 146.69)];
    [star32Path addLineToPoint: CGPointMake(87.36, 148.98)];
    [star32Path addLineToPoint: CGPointMake(82.42, 155.41)];
    [star32Path addLineToPoint: CGPointMake(82.64, 163.52)];
    [star32Path addLineToPoint: CGPointMake(75, 160.8)];
    [star32Path addLineToPoint: CGPointMake(67.36, 163.52)];
    [star32Path addLineToPoint: CGPointMake(67.58, 155.41)];
    [star32Path addLineToPoint: CGPointMake(62.64, 148.98)];
    [star32Path addLineToPoint: CGPointMake(70.42, 146.69)];
    [star32Path closePath];
    [color11 setFill];
    [star32Path fill];
    [shadow2Color setStroke];
    star32Path.lineWidth = 1;
    [star32Path stroke];


    //// Star 33 Drawing
    UIBezierPath* star33Path = [UIBezierPath bezierPath];
    [star33Path moveToPoint: CGPointMake(107, 59)];
    [star33Path addLineToPoint: CGPointMake(108.06, 60.54)];
    [star33Path addLineToPoint: CGPointMake(109.85, 61.07)];
    [star33Path addLineToPoint: CGPointMake(108.71, 62.56)];
    [star33Path addLineToPoint: CGPointMake(108.76, 64.43)];
    [star33Path addLineToPoint: CGPointMake(107, 63.8)];
    [star33Path addLineToPoint: CGPointMake(105.24, 64.43)];
    [star33Path addLineToPoint: CGPointMake(105.29, 62.56)];
    [star33Path addLineToPoint: CGPointMake(104.15, 61.07)];
    [star33Path addLineToPoint: CGPointMake(105.94, 60.54)];
    [star33Path closePath];
    [color11 setFill];
    [star33Path fill];
    [shadow2Color setStroke];
    star33Path.lineWidth = 1;
    [star33Path stroke];


    //// Star 34 Drawing
    UIBezierPath* star34Path = [UIBezierPath bezierPath];
    [star34Path moveToPoint: CGPointMake(116, 53)];
    [star34Path addLineToPoint: CGPointMake(117.06, 54.54)];
    [star34Path addLineToPoint: CGPointMake(118.85, 55.07)];
    [star34Path addLineToPoint: CGPointMake(117.71, 56.56)];
    [star34Path addLineToPoint: CGPointMake(117.76, 58.43)];
    [star34Path addLineToPoint: CGPointMake(116, 57.8)];
    [star34Path addLineToPoint: CGPointMake(114.24, 58.43)];
    [star34Path addLineToPoint: CGPointMake(114.29, 56.56)];
    [star34Path addLineToPoint: CGPointMake(113.15, 55.07)];
    [star34Path addLineToPoint: CGPointMake(114.94, 54.54)];
    [star34Path closePath];
    [color11 setFill];
    [star34Path fill];
    [shadow2Color setStroke];
    star34Path.lineWidth = 1;
    [star34Path stroke];


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76, 108.5, 19, 16)];
        [color10 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(58.5, 111, 19, 15)];
        [color10 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 114.5, 15, 15)];
        [color10 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(39.5, 117.5, 17, 17)];
        [color10 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(88.5, 116.5, 18, 19)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(102, 106, 20, 22)];
        [color10 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(68.5, 116.5, 19, 15)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109.5, 117.5, 17, 18)];
        [color10 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(96, 112, 18, 16)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 118.5, 18, 18)];
        [color10 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(77.5, 116.5, 19, 15)];
        [color10 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Star Drawing
    UIBezierPath* starPath = [UIBezierPath bezierPath];
    [starPath moveToPoint: CGPointMake(229.5, 16.5)];
    [starPath addLineToPoint: CGPointMake(234.44, 23.7)];
    [starPath addLineToPoint: CGPointMake(242.81, 26.17)];
    [starPath addLineToPoint: CGPointMake(237.49, 33.1)];
    [starPath addLineToPoint: CGPointMake(237.73, 41.83)];
    [starPath addLineToPoint: CGPointMake(229.5, 38.9)];
    [starPath addLineToPoint: CGPointMake(221.27, 41.83)];
    [starPath addLineToPoint: CGPointMake(221.51, 33.1)];
    [starPath addLineToPoint: CGPointMake(216.19, 26.17)];
    [starPath addLineToPoint: CGPointMake(224.56, 23.7)];
    [starPath closePath];
    [color11 setFill];
    [starPath fill];
    [shadow2Color setStroke];
    starPath.lineWidth = 1;
    [starPath stroke];


    //// Group
    {
        //// Star 2 Drawing
        UIBezierPath* star2Path = [UIBezierPath bezierPath];
        [star2Path moveToPoint: CGPointMake(369.5, 72)];
        [star2Path addLineToPoint: CGPointMake(372.32, 76.12)];
        [star2Path addLineToPoint: CGPointMake(377.11, 77.53)];
        [star2Path addLineToPoint: CGPointMake(374.07, 81.48)];
        [star2Path addLineToPoint: CGPointMake(374.2, 86.47)];
        [star2Path addLineToPoint: CGPointMake(369.5, 84.8)];
        [star2Path addLineToPoint: CGPointMake(364.8, 86.47)];
        [star2Path addLineToPoint: CGPointMake(364.93, 81.48)];
        [star2Path addLineToPoint: CGPointMake(361.89, 77.53)];
        [star2Path addLineToPoint: CGPointMake(366.68, 76.12)];
        [star2Path closePath];
        [color11 setFill];
        [star2Path fill];
        [shadow2Color setStroke];
        star2Path.lineWidth = 1;
        [star2Path stroke];


        //// Star 3 Drawing
        UIBezierPath* star3Path = [UIBezierPath bezierPath];
        [star3Path moveToPoint: CGPointMake(349.5, 9)];
        [star3Path addLineToPoint: CGPointMake(352.67, 13.63)];
        [star3Path addLineToPoint: CGPointMake(358.06, 15.22)];
        [star3Path addLineToPoint: CGPointMake(354.64, 19.67)];
        [star3Path addLineToPoint: CGPointMake(354.79, 25.28)];
        [star3Path addLineToPoint: CGPointMake(349.5, 23.4)];
        [star3Path addLineToPoint: CGPointMake(344.21, 25.28)];
        [star3Path addLineToPoint: CGPointMake(344.36, 19.67)];
        [star3Path addLineToPoint: CGPointMake(340.94, 15.22)];
        [star3Path addLineToPoint: CGPointMake(346.33, 13.63)];
        [star3Path closePath];
        [color11 setFill];
        [star3Path fill];
        [shadow2Color setStroke];
        star3Path.lineWidth = 1;
        [star3Path stroke];


        //// Star 4 Drawing
        UIBezierPath* star4Path = [UIBezierPath bezierPath];
        [star4Path moveToPoint: CGPointMake(405, 10.5)];
        [star4Path addLineToPoint: CGPointMake(407.82, 14.62)];
        [star4Path addLineToPoint: CGPointMake(412.61, 16.03)];
        [star4Path addLineToPoint: CGPointMake(409.57, 19.98)];
        [star4Path addLineToPoint: CGPointMake(409.7, 24.97)];
        [star4Path addLineToPoint: CGPointMake(405, 23.3)];
        [star4Path addLineToPoint: CGPointMake(400.3, 24.97)];
        [star4Path addLineToPoint: CGPointMake(400.43, 19.98)];
        [star4Path addLineToPoint: CGPointMake(397.39, 16.03)];
        [star4Path addLineToPoint: CGPointMake(402.18, 14.62)];
        [star4Path closePath];
        [color11 setFill];
        [star4Path fill];
        [shadow2Color setStroke];
        star4Path.lineWidth = 1;
        [star4Path stroke];


        //// Star 5 Drawing
        UIBezierPath* star5Path = [UIBezierPath bezierPath];
        [star5Path moveToPoint: CGPointMake(383.5, 42)];
        [star5Path addLineToPoint: CGPointMake(385.26, 44.57)];
        [star5Path addLineToPoint: CGPointMake(388.26, 45.45)];
        [star5Path addLineToPoint: CGPointMake(386.35, 47.93)];
        [star5Path addLineToPoint: CGPointMake(386.44, 51.05)];
        [star5Path addLineToPoint: CGPointMake(383.5, 50)];
        [star5Path addLineToPoint: CGPointMake(380.56, 51.05)];
        [star5Path addLineToPoint: CGPointMake(380.65, 47.93)];
        [star5Path addLineToPoint: CGPointMake(378.74, 45.45)];
        [star5Path addLineToPoint: CGPointMake(381.74, 44.57)];
        [star5Path closePath];
        [color11 setFill];
        [star5Path fill];
        [shadow2Color setStroke];
        star5Path.lineWidth = 1;
        [star5Path stroke];


        //// Star 6 Drawing
        UIBezierPath* star6Path = [UIBezierPath bezierPath];
        [star6Path moveToPoint: CGPointMake(405, 99.5)];
        [star6Path addLineToPoint: CGPointMake(409.94, 106.7)];
        [star6Path addLineToPoint: CGPointMake(418.31, 109.17)];
        [star6Path addLineToPoint: CGPointMake(412.99, 116.1)];
        [star6Path addLineToPoint: CGPointMake(413.23, 124.83)];
        [star6Path addLineToPoint: CGPointMake(405, 121.9)];
        [star6Path addLineToPoint: CGPointMake(396.77, 124.83)];
        [star6Path addLineToPoint: CGPointMake(397.01, 116.1)];
        [star6Path addLineToPoint: CGPointMake(391.69, 109.17)];
        [star6Path addLineToPoint: CGPointMake(400.06, 106.7)];
        [star6Path closePath];
        [color11 setFill];
        [star6Path fill];
        [shadow2Color setStroke];
        star6Path.lineWidth = 1;
        [star6Path stroke];


        //// Star 7 Drawing
        UIBezierPath* star7Path = [UIBezierPath bezierPath];
        [star7Path moveToPoint: CGPointMake(353.5, 150)];
        [star7Path addLineToPoint: CGPointMake(357.73, 156.18)];
        [star7Path addLineToPoint: CGPointMake(364.91, 158.29)];
        [star7Path addLineToPoint: CGPointMake(360.35, 164.22)];
        [star7Path addLineToPoint: CGPointMake(360.55, 171.71)];
        [star7Path addLineToPoint: CGPointMake(353.5, 169.2)];
        [star7Path addLineToPoint: CGPointMake(346.45, 171.71)];
        [star7Path addLineToPoint: CGPointMake(346.65, 164.22)];
        [star7Path addLineToPoint: CGPointMake(342.09, 158.29)];
        [star7Path addLineToPoint: CGPointMake(349.27, 156.18)];
        [star7Path closePath];
        [color11 setFill];
        [star7Path fill];
        [shadow2Color setStroke];
        star7Path.lineWidth = 1;
        [star7Path stroke];
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(244.5, 23, 133, 135)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(311, 23), CGPointMake(311, 158), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309, 63.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296, 60.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296.5, 67.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(292, 56.5)];
        [oval58Path addCurveToPoint: CGPointMake(288.15, 74.03) controlPoint1: CGPointMake(293.89, 59.43) controlPoint2: CGPointMake(290.33, 66.89)];
        [oval58Path addCurveToPoint: CGPointMake(292, 89.5) controlPoint1: CGPointMake(286.03, 80.97) controlPoint2: CGPointMake(285.22, 87.62)];
        [oval58Path addCurveToPoint: CGPointMake(280, 118.5) controlPoint1: CGPointMake(307.41, 93.78) controlPoint2: CGPointMake(280, 107.66)];
        [oval58Path addCurveToPoint: CGPointMake(310.5, 157.5) controlPoint1: CGPointMake(280, 155.78) controlPoint2: CGPointMake(347.78, 157.5)];
        [oval58Path addCurveToPoint: CGPointMake(243, 90) controlPoint1: CGPointMake(273.22, 157.5) controlPoint2: CGPointMake(243, 127.28)];
        [oval58Path addCurveToPoint: CGPointMake(310.5, 22.5) controlPoint1: CGPointMake(243, 52.72) controlPoint2: CGPointMake(273.22, 22.5)];
        [oval58Path addCurveToPoint: CGPointMake(292, 56.5) controlPoint1: CGPointMake(327.25, 22.5) controlPoint2: CGPointMake(285.54, 46.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(282.35, 22.5), CGPointMake(282.35, 157.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 270.95, 65.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 284.06, 72.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 64.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(283, 67, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(278.5, 125)];
        [bezier21Path addCurveToPoint: CGPointMake(278.51, 119.11) controlPoint1: CGPointMake(282.37, 122.51) controlPoint2: CGPointMake(280.64, 117.5)];
        [bezier21Path addCurveToPoint: CGPointMake(260, 112) controlPoint1: CGPointMake(273.35, 123.02) controlPoint2: CGPointMake(260, 112)];
        [bezier21Path addCurveToPoint: CGPointMake(278.5, 125) controlPoint1: CGPointMake(260, 112) controlPoint2: CGPointMake(272.98, 128.55)];
        [bezier21Path closePath];
        [UIColor.whiteColor setFill];
        [bezier21Path fill];
        [color setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];


        //// Bezier 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 310.6, 118.87);
        CGContextRotateCTM(context, -9.13 * M_PI / 180);

        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(-14.49, -6.25)];
        [bezier22Path addCurveToPoint: CGPointMake(18.65, -6.25) controlPoint1: CGPointMake(-1.66, 10.32) controlPoint2: CGPointMake(18.65, -6.25)];
        [bezier22Path addLineToPoint: CGPointMake(1.69, 11.16)];
        [bezier22Path addLineToPoint: CGPointMake(-6.34, 7.76)];
        [bezier22Path addCurveToPoint: CGPointMake(-14.49, -6.25) controlPoint1: CGPointMake(-6.34, 7.76) controlPoint2: CGPointMake(-27.32, -22.81)];
        [bezier22Path closePath];
        [color2 setFill];
        [bezier22Path fill];
        [UIColor.blackColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309.5, 69.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(376, 119, 19, 18)];
        [color10 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(389.5, 112.5, 19, 17)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(376, 111, 19, 16)];
        [color10 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 113.5, 20, 16)];
        [color10 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(341, 123, 15, 13)];
        [color10 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(347.5, 119.5, 18, 16)];
        [color10 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(361.5, 119, 20, 16)];
        [color10 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395, 119, 20, 18)];
        [color10 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(382.5, 116.5, 20, 14)];
        [color10 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas8
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* skyGradientColor = [UIColor colorWithRed: 0.238 green: 0.591 blue: 0.914 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* color17 = [UIColor colorWithRed: 0.333 green: 0.333 blue: 0.333 alpha: 0.86];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(217.5, 11.5, 133, 135)];
        CGContextSaveGState(context);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(284, 11.5), CGPointMake(284, 146.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(282, 52.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(269, 49.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274.5, 67.5, 3.5, 4.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(265, 45.5)];
        [oval58Path addCurveToPoint: CGPointMake(261.15, 63.03) controlPoint1: CGPointMake(266.89, 48.43) controlPoint2: CGPointMake(263.33, 55.89)];
        [oval58Path addCurveToPoint: CGPointMake(265, 78.5) controlPoint1: CGPointMake(259.03, 69.97) controlPoint2: CGPointMake(258.22, 76.62)];
        [oval58Path addCurveToPoint: CGPointMake(253, 107.5) controlPoint1: CGPointMake(280.41, 82.78) controlPoint2: CGPointMake(253, 96.66)];
        [oval58Path addCurveToPoint: CGPointMake(283.5, 146.5) controlPoint1: CGPointMake(253, 144.78) controlPoint2: CGPointMake(320.78, 146.5)];
        [oval58Path addCurveToPoint: CGPointMake(216, 79) controlPoint1: CGPointMake(246.22, 146.5) controlPoint2: CGPointMake(216, 116.28)];
        [oval58Path addCurveToPoint: CGPointMake(283.5, 11.5) controlPoint1: CGPointMake(216, 41.72) controlPoint2: CGPointMake(246.22, 11.5)];
        [oval58Path addCurveToPoint: CGPointMake(265, 45.5) controlPoint1: CGPointMake(300.25, 11.5) controlPoint2: CGPointMake(258.54, 35.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(255.35, 11.5), CGPointMake(255.35, 146.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 243.95, 54.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 257.06, 61.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(240, 54.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(252, 57, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(288.5, 67.5, 3.5, 4.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243.5, 108.5, 9, 3.5)];
        [color2 setFill];
        [oval133Path fill];
        [color setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 106.5, 16, 6.5)];
        [color2 setFill];
        [oval134Path fill];
        [color setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(387.5, 129.5, 17, 18)];
        [color17 setFill];
        [oval98Path fill];
        [UIColor.blackColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(368.5, 126.5, 23, 24)];
        [color17 setFill];
        [oval16Path fill];
        [UIColor.blackColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381.5, 140.5, 20, 22)];
        [color17 setFill];
        [oval19Path fill];
        [UIColor.blackColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239.5, 140.5, 26, 26)];
        [color17 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253, 149, 21, 20)];
        [color17 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265.5, 143, 25, 24)];
        [color17 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 152, 21, 20)];
        [color17 setFill];
        [oval4Path fill];
        [UIColor.blackColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295.5, 147, 27, 22)];
        [color17 setFill];
        [oval5Path fill];
        [UIColor.blackColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 152, 28, 24)];
        [color17 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(329.5, 146.5, 19, 20)];
        [color17 setFill];
        [oval7Path fill];
        [UIColor.blackColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 149, 27, 26)];
        [color17 setFill];
        [oval9Path fill];
        [UIColor.blackColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 154, 19, 21)];
        [color17 setFill];
        [oval8Path fill];
        [UIColor.blackColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 134, 25, 25)];
        [color17 setFill];
        [oval10Path fill];
        [UIColor.blackColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 134, 24, 25)];
        [color17 setFill];
        [oval11Path fill];
        [UIColor.blackColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(303.5, 129.5, 26, 25)];
        [color17 setFill];
        [oval12Path fill];
        [UIColor.blackColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(322.5, 138.5, 20, 24)];
        [color17 setFill];
        [oval13Path fill];
        [UIColor.blackColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 138, 19, 21)];
        [color17 setFill];
        [oval14Path fill];
        [UIColor.blackColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 129, 27, 25)];
        [color17 setFill];
        [oval15Path fill];
        [UIColor.blackColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 140.5, 23, 22)];
        [color17 setFill];
        [oval17Path fill];
        [UIColor.blackColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 150.5, 22, 23)];
        [color17 setFill];
        [oval18Path fill];
        [UIColor.blackColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(386.5, 153.5, 20, 19)];
        [color17 setFill];
        [oval20Path fill];
        [UIColor.blackColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(398, 140.5, 18, 20)];
        [color17 setFill];
        [oval101Path fill];
        [UIColor.blackColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(400, 155.5, 16, 15)];
        [color17 setFill];
        [oval106Path fill];
        [UIColor.blackColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -16.09, 145.46);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20, 18.34)];
        [color17 setFill];
        [oval104Path fill];
        [UIColor.blackColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];

        CGContextRestoreGState(context);


        //// Oval 105 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -2.59, 131.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 26)];
        [color17 setFill];
        [oval105Path fill];
        [UIColor.blackColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];

        CGContextRestoreGState(context);


        //// Oval 138 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 10.77, 125.21);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval138Path fill];
        [UIColor.blackColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];

        CGContextRestoreGState(context);


        //// Oval 97 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 68.87, 135.72);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval97Path fill];
        [UIColor.blackColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];

        CGContextRestoreGState(context);


        //// Oval 86 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.87, 137.13);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 26, 26)];
        [color17 setFill];
        [oval86Path fill];
        [UIColor.blackColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];

        CGContextRestoreGState(context);


        //// Oval 87 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 129.07, 145.33);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval87Path fill];
        [UIColor.blackColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];

        CGContextRestoreGState(context);


        //// Oval 88 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 112.79, 138.76);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval88Path fill];
        [UIColor.blackColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];

        CGContextRestoreGState(context);


        //// Oval 90 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 80.67, 141.63);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 22)];
        [color17 setFill];
        [oval90Path fill];
        [UIColor.blackColor setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];

        CGContextRestoreGState(context);


        //// Oval 91 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 65.94, 148.12);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 20)];
        [color17 setFill];
        [oval91Path fill];
        [UIColor.blackColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];

        CGContextRestoreGState(context);


        //// Oval 92 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 54.71, 140.22);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval92Path fill];
        [UIColor.blackColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];

        CGContextRestoreGState(context);


        //// Oval 93 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28.6, 142.81);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval93Path fill];
        [UIColor.blackColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];

        CGContextRestoreGState(context);


        //// Oval 94 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 45.45, 147.41);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval94Path fill];
        [UIColor.blackColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];

        CGContextRestoreGState(context);


        //// Oval 95 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 118.6, 129.95);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 25)];
        [color17 setFill];
        [oval95Path fill];
        [UIColor.blackColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];

        CGContextRestoreGState(context);


        //// Oval 96 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.58, 130.29);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval96Path fill];
        [UIColor.blackColor setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];

        CGContextRestoreGState(context);


        //// Oval 99 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 45.51, 131.4);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval99Path fill];
        [UIColor.blackColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];

        CGContextRestoreGState(context);


        //// Oval 100 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28.34, 121.79);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 25)];
        [color17 setFill];
        [oval100Path fill];
        [UIColor.blackColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];

        CGContextRestoreGState(context);


        //// Oval 102 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.44, 133.09);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval102Path fill];
        [UIColor.blackColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];

        CGContextRestoreGState(context);


        //// Oval 103 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 10.59, 142.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval103Path fill];
        [UIColor.blackColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];

        CGContextRestoreGState(context);


        //// Oval 89 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 100.99, 147.35);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval89Path fill];
        [UIColor.blackColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];

        CGContextRestoreGState(context);


        //// Oval 139 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -2.12, 146.5);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18, 16.34)];
        [color17 setFill];
        [oval139Path fill];
        [UIColor.blackColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 69, 20, 18)];
        [color3 setFill];
        [oval109Path fill];
        [UIColor.blackColor setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 61.5, 20, 18)];
        [color3 setFill];
        [oval110Path fill];
        [UIColor.blackColor setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 60, 20, 16)];
        [color3 setFill];
        [oval111Path fill];
        [UIColor.blackColor setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 62.5, 20, 17)];
        [color3 setFill];
        [oval112Path fill];
        [UIColor.blackColor setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 71, 20, 17)];
        [color3 setFill];
        [oval113Path fill];
        [UIColor.blackColor setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 68.5, 21, 18)];
        [color3 setFill];
        [oval114Path fill];
        [UIColor.blackColor setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 115 Drawing
        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 68, 23, 17)];
        [color3 setFill];
        [oval115Path fill];
        [UIColor.blackColor setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 68, 21, 19)];
        [color3 setFill];
        [oval116Path fill];
        [UIColor.blackColor setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 65.5, 20, 15)];
        [color3 setFill];
        [oval117Path fill];
        [UIColor.blackColor setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 59, 20, 18)];
        [color3 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360.5, 51.5, 20, 18)];
        [color3 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 50, 20, 16)];
        [color3 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 52.5, 20, 17)];
        [color3 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(308, 61, 20, 17)];
        [color3 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(315.5, 58.5, 21, 18)];
        [color3 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(330.5, 58, 23, 17)];
        [color3 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(366, 58, 21, 19)];
        [color3 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(353.5, 55.5, 20, 15)];
        [color3 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 50, 20, 18)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.blackColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 42.5, 20, 18)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.blackColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 41, 20, 16)];
        [color3 setFill];
        [oval120Path fill];
        [UIColor.blackColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 43.5, 20, 17)];
        [color3 setFill];
        [oval121Path fill];
        [UIColor.blackColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 52, 20, 17)];
        [color3 setFill];
        [oval122Path fill];
        [UIColor.blackColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 49.5, 21, 18)];
        [color3 setFill];
        [oval123Path fill];
        [UIColor.blackColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 49, 23, 17)];
        [color3 setFill];
        [oval124Path fill];
        [UIColor.blackColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 49, 21, 19)];
        [color3 setFill];
        [oval125Path fill];
        [UIColor.blackColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 46.5, 20, 15)];
        [color3 setFill];
        [oval126Path fill];
        [UIColor.blackColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 54.41, 137.46);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20, 18.34)];
        [color17 setFill];
        [oval21Path fill];
        [UIColor.blackColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];

        CGContextRestoreGState(context);


        //// Oval 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 67.91, 123.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 26)];
        [color17 setFill];
        [oval22Path fill];
        [UIColor.blackColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 23 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.27, 117.21);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval23Path fill];
        [UIColor.blackColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];

        CGContextRestoreGState(context);


        //// Oval 24 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.37, 127.72);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval24Path fill];
        [UIColor.blackColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];

        CGContextRestoreGState(context);


        //// Oval 25 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 208.37, 129.13);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 26, 26)];
        [color17 setFill];
        [oval25Path fill];
        [UIColor.blackColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];

        CGContextRestoreGState(context);


        //// Oval 26 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 199.57, 137.33);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval26Path fill];
        [UIColor.blackColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];

        CGContextRestoreGState(context);


        //// Oval 27 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.29, 130.76);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval27Path fill];
        [UIColor.blackColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];

        CGContextRestoreGState(context);


        //// Oval 28 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.17, 133.63);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 22)];
        [color17 setFill];
        [oval28Path fill];
        [UIColor.blackColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];

        CGContextRestoreGState(context);


        //// Oval 29 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 136.44, 140.12);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 20)];
        [color17 setFill];
        [oval29Path fill];
        [UIColor.blackColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];

        CGContextRestoreGState(context);


        //// Oval 30 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 125.21, 132.22);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval30Path fill];
        [UIColor.blackColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];

        CGContextRestoreGState(context);


        //// Oval 31 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.1, 134.81);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval31Path fill];
        [UIColor.blackColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];

        CGContextRestoreGState(context);


        //// Oval 32 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 115.95, 139.41);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval32Path fill];
        [UIColor.blackColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];

        CGContextRestoreGState(context);


        //// Oval 33 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 189.1, 121.95);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 25)];
        [color17 setFill];
        [oval33Path fill];
        [UIColor.blackColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];

        CGContextRestoreGState(context);


        //// Oval 34 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 170.08, 122.29);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval34Path fill];
        [UIColor.blackColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];

        CGContextRestoreGState(context);


        //// Oval 35 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 116.01, 123.4);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];

        CGContextRestoreGState(context);


        //// Oval 36 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.84, 113.79);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 25)];
        [color17 setFill];
        [oval36Path fill];
        [UIColor.blackColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];

        CGContextRestoreGState(context);


        //// Oval 37 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 92.94, 125.09);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval37Path fill];
        [UIColor.blackColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];

        CGContextRestoreGState(context);


        //// Oval 38 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.09, 134.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval38Path fill];
        [UIColor.blackColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];

        CGContextRestoreGState(context);


        //// Oval 39 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 171.49, 139.35);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval39Path fill];
        [UIColor.blackColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];

        CGContextRestoreGState(context);


        //// Oval 40 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 68.38, 138.5);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18, 16.34)];
        [color17 setFill];
        [oval40Path fill];
        [UIColor.blackColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(371.5, 113, 17, 18)];
        [color17 setFill];
        [oval130Path fill];
        [UIColor.blackColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(352.5, 110, 23, 24)];
        [color17 setFill];
        [oval131Path fill];
        [UIColor.blackColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 124, 20, 22)];
        [color17 setFill];
        [oval132Path fill];
        [UIColor.blackColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(249.5, 126.5, 25, 24)];
        [color17 setFill];
        [oval135Path fill];
        [UIColor.blackColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 135.5, 21, 20)];
        [color17 setFill];
        [oval136Path fill];
        [UIColor.blackColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(279.5, 130.5, 27, 22)];
        [color17 setFill];
        [oval137Path fill];
        [UIColor.blackColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295, 135.5, 28, 24)];
        [color17 setFill];
        [oval151Path fill];
        [UIColor.blackColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(313.5, 130, 19, 20)];
        [color17 setFill];
        [oval152Path fill];
        [UIColor.blackColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        //// Oval 153 Drawing
        UIBezierPath* oval153Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 132.5, 27, 26)];
        [color17 setFill];
        [oval153Path fill];
        [UIColor.blackColor setStroke];
        oval153Path.lineWidth = 1;
        [oval153Path stroke];


        //// Oval 154 Drawing
        UIBezierPath* oval154Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 137.5, 19, 21)];
        [color17 setFill];
        [oval154Path fill];
        [UIColor.blackColor setStroke];
        oval154Path.lineWidth = 1;
        [oval154Path stroke];


        //// Oval 156 Drawing
        UIBezierPath* oval156Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 117.5, 24, 25)];
        [color17 setFill];
        [oval156Path fill];
        [UIColor.blackColor setStroke];
        oval156Path.lineWidth = 1;
        [oval156Path stroke];


        //// Oval 157 Drawing
        UIBezierPath* oval157Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287.5, 113, 26, 25)];
        [color17 setFill];
        [oval157Path fill];
        [UIColor.blackColor setStroke];
        oval157Path.lineWidth = 1;
        [oval157Path stroke];


        //// Oval 158 Drawing
        UIBezierPath* oval158Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(306.5, 122, 20, 24)];
        [color17 setFill];
        [oval158Path fill];
        [UIColor.blackColor setStroke];
        oval158Path.lineWidth = 1;
        [oval158Path stroke];


        //// Oval 159 Drawing
        UIBezierPath* oval159Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 121.5, 19, 21)];
        [color17 setFill];
        [oval159Path fill];
        [UIColor.blackColor setStroke];
        oval159Path.lineWidth = 1;
        [oval159Path stroke];


        //// Oval 160 Drawing
        UIBezierPath* oval160Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 112.5, 27, 25)];
        [color17 setFill];
        [oval160Path fill];
        [UIColor.blackColor setStroke];
        oval160Path.lineWidth = 1;
        [oval160Path stroke];


        //// Oval 161 Drawing
        UIBezierPath* oval161Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(342, 124, 23, 22)];
        [color17 setFill];
        [oval161Path fill];
        [UIColor.blackColor setStroke];
        oval161Path.lineWidth = 1;
        [oval161Path stroke];


        //// Oval 162 Drawing
        UIBezierPath* oval162Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(354.5, 134, 22, 23)];
        [color17 setFill];
        [oval162Path fill];
        [UIColor.blackColor setStroke];
        oval162Path.lineWidth = 1;
        [oval162Path stroke];


        //// Oval 163 Drawing
        UIBezierPath* oval163Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 137, 20, 19)];
        [color17 setFill];
        [oval163Path fill];
        [UIColor.blackColor setStroke];
        oval163Path.lineWidth = 1;
        [oval163Path stroke];


        //// Oval 164 Drawing
        UIBezierPath* oval164Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(382, 124, 18, 20)];
        [color17 setFill];
        [oval164Path fill];
        [UIColor.blackColor setStroke];
        oval164Path.lineWidth = 1;
        [oval164Path stroke];


        //// Oval 165 Drawing
        UIBezierPath* oval165Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(384, 139, 16, 15)];
        [color17 setFill];
        [oval165Path fill];
        [UIColor.blackColor setStroke];
        oval165Path.lineWidth = 1;
        [oval165Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 140 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 67.13, 123.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.44, 22.48)];
        [color3 setFill];
        [oval140Path fill];
        [UIColor.blackColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];

        CGContextRestoreGState(context);


        //// Oval 141 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 84.1, 125);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.53, 21.48)];
        [color3 setFill];
        [oval141Path fill];
        [UIColor.blackColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];

        CGContextRestoreGState(context);


        //// Oval 142 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 103.31, 131.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.06, 15.63)];
        [color3 setFill];
        [oval142Path fill];
        [UIColor.blackColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];

        CGContextRestoreGState(context);


        //// Oval 143 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 112.56, 126.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.54, 20.49)];
        [color3 setFill];
        [oval143Path fill];
        [UIColor.blackColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];

        CGContextRestoreGState(context);


        //// Oval 144 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 127.98, 128.64);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.4, 19.53)];
        [color3 setFill];
        [oval144Path fill];
        [UIColor.blackColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];

        CGContextRestoreGState(context);


        //// Oval 145 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 141.45, 119.66);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.02, 18.59)];
        [color3 setFill];
        [oval145Path fill];
        [UIColor.blackColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];

        CGContextRestoreGState(context);


        //// Oval 146 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 145.01, 126.24);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.11, 17.59)];
        [color3 setFill];
        [oval146Path fill];
        [UIColor.blackColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];

        CGContextRestoreGState(context);


        //// Oval 147 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 83.12, 117.66);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.55, 19.5)];
        [color3 setFill];
        [oval147Path fill];
        [UIColor.blackColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];

        CGContextRestoreGState(context);


        //// Oval 148 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 101.31, 115.65);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.4, 19.53)];
        [color3 setFill];
        [oval148Path fill];
        [UIColor.blackColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];

        CGContextRestoreGState(context);


        //// Oval 150 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 130.78, 116.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.09, 19.57)];
        [color3 setFill];
        [oval150Path fill];
        [UIColor.blackColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 7
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 71 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 122.13, 116.79);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.88, 23.49)];
        [color3 setFill];
        [oval71Path fill];
        [UIColor.blackColor setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];

        CGContextRestoreGState(context);


        //// Oval 72 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 138.55, 117.96);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.93, 22.46)];
        [color3 setFill];
        [oval72Path fill];
        [UIColor.blackColor setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];

        CGContextRestoreGState(context);


        //// Oval 73 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 157.19, 124.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.64, 16.34)];
        [color3 setFill];
        [oval73Path fill];
        [UIColor.blackColor setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];

        CGContextRestoreGState(context);


        //// Oval 74 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 166.08, 119.89);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.93, 21.44)];
        [color3 setFill];
        [oval74Path fill];
        [UIColor.blackColor setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];

        CGContextRestoreGState(context);


        //// Oval 75 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 181.01, 121.75);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.85, 20.42)];
        [color3 setFill];
        [oval75Path fill];
        [UIColor.blackColor setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];

        CGContextRestoreGState(context);


        //// Oval 78 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.06, 112.48);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.64, 19.41)];
        [color3 setFill];
        [oval78Path fill];
        [UIColor.blackColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];

        CGContextRestoreGState(context);


        //// Oval 107 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 197.51, 119.29);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.68, 18.38)];
        [color3 setFill];
        [oval107Path fill];
        [UIColor.blackColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];

        CGContextRestoreGState(context);


        //// Oval 108 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.62, 110.34);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.93, 20.42)];
        [color3 setFill];
        [oval108Path fill];
        [UIColor.blackColor setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];

        CGContextRestoreGState(context);


        //// Oval 127 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 155.22, 108.28);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.85, 20.42)];
        [color3 setFill];
        [oval127Path fill];
        [UIColor.blackColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];

        CGContextRestoreGState(context);


        //// Oval 128 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 171.75, 101.71);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.88, 22.47)];
        [color3 setFill];
        [oval128Path fill];
        [UIColor.blackColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];

        CGContextRestoreGState(context);


        //// Oval 129 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.73, 109.57);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.68, 20.43)];
        [color3 setFill];
        [oval129Path fill];
        [UIColor.blackColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 155 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 284.98, 111.82);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval155Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval155Path fill];
        [UIColor.blackColor setStroke];
        oval155Path.lineWidth = 1;
        [oval155Path stroke];

        CGContextRestoreGState(context);


        //// Oval 166 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 300.73, 112.96);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval166Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval166Path fill];
        [UIColor.blackColor setStroke];
        oval166Path.lineWidth = 1;
        [oval166Path stroke];

        CGContextRestoreGState(context);


        //// Oval 167 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 318.61, 119.39);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval167Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color17 setFill];
        [oval167Path fill];
        [UIColor.blackColor setStroke];
        oval167Path.lineWidth = 1;
        [oval167Path stroke];

        CGContextRestoreGState(context);


        //// Oval 168 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 327.13, 114.85);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval168Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 21)];
        [color17 setFill];
        [oval168Path fill];
        [UIColor.blackColor setStroke];
        oval168Path.lineWidth = 1;
        [oval168Path stroke];

        CGContextRestoreGState(context);


        //// Oval 169 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 341.45, 116.67);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval169Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval169Path fill];
        [UIColor.blackColor setStroke];
        oval169Path.lineWidth = 1;
        [oval169Path stroke];

        CGContextRestoreGState(context);


        //// Oval 170 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 353.97, 107.62);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval170Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color17 setFill];
        [oval170Path fill];
        [UIColor.blackColor setStroke];
        oval170Path.lineWidth = 1;
        [oval170Path stroke];

        CGContextRestoreGState(context);


        //// Oval 171 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 357.28, 114.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval171Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color17 setFill];
        [oval171Path fill];
        [UIColor.blackColor setStroke];
        oval171Path.lineWidth = 1;
        [oval171Path stroke];

        CGContextRestoreGState(context);


        //// Oval 172 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 299.84, 105.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval172Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 20)];
        [color17 setFill];
        [oval172Path fill];
        [UIColor.blackColor setStroke];
        oval172Path.lineWidth = 1;
        [oval172Path stroke];

        CGContextRestoreGState(context);


        //// Oval 173 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 316.72, 103.5);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval173Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval173Path fill];
        [UIColor.blackColor setStroke];
        oval173Path.lineWidth = 1;
        [oval173Path stroke];

        CGContextRestoreGState(context);


        //// Oval 174 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 332.57, 97.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval174Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 22)];
        [color17 setFill];
        [oval174Path fill];
        [UIColor.blackColor setStroke];
        oval174Path.lineWidth = 1;
        [oval174Path stroke];

        CGContextRestoreGState(context);


        //// Oval 175 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 344.06, 104.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval175Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 20)];
        [color17 setFill];
        [oval175Path fill];
        [UIColor.blackColor setStroke];
        oval175Path.lineWidth = 1;
        [oval175Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 176 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.31, 61.93);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval176Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.66, 0.68, 19.93, 16.31)];
        [color17 setFill];
        [oval176Path fill];
        [UIColor.blackColor setStroke];
        oval176Path.lineWidth = 1;
        [oval176Path stroke];

        CGContextRestoreGState(context);


        //// Oval 177 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.11, 49.62);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval177Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.93, 0.81, 23.9, 23.13)];
        [color17 setFill];
        [oval177Path fill];
        [UIColor.blackColor setStroke];
        oval177Path.lineWidth = 1;
        [oval177Path stroke];

        CGContextRestoreGState(context);


        //// Oval 178 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 138.6, 43.84);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval178Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.79, 0.78, 22.91, 19.56)];
        [color17 setFill];
        [oval178Path fill];
        [UIColor.blackColor setStroke];
        oval178Path.lineWidth = 1;
        [oval178Path stroke];

        CGContextRestoreGState(context);


        //// Oval 179 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 84.41, 53.23);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval179Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 18.92, 17.79)];
        [color17 setFill];
        [oval179Path fill];
        [UIColor.blackColor setStroke];
        oval179Path.lineWidth = 1;
        [oval179Path stroke];

        CGContextRestoreGState(context);


        //// Oval 180 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 8.66, 54.49);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval180Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.88, 25.9, 23.12)];
        [color17 setFill];
        [oval180Path fill];
        [UIColor.blackColor setStroke];
        oval180Path.lineWidth = 1;
        [oval180Path stroke];

        CGContextRestoreGState(context);


        //// Oval 181 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.21, 61.81);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval181Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.71, 20.92, 17.78)];
        [color17 setFill];
        [oval181Path fill];
        [UIColor.blackColor setStroke];
        oval181Path.lineWidth = 1;
        [oval181Path stroke];

        CGContextRestoreGState(context);


        //// Oval 182 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 34.65, 55.94);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval182Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 24.91, 21.34)];
        [color17 setFill];
        [oval182Path fill];
        [UIColor.blackColor setStroke];
        oval182Path.lineWidth = 1;
        [oval182Path stroke];

        CGContextRestoreGState(context);


        //// Oval 183 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 64.7, 58.51);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval183Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.92, 26.91, 19.55)];
        [color17 setFill];
        [oval183Path fill];
        [UIColor.blackColor setStroke];
        oval183Path.lineWidth = 1;
        [oval183Path stroke];

        CGContextRestoreGState(context);


        //// Oval 184 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 82.35, 64.3);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval184Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.81, 23.92, 17.77)];
        [color17 setFill];
        [oval184Path fill];
        [UIColor.blackColor setStroke];
        oval184Path.lineWidth = 1;
        [oval184Path stroke];

        CGContextRestoreGState(context);


        //// Oval 185 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.58, 57.25);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval185Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 18.92, 17.79)];
        [color17 setFill];
        [oval185Path fill];
        [UIColor.blackColor setStroke];
        oval185Path.lineWidth = 1;
        [oval185Path stroke];

        CGContextRestoreGState(context);


        //// Oval 186 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 118.85, 59.56);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval186Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 24.91, 21.34)];
        [color17 setFill];
        [oval186Path fill];
        [UIColor.blackColor setStroke];
        oval186Path.lineWidth = 1;
        [oval186Path stroke];

        CGContextRestoreGState(context);


        //// Oval 187 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 107.88, 63.66);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval187Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.75, 0.64, 18.92, 18.68)];
        [color17 setFill];
        [oval187Path fill];
        [UIColor.blackColor setStroke];
        oval187Path.lineWidth = 1;
        [oval187Path stroke];

        CGContextRestoreGState(context);


        //// Oval 188 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28.88, 48.08);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval188Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.9, 0.84, 24.9, 22.23)];
        [color17 setFill];
        [oval188Path fill];
        [UIColor.blackColor setStroke];
        oval188Path.lineWidth = 1;
        [oval188Path stroke];

        CGContextRestoreGState(context);


        //// Oval 189 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.82, 48.38);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval189Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 21.91, 20.46)];
        [color17 setFill];
        [oval189Path fill];
        [UIColor.blackColor setStroke];
        oval189Path.lineWidth = 1;
        [oval189Path stroke];

        CGContextRestoreGState(context);


        //// Oval 190 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 107.81, 49.37);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval190Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.75, 0.64, 18.92, 18.68)];
        [color17 setFill];
        [oval190Path fill];
        [UIColor.blackColor setStroke];
        oval190Path.lineWidth = 1;
        [oval190Path stroke];

        CGContextRestoreGState(context);


        //// Oval 191 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.15, 40.79);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval191Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.9, 0.91, 26.9, 22.23)];
        [color17 setFill];
        [oval191Path fill];
        [UIColor.blackColor setStroke];
        oval191Path.lineWidth = 1;
        [oval191Path stroke];

        CGContextRestoreGState(context);


        //// Oval 192 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 126.93, 50.88);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval192Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.79, 0.78, 22.91, 19.56)];
        [color17 setFill];
        [oval192Path fill];
        [UIColor.blackColor setStroke];
        oval192Path.lineWidth = 1;
        [oval192Path stroke];

        CGContextRestoreGState(context);


        //// Oval 193 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.81, 59.44);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval193Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 21.91, 20.46)];
        [color17 setFill];
        [oval193Path fill];
        [UIColor.blackColor setStroke];
        oval193Path.lineWidth = 1;
        [oval193Path stroke];

        CGContextRestoreGState(context);


        //// Oval 194 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.3, 63.61);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval194Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.71, 20.92, 17.78)];
        [color17 setFill];
        [oval194Path fill];
        [UIColor.blackColor setStroke];
        oval194Path.lineWidth = 1;
        [oval194Path stroke];

        CGContextRestoreGState(context);


        //// Oval 195 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.27, 62.85);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval195Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.59, 0.61, 17.94, 14.53)];
        [color17 setFill];
        [oval195Path fill];
        [UIColor.blackColor setStroke];
        oval195Path.lineWidth = 1;
        [oval195Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 41 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.74, 47.96);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.67, 0.68, 20, 18.34)];
        [color17 setFill];
        [oval41Path fill];
        [UIColor.blackColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];

        CGContextRestoreGState(context);


        //// Oval 42 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.51, 34.18);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.81, 24, 26)];
        [color17 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];

        CGContextRestoreGState(context);


        //// Oval 43 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.01, 27.71);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval43Path fill];
        [UIColor.blackColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];

        CGContextRestoreGState(context);


        //// Oval 44 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 84.84, 38.22);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval44Path fill];
        [UIColor.blackColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];

        CGContextRestoreGState(context);


        //// Oval 45 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 9.06, 39.63);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.88, 26, 26)];
        [color17 setFill];
        [oval45Path fill];
        [UIColor.blackColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];

        CGContextRestoreGState(context);


        //// Oval 46 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.64, 47.83);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval46Path fill];
        [UIColor.blackColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];

        CGContextRestoreGState(context);


        //// Oval 47 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 35.06, 41.26);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval47Path fill];
        [UIColor.blackColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];

        CGContextRestoreGState(context);


        //// Oval 48 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 65.11, 44.13);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.92, 27, 22)];
        [color17 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];

        CGContextRestoreGState(context);


        //// Oval 49 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 82.78, 50.62);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.81, 24, 20)];
        [color17 setFill];
        [oval49Path fill];
        [UIColor.blackColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];

        CGContextRestoreGState(context);


        //// Oval 50 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.01, 42.72);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval50Path fill];
        [UIColor.blackColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];

        CGContextRestoreGState(context);


        //// Oval 51 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 119.26, 45.31);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval51Path fill];
        [UIColor.blackColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];

        CGContextRestoreGState(context);


        //// Oval 52 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.3, 49.91);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval52Path fill];
        [UIColor.blackColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];

        CGContextRestoreGState(context);


        //// Oval 53 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 29.29, 32.45);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.9, 0.84, 25, 25)];
        [color17 setFill];
        [oval53Path fill];
        [UIColor.blackColor setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];

        CGContextRestoreGState(context);


        //// Oval 60 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 51.24, 32.79);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];

        CGContextRestoreGState(context);


        //// Oval 61 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.24, 33.9);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];

        CGContextRestoreGState(context);


        //// Oval 62 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.56, 24.29);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.91, 0.91, 27, 25)];
        [color17 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];

        CGContextRestoreGState(context);


        //// Oval 65 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 127.35, 35.59);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];

        CGContextRestoreGState(context);


        //// Oval 68 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 140.23, 45.18);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval68Path fill];
        [UIColor.blackColor setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];

        CGContextRestoreGState(context);


        //// Oval 69 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.73, 49.85);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval69Path fill];
        [UIColor.blackColor setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];

        CGContextRestoreGState(context);


        //// Oval 70 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.71, 49);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.59, 0.61, 18, 16.34)];
        [color17 setFill];
        [oval70Path fill];
        [UIColor.blackColor setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 14
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(186.22, 398.83)];
        [bezierPath addCurveToPoint: CGPointMake(186.22, 447.92) controlPoint1: CGPointMake(192.1, 468.95) controlPoint2: CGPointMake(186.22, 447.92)];
        [skyGradientColor setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(128.49, 351.5)];
        [bezier2Path addCurveToPoint: CGPointMake(128.49, 400.58) controlPoint1: CGPointMake(134.36, 421.62) controlPoint2: CGPointMake(128.49, 400.58)];
        [skyGradientColor setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [bezier3Path moveToPoint: CGPointMake(105, 383.93)];
        [bezier3Path addCurveToPoint: CGPointMake(105, 433.02) controlPoint1: CGPointMake(110.87, 454.05) controlPoint2: CGPointMake(105, 433.02)];
        [skyGradientColor setStroke];
        bezier3Path.lineWidth = 1;
        [bezier3Path stroke];
    }


    //// Group 17
    {
        //// Bezier 30 Drawing
        UIBezierPath* bezier30Path = [UIBezierPath bezierPath];
        [bezier30Path moveToPoint: CGPointMake(169.3, 245.74)];
        [bezier30Path addCurveToPoint: CGPointMake(169.3, 287.72) controlPoint1: CGPointMake(177.25, 305.72) controlPoint2: CGPointMake(169.3, 287.72)];
        [skyGradientColor setStroke];
        bezier30Path.lineWidth = 1;
        [bezier30Path stroke];


        //// Bezier 31 Drawing
        UIBezierPath* bezier31Path = [UIBezierPath bezierPath];
        [bezier31Path moveToPoint: CGPointMake(136.17, 201.5)];
        [bezier31Path addCurveToPoint: CGPointMake(136.17, 243.49) controlPoint1: CGPointMake(144.12, 261.48) controlPoint2: CGPointMake(136.17, 243.49)];
        [skyGradientColor setStroke];
        bezier31Path.lineWidth = 1;
        [bezier31Path stroke];


        //// Bezier 32 Drawing
        UIBezierPath* bezier32Path = [UIBezierPath bezierPath];
        [bezier32Path moveToPoint: CGPointMake(104.36, 229.24)];
        [bezier32Path addCurveToPoint: CGPointMake(104.36, 271.23) controlPoint1: CGPointMake(112.31, 289.22) controlPoint2: CGPointMake(104.36, 271.23)];
        [skyGradientColor setStroke];
        bezier32Path.lineWidth = 1;
        [bezier32Path stroke];


        //// Bezier 33 Drawing
        UIBezierPath* bezier33Path = [UIBezierPath bezierPath];
        [bezier33Path moveToPoint: CGPointMake(54, 255.86)];
        [bezier33Path addCurveToPoint: CGPointMake(54, 297.84) controlPoint1: CGPointMake(61.95, 315.84) controlPoint2: CGPointMake(54, 297.84)];
        [skyGradientColor setStroke];
        bezier33Path.lineWidth = 1;
        [bezier33Path stroke];
    }


    //// Group 19
    {
        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(356.47, 492)];
        [bezier22Path addCurveToPoint: CGPointMake(356.47, 544.23) controlPoint1: CGPointMake(363.57, 566.61) controlPoint2: CGPointMake(356.47, 544.23)];
        [skyGradientColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];


        //// Bezier 23 Drawing
        UIBezierPath* bezier23Path = [UIBezierPath bezierPath];
        [bezier23Path moveToPoint: CGPointMake(326.89, 436.97)];
        [bezier23Path addCurveToPoint: CGPointMake(326.89, 489.2) controlPoint1: CGPointMake(333.99, 511.58) controlPoint2: CGPointMake(326.89, 489.2)];
        [skyGradientColor setStroke];
        bezier23Path.lineWidth = 1;
        [bezier23Path stroke];


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = [UIBezierPath bezierPath];
        [bezier24Path moveToPoint: CGPointMake(298.5, 471.48)];
        [bezier24Path addCurveToPoint: CGPointMake(298.5, 523.71) controlPoint1: CGPointMake(305.6, 546.09) controlPoint2: CGPointMake(298.5, 523.71)];
        [skyGradientColor setStroke];
        bezier24Path.lineWidth = 1;
        [bezier24Path stroke];


        //// Bezier 25 Drawing
        UIBezierPath* bezier25Path = [UIBezierPath bezierPath];
        [bezier25Path moveToPoint: CGPointMake(383.68, 436.5)];
        [bezier25Path addCurveToPoint: CGPointMake(383.68, 488.73) controlPoint1: CGPointMake(390.78, 511.12) controlPoint2: CGPointMake(383.68, 488.73)];
        [skyGradientColor setStroke];
        bezier25Path.lineWidth = 1;
        [bezier25Path stroke];
    }


    //// Group 20
    {
        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = [UIBezierPath bezierPath];
        [bezier34Path moveToPoint: CGPointMake(339.62, 190.98)];
        [bezier34Path addCurveToPoint: CGPointMake(339.62, 233.32) controlPoint1: CGPointMake(348.09, 251.47) controlPoint2: CGPointMake(339.62, 233.32)];
        [skyGradientColor setStroke];
        bezier34Path.lineWidth = 1;
        [bezier34Path stroke];


        //// Bezier 35 Drawing
        UIBezierPath* bezier35Path = [UIBezierPath bezierPath];
        [bezier35Path moveToPoint: CGPointMake(304.36, 146.38)];
        [bezier35Path addCurveToPoint: CGPointMake(304.36, 188.72) controlPoint1: CGPointMake(312.82, 206.86) controlPoint2: CGPointMake(304.36, 188.72)];
        [skyGradientColor setStroke];
        bezier35Path.lineWidth = 1;
        [bezier35Path stroke];


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = [UIBezierPath bezierPath];
        [bezier36Path moveToPoint: CGPointMake(270.5, 174.35)];
        [bezier36Path addCurveToPoint: CGPointMake(270.5, 216.69) controlPoint1: CGPointMake(278.96, 234.84) controlPoint2: CGPointMake(270.5, 216.69)];
        [skyGradientColor setStroke];
        bezier36Path.lineWidth = 1;
        [bezier36Path stroke];


        //// Bezier 37 Drawing
        UIBezierPath* bezier37Path = [UIBezierPath bezierPath];
        [bezier37Path moveToPoint: CGPointMake(372.07, 146)];
        [bezier37Path addCurveToPoint: CGPointMake(372.07, 188.34) controlPoint1: CGPointMake(380.54, 206.48) controlPoint2: CGPointMake(372.07, 188.34)];
        [skyGradientColor setStroke];
        bezier37Path.lineWidth = 1;
        [bezier37Path stroke];
    }


    //// Group 22
    {
        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = [UIBezierPath bezierPath];
        [bezier38Path moveToPoint: CGPointMake(372.77, 341.6)];
        [bezier38Path addCurveToPoint: CGPointMake(372.77, 380.62) controlPoint1: CGPointMake(380.79, 397.34) controlPoint2: CGPointMake(372.77, 380.62)];
        [skyGradientColor setStroke];
        bezier38Path.lineWidth = 1;
        [bezier38Path stroke];


        //// Bezier 39 Drawing
        UIBezierPath* bezier39Path = [UIBezierPath bezierPath];
        [bezier39Path moveToPoint: CGPointMake(339.36, 300.5)];
        [bezier39Path addCurveToPoint: CGPointMake(339.36, 339.51) controlPoint1: CGPointMake(347.38, 356.23) controlPoint2: CGPointMake(339.36, 339.51)];
        [skyGradientColor setStroke];
        bezier39Path.lineWidth = 1;
        [bezier39Path stroke];


        //// Bezier 40 Drawing
        UIBezierPath* bezier40Path = [UIBezierPath bezierPath];
        [bezier40Path moveToPoint: CGPointMake(307.28, 326.28)];
        [bezier40Path addCurveToPoint: CGPointMake(307.28, 365.29) controlPoint1: CGPointMake(315.3, 382.01) controlPoint2: CGPointMake(307.28, 365.29)];
        [skyGradientColor setStroke];
        bezier40Path.lineWidth = 1;
        [bezier40Path stroke];


        //// Bezier 41 Drawing
        UIBezierPath* bezier41Path = [UIBezierPath bezierPath];
        [bezier41Path moveToPoint: CGPointMake(256.5, 351.01)];
        [bezier41Path addCurveToPoint: CGPointMake(256.5, 390.02) controlPoint1: CGPointMake(264.52, 406.74) controlPoint2: CGPointMake(256.5, 390.02)];
        [skyGradientColor setStroke];
        bezier41Path.lineWidth = 1;
        [bezier41Path stroke];
    }


    //// Group 23
    {
        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [bezier4Path moveToPoint: CGPointMake(168.66, 514.58)];
        [bezier4Path addCurveToPoint: CGPointMake(168.66, 545.51) controlPoint1: CGPointMake(174.68, 558.77) controlPoint2: CGPointMake(168.66, 545.51)];
        [skyGradientColor setStroke];
        bezier4Path.lineWidth = 1;
        [bezier4Path stroke];


        //// Bezier 42 Drawing
        UIBezierPath* bezier42Path = [UIBezierPath bezierPath];
        [bezier42Path moveToPoint: CGPointMake(143.58, 482)];
        [bezier42Path addCurveToPoint: CGPointMake(143.58, 512.93) controlPoint1: CGPointMake(149.6, 526.18) controlPoint2: CGPointMake(143.58, 512.93)];
        [skyGradientColor setStroke];
        bezier42Path.lineWidth = 1;
        [bezier42Path stroke];


        //// Bezier 43 Drawing
        UIBezierPath* bezier43Path = [UIBezierPath bezierPath];
        [bezier43Path moveToPoint: CGPointMake(119.5, 502.43)];
        [bezier43Path addCurveToPoint: CGPointMake(119.5, 533.36) controlPoint1: CGPointMake(125.52, 546.62) controlPoint2: CGPointMake(119.5, 533.36)];
        [skyGradientColor setStroke];
        bezier43Path.lineWidth = 1;
        [bezier43Path stroke];
    }


    //// Group 24
    {
        //// Bezier 44 Drawing
        UIBezierPath* bezier44Path = [UIBezierPath bezierPath];
        [bezier44Path moveToPoint: CGPointMake(63.69, 464.55)];
        [bezier44Path addCurveToPoint: CGPointMake(63.69, 504.47) controlPoint1: CGPointMake(70.76, 521.58) controlPoint2: CGPointMake(63.69, 504.47)];
        [skyGradientColor setStroke];
        bezier44Path.lineWidth = 1;
        [bezier44Path stroke];


        //// Bezier 45 Drawing
        UIBezierPath* bezier45Path = [UIBezierPath bezierPath];
        [bezier45Path moveToPoint: CGPointMake(34.26, 422.5)];
        [bezier45Path addCurveToPoint: CGPointMake(34.26, 462.42) controlPoint1: CGPointMake(41.32, 479.52) controlPoint2: CGPointMake(34.26, 462.42)];
        [skyGradientColor setStroke];
        bezier45Path.lineWidth = 1;
        [bezier45Path stroke];


        //// Bezier 46 Drawing
        UIBezierPath* bezier46Path = [UIBezierPath bezierPath];
        [bezier46Path moveToPoint: CGPointMake(6, 448.87)];
        [bezier46Path addCurveToPoint: CGPointMake(6, 488.79) controlPoint1: CGPointMake(13.06, 505.89) controlPoint2: CGPointMake(6, 488.79)];
        [skyGradientColor setStroke];
        bezier46Path.lineWidth = 1;
        [bezier46Path stroke];
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas9
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* skyGradientColor = [UIColor colorWithRed: 0.238 green: 0.591 blue: 0.914 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* color17 = [UIColor colorWithRed: 0.333 green: 0.333 blue: 0.333 alpha: 0.86];
    UIColor* shadow2Color = [UIColor colorWithRed: 1 green: 0.799 blue: 0.229 alpha: 1];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* color12 = [UIColor colorWithRed: 1 green: 0.331 blue: 0.331 alpha: 0.876];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(216.5, 11.5, 133, 135)];
        CGContextSaveGState(context);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(283, 11.5), CGPointMake(283, 146.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(282, 52.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(269, 49.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274.5, 67.5, 3.5, 4.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(265, 45.5)];
        [oval58Path addCurveToPoint: CGPointMake(261.15, 63.03) controlPoint1: CGPointMake(266.89, 48.43) controlPoint2: CGPointMake(263.33, 55.89)];
        [oval58Path addCurveToPoint: CGPointMake(265, 78.5) controlPoint1: CGPointMake(259.03, 69.97) controlPoint2: CGPointMake(258.22, 76.62)];
        [oval58Path addCurveToPoint: CGPointMake(253, 107.5) controlPoint1: CGPointMake(280.41, 82.78) controlPoint2: CGPointMake(253, 96.66)];
        [oval58Path addCurveToPoint: CGPointMake(283.5, 146.5) controlPoint1: CGPointMake(253, 144.78) controlPoint2: CGPointMake(320.78, 146.5)];
        [oval58Path addCurveToPoint: CGPointMake(216, 79) controlPoint1: CGPointMake(246.22, 146.5) controlPoint2: CGPointMake(216, 116.28)];
        [oval58Path addCurveToPoint: CGPointMake(283.5, 11.5) controlPoint1: CGPointMake(216, 41.72) controlPoint2: CGPointMake(246.22, 11.5)];
        [oval58Path addCurveToPoint: CGPointMake(265, 45.5) controlPoint1: CGPointMake(300.25, 11.5) controlPoint2: CGPointMake(258.54, 35.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(255.35, 11.5), CGPointMake(255.35, 146.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 243.95, 54.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 257.06, 61.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(240, 54.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(252, 57, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(288.5, 67.5, 3.5, 4.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243.5, 108.5, 5, 3.5)];
        [color2 setFill];
        [oval133Path fill];
        [color setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(278.5, 108.5, 8.5, 4.5)];
        [color2 setFill];
        [oval134Path fill];
        [color setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(387.5, 129.5, 17, 18)];
        [color17 setFill];
        [oval98Path fill];
        [UIColor.blackColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(368.5, 126.5, 23, 24)];
        [color17 setFill];
        [oval16Path fill];
        [UIColor.blackColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381.5, 140.5, 20, 22)];
        [color17 setFill];
        [oval19Path fill];
        [UIColor.blackColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239.5, 140.5, 26, 26)];
        [color17 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253, 149, 21, 20)];
        [color17 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265.5, 143, 25, 24)];
        [color17 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 152, 21, 20)];
        [color17 setFill];
        [oval4Path fill];
        [UIColor.blackColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295.5, 147, 27, 22)];
        [color17 setFill];
        [oval5Path fill];
        [UIColor.blackColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 152, 28, 24)];
        [color17 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(329.5, 146.5, 19, 20)];
        [color17 setFill];
        [oval7Path fill];
        [UIColor.blackColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 149, 27, 26)];
        [color17 setFill];
        [oval9Path fill];
        [UIColor.blackColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 154, 19, 21)];
        [color17 setFill];
        [oval8Path fill];
        [UIColor.blackColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 134, 25, 25)];
        [color17 setFill];
        [oval10Path fill];
        [UIColor.blackColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 134, 24, 25)];
        [color17 setFill];
        [oval11Path fill];
        [UIColor.blackColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(303.5, 129.5, 26, 25)];
        [color17 setFill];
        [oval12Path fill];
        [UIColor.blackColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(322.5, 138.5, 20, 24)];
        [color17 setFill];
        [oval13Path fill];
        [UIColor.blackColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 138, 19, 21)];
        [color17 setFill];
        [oval14Path fill];
        [UIColor.blackColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 129, 27, 25)];
        [color17 setFill];
        [oval15Path fill];
        [UIColor.blackColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 140.5, 23, 22)];
        [color17 setFill];
        [oval17Path fill];
        [UIColor.blackColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 150.5, 22, 23)];
        [color17 setFill];
        [oval18Path fill];
        [UIColor.blackColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(386.5, 153.5, 20, 19)];
        [color17 setFill];
        [oval20Path fill];
        [UIColor.blackColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(398, 140.5, 18, 20)];
        [color17 setFill];
        [oval101Path fill];
        [UIColor.blackColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(400, 155.5, 16, 15)];
        [color17 setFill];
        [oval106Path fill];
        [UIColor.blackColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -16.09, 150.46);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20, 18.34)];
        [color17 setFill];
        [oval104Path fill];
        [UIColor.blackColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];

        CGContextRestoreGState(context);


        //// Oval 105 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -2.59, 136.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 26)];
        [color17 setFill];
        [oval105Path fill];
        [UIColor.blackColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];

        CGContextRestoreGState(context);


        //// Oval 138 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 10.77, 130.21);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval138Path fill];
        [UIColor.blackColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];

        CGContextRestoreGState(context);


        //// Oval 97 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 68.87, 140.72);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval97Path fill];
        [UIColor.blackColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];

        CGContextRestoreGState(context);


        //// Oval 86 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.87, 142.13);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 26, 26)];
        [color17 setFill];
        [oval86Path fill];
        [UIColor.blackColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];

        CGContextRestoreGState(context);


        //// Oval 87 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 129.07, 150.33);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval87Path fill];
        [UIColor.blackColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];

        CGContextRestoreGState(context);


        //// Oval 88 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 112.79, 143.76);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval88Path fill];
        [UIColor.blackColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];

        CGContextRestoreGState(context);


        //// Oval 90 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 80.67, 146.63);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 22)];
        [color17 setFill];
        [oval90Path fill];
        [UIColor.blackColor setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];

        CGContextRestoreGState(context);


        //// Oval 91 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 65.94, 153.12);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 20)];
        [color17 setFill];
        [oval91Path fill];
        [UIColor.blackColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];

        CGContextRestoreGState(context);


        //// Oval 92 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 54.71, 145.22);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval92Path fill];
        [UIColor.blackColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];

        CGContextRestoreGState(context);


        //// Oval 93 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28.6, 147.81);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval93Path fill];
        [UIColor.blackColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];

        CGContextRestoreGState(context);


        //// Oval 94 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 45.45, 152.41);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval94Path fill];
        [UIColor.blackColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];

        CGContextRestoreGState(context);


        //// Oval 95 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 118.6, 134.95);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 25)];
        [color17 setFill];
        [oval95Path fill];
        [UIColor.blackColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];

        CGContextRestoreGState(context);


        //// Oval 96 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.58, 135.29);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval96Path fill];
        [UIColor.blackColor setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];

        CGContextRestoreGState(context);


        //// Oval 99 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 45.51, 136.4);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval99Path fill];
        [UIColor.blackColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];

        CGContextRestoreGState(context);


        //// Oval 100 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28.34, 126.79);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 25)];
        [color17 setFill];
        [oval100Path fill];
        [UIColor.blackColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];

        CGContextRestoreGState(context);


        //// Oval 102 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.44, 138.09);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval102Path fill];
        [UIColor.blackColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];

        CGContextRestoreGState(context);


        //// Oval 103 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 10.59, 147.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval103Path fill];
        [UIColor.blackColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];

        CGContextRestoreGState(context);


        //// Oval 89 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 100.99, 152.35);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval89Path fill];
        [UIColor.blackColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];

        CGContextRestoreGState(context);


        //// Oval 139 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -2.12, 151.5);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18, 16.34)];
        [color17 setFill];
        [oval139Path fill];
        [UIColor.blackColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 69, 20, 18)];
        [color3 setFill];
        [oval109Path fill];
        [UIColor.blackColor setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 61.5, 20, 18)];
        [color3 setFill];
        [oval110Path fill];
        [UIColor.blackColor setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 60, 20, 16)];
        [color3 setFill];
        [oval111Path fill];
        [UIColor.blackColor setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 62.5, 20, 17)];
        [color3 setFill];
        [oval112Path fill];
        [UIColor.blackColor setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 71, 20, 17)];
        [color3 setFill];
        [oval113Path fill];
        [UIColor.blackColor setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 68.5, 21, 18)];
        [color3 setFill];
        [oval114Path fill];
        [UIColor.blackColor setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 115 Drawing
        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 68, 23, 17)];
        [color3 setFill];
        [oval115Path fill];
        [UIColor.blackColor setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 68, 21, 19)];
        [color3 setFill];
        [oval116Path fill];
        [UIColor.blackColor setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 65.5, 20, 15)];
        [color3 setFill];
        [oval117Path fill];
        [UIColor.blackColor setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 59, 20, 18)];
        [color3 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360.5, 51.5, 20, 18)];
        [color3 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 50, 20, 16)];
        [color3 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 52.5, 20, 17)];
        [color3 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(308, 61, 20, 17)];
        [color3 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(315.5, 58.5, 21, 18)];
        [color3 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(330.5, 58, 23, 17)];
        [color3 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(366, 58, 21, 19)];
        [color3 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(353.5, 55.5, 20, 15)];
        [color3 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 50, 20, 18)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.blackColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 42.5, 20, 18)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.blackColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 41, 20, 16)];
        [color3 setFill];
        [oval120Path fill];
        [UIColor.blackColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 43.5, 20, 17)];
        [color3 setFill];
        [oval121Path fill];
        [UIColor.blackColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 52, 20, 17)];
        [color3 setFill];
        [oval122Path fill];
        [UIColor.blackColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 49.5, 21, 18)];
        [color3 setFill];
        [oval123Path fill];
        [UIColor.blackColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 49, 23, 17)];
        [color3 setFill];
        [oval124Path fill];
        [UIColor.blackColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 49, 21, 19)];
        [color3 setFill];
        [oval125Path fill];
        [UIColor.blackColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 46.5, 20, 15)];
        [color3 setFill];
        [oval126Path fill];
        [UIColor.blackColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 54.41, 137.46);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20, 18.34)];
        [color17 setFill];
        [oval21Path fill];
        [UIColor.blackColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];

        CGContextRestoreGState(context);


        //// Oval 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 67.91, 123.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 26)];
        [color17 setFill];
        [oval22Path fill];
        [UIColor.blackColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 23 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.27, 117.21);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval23Path fill];
        [UIColor.blackColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];

        CGContextRestoreGState(context);


        //// Oval 24 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.37, 127.72);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval24Path fill];
        [UIColor.blackColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];

        CGContextRestoreGState(context);


        //// Oval 25 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 208.37, 129.13);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 26, 26)];
        [color17 setFill];
        [oval25Path fill];
        [UIColor.blackColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];

        CGContextRestoreGState(context);


        //// Oval 26 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 199.57, 137.33);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval26Path fill];
        [UIColor.blackColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];

        CGContextRestoreGState(context);


        //// Oval 27 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.29, 130.76);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval27Path fill];
        [UIColor.blackColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];

        CGContextRestoreGState(context);


        //// Oval 28 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.17, 133.63);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 22)];
        [color17 setFill];
        [oval28Path fill];
        [UIColor.blackColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];

        CGContextRestoreGState(context);


        //// Oval 29 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 136.44, 140.12);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24, 20)];
        [color17 setFill];
        [oval29Path fill];
        [UIColor.blackColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];

        CGContextRestoreGState(context);


        //// Oval 30 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 125.21, 132.22);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 20)];
        [color17 setFill];
        [oval30Path fill];
        [UIColor.blackColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];

        CGContextRestoreGState(context);


        //// Oval 31 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.1, 134.81);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 24)];
        [color17 setFill];
        [oval31Path fill];
        [UIColor.blackColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];

        CGContextRestoreGState(context);


        //// Oval 32 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 115.95, 139.41);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval32Path fill];
        [UIColor.blackColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];

        CGContextRestoreGState(context);


        //// Oval 33 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 189.1, 121.95);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25, 25)];
        [color17 setFill];
        [oval33Path fill];
        [UIColor.blackColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];

        CGContextRestoreGState(context);


        //// Oval 34 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 170.08, 122.29);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval34Path fill];
        [UIColor.blackColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];

        CGContextRestoreGState(context);


        //// Oval 35 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 116.01, 123.4);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 21)];
        [color17 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];

        CGContextRestoreGState(context);


        //// Oval 36 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.84, 113.79);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27, 25)];
        [color17 setFill];
        [oval36Path fill];
        [UIColor.blackColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];

        CGContextRestoreGState(context);


        //// Oval 37 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 92.94, 125.09);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval37Path fill];
        [UIColor.blackColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];

        CGContextRestoreGState(context);


        //// Oval 38 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.09, 134.68);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval38Path fill];
        [UIColor.blackColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];

        CGContextRestoreGState(context);


        //// Oval 39 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 171.49, 139.35);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval39Path fill];
        [UIColor.blackColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];

        CGContextRestoreGState(context);


        //// Oval 40 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 68.38, 138.5);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18, 16.34)];
        [color17 setFill];
        [oval40Path fill];
        [UIColor.blackColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(371.5, 113, 17, 18)];
        [color17 setFill];
        [oval130Path fill];
        [UIColor.blackColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(352.5, 110, 23, 24)];
        [color17 setFill];
        [oval131Path fill];
        [UIColor.blackColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 124, 20, 22)];
        [color17 setFill];
        [oval132Path fill];
        [UIColor.blackColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(249.5, 126.5, 25, 24)];
        [color17 setFill];
        [oval135Path fill];
        [UIColor.blackColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 135.5, 21, 20)];
        [color17 setFill];
        [oval136Path fill];
        [UIColor.blackColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(279.5, 130.5, 27, 22)];
        [color17 setFill];
        [oval137Path fill];
        [UIColor.blackColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295, 135.5, 28, 24)];
        [color17 setFill];
        [oval151Path fill];
        [UIColor.blackColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(313.5, 130, 19, 20)];
        [color17 setFill];
        [oval152Path fill];
        [UIColor.blackColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        //// Oval 153 Drawing
        UIBezierPath* oval153Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 132.5, 27, 26)];
        [color17 setFill];
        [oval153Path fill];
        [UIColor.blackColor setStroke];
        oval153Path.lineWidth = 1;
        [oval153Path stroke];


        //// Oval 154 Drawing
        UIBezierPath* oval154Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 137.5, 19, 21)];
        [color17 setFill];
        [oval154Path fill];
        [UIColor.blackColor setStroke];
        oval154Path.lineWidth = 1;
        [oval154Path stroke];


        //// Oval 156 Drawing
        UIBezierPath* oval156Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 117.5, 24, 25)];
        [color17 setFill];
        [oval156Path fill];
        [UIColor.blackColor setStroke];
        oval156Path.lineWidth = 1;
        [oval156Path stroke];


        //// Oval 157 Drawing
        UIBezierPath* oval157Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287.5, 113, 26, 25)];
        [color17 setFill];
        [oval157Path fill];
        [UIColor.blackColor setStroke];
        oval157Path.lineWidth = 1;
        [oval157Path stroke];


        //// Oval 158 Drawing
        UIBezierPath* oval158Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(306.5, 122, 20, 24)];
        [color17 setFill];
        [oval158Path fill];
        [UIColor.blackColor setStroke];
        oval158Path.lineWidth = 1;
        [oval158Path stroke];


        //// Oval 159 Drawing
        UIBezierPath* oval159Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 121.5, 19, 21)];
        [color17 setFill];
        [oval159Path fill];
        [UIColor.blackColor setStroke];
        oval159Path.lineWidth = 1;
        [oval159Path stroke];


        //// Oval 160 Drawing
        UIBezierPath* oval160Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 112.5, 27, 25)];
        [color17 setFill];
        [oval160Path fill];
        [UIColor.blackColor setStroke];
        oval160Path.lineWidth = 1;
        [oval160Path stroke];


        //// Oval 161 Drawing
        UIBezierPath* oval161Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(342, 124, 23, 22)];
        [color17 setFill];
        [oval161Path fill];
        [UIColor.blackColor setStroke];
        oval161Path.lineWidth = 1;
        [oval161Path stroke];


        //// Oval 162 Drawing
        UIBezierPath* oval162Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(354.5, 134, 22, 23)];
        [color17 setFill];
        [oval162Path fill];
        [UIColor.blackColor setStroke];
        oval162Path.lineWidth = 1;
        [oval162Path stroke];


        //// Oval 163 Drawing
        UIBezierPath* oval163Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 137, 20, 19)];
        [color17 setFill];
        [oval163Path fill];
        [UIColor.blackColor setStroke];
        oval163Path.lineWidth = 1;
        [oval163Path stroke];


        //// Oval 164 Drawing
        UIBezierPath* oval164Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(382, 124, 18, 20)];
        [color17 setFill];
        [oval164Path fill];
        [UIColor.blackColor setStroke];
        oval164Path.lineWidth = 1;
        [oval164Path stroke];


        //// Oval 165 Drawing
        UIBezierPath* oval165Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(384, 139, 16, 15)];
        [color17 setFill];
        [oval165Path fill];
        [UIColor.blackColor setStroke];
        oval165Path.lineWidth = 1;
        [oval165Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 140 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 66.98, 118.32);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval140Path fill];
        [UIColor.blackColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];

        CGContextRestoreGState(context);


        //// Oval 141 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 82.73, 119.46);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval141Path fill];
        [UIColor.blackColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];

        CGContextRestoreGState(context);


        //// Oval 142 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 100.61, 125.89);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color17 setFill];
        [oval142Path fill];
        [UIColor.blackColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];

        CGContextRestoreGState(context);


        //// Oval 143 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 109.13, 121.35);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 21)];
        [color17 setFill];
        [oval143Path fill];
        [UIColor.blackColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];

        CGContextRestoreGState(context);


        //// Oval 144 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 123.45, 123.17);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval144Path fill];
        [UIColor.blackColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];

        CGContextRestoreGState(context);


        //// Oval 145 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 135.97, 114.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color17 setFill];
        [oval145Path fill];
        [UIColor.blackColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];

        CGContextRestoreGState(context);


        //// Oval 146 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.28, 120.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color17 setFill];
        [oval146Path fill];
        [UIColor.blackColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];

        CGContextRestoreGState(context);


        //// Oval 147 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.84, 112.02);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 20)];
        [color17 setFill];
        [oval147Path fill];
        [UIColor.blackColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];

        CGContextRestoreGState(context);


        //// Oval 148 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.72, 110);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval148Path fill];
        [UIColor.blackColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];

        CGContextRestoreGState(context);


        //// Oval 149 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 114.57, 103.58);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 22)];
        [color17 setFill];
        [oval149Path fill];
        [UIColor.blackColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];

        CGContextRestoreGState(context);


        //// Oval 150 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 126.06, 111.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 20)];
        [color17 setFill];
        [oval150Path fill];
        [UIColor.blackColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 7
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 71 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 119.98, 116.32);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval71Path fill];
        [UIColor.blackColor setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];

        CGContextRestoreGState(context);


        //// Oval 72 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 135.73, 117.46);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval72Path fill];
        [UIColor.blackColor setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];

        CGContextRestoreGState(context);


        //// Oval 73 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 153.61, 123.89);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color17 setFill];
        [oval73Path fill];
        [UIColor.blackColor setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];

        CGContextRestoreGState(context);


        //// Oval 74 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 162.13, 119.35);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 21)];
        [color17 setFill];
        [oval74Path fill];
        [UIColor.blackColor setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];

        CGContextRestoreGState(context);


        //// Oval 75 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 176.45, 121.17);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval75Path fill];
        [UIColor.blackColor setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];

        CGContextRestoreGState(context);


        //// Oval 78 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 188.97, 112.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color17 setFill];
        [oval78Path fill];
        [UIColor.blackColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];

        CGContextRestoreGState(context);


        //// Oval 107 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 192.28, 118.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color17 setFill];
        [oval107Path fill];
        [UIColor.blackColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];

        CGContextRestoreGState(context);


        //// Oval 108 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 134.84, 110.02);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 20)];
        [color17 setFill];
        [oval108Path fill];
        [UIColor.blackColor setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];

        CGContextRestoreGState(context);


        //// Oval 127 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.72, 108);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval127Path fill];
        [UIColor.blackColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];

        CGContextRestoreGState(context);


        //// Oval 128 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.57, 101.58);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 22)];
        [color17 setFill];
        [oval128Path fill];
        [UIColor.blackColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];

        CGContextRestoreGState(context);


        //// Oval 129 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 179.06, 109.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 20)];
        [color17 setFill];
        [oval129Path fill];
        [UIColor.blackColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 155 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 284.98, 111.82);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval155Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval155Path fill];
        [UIColor.blackColor setStroke];
        oval155Path.lineWidth = 1;
        [oval155Path stroke];

        CGContextRestoreGState(context);


        //// Oval 166 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 300.73, 112.96);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval166Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval166Path fill];
        [UIColor.blackColor setStroke];
        oval166Path.lineWidth = 1;
        [oval166Path stroke];

        CGContextRestoreGState(context);


        //// Oval 167 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 318.61, 119.39);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval167Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color17 setFill];
        [oval167Path fill];
        [UIColor.blackColor setStroke];
        oval167Path.lineWidth = 1;
        [oval167Path stroke];

        CGContextRestoreGState(context);


        //// Oval 168 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 327.13, 114.85);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval168Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 21)];
        [color17 setFill];
        [oval168Path fill];
        [UIColor.blackColor setStroke];
        oval168Path.lineWidth = 1;
        [oval168Path stroke];

        CGContextRestoreGState(context);


        //// Oval 169 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 341.45, 116.67);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval169Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval169Path fill];
        [UIColor.blackColor setStroke];
        oval169Path.lineWidth = 1;
        [oval169Path stroke];

        CGContextRestoreGState(context);


        //// Oval 170 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 353.97, 107.62);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval170Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color17 setFill];
        [oval170Path fill];
        [UIColor.blackColor setStroke];
        oval170Path.lineWidth = 1;
        [oval170Path stroke];

        CGContextRestoreGState(context);


        //// Oval 171 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 357.28, 114.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval171Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color17 setFill];
        [oval171Path fill];
        [UIColor.blackColor setStroke];
        oval171Path.lineWidth = 1;
        [oval171Path stroke];

        CGContextRestoreGState(context);


        //// Oval 172 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 299.84, 105.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval172Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 20)];
        [color17 setFill];
        [oval172Path fill];
        [UIColor.blackColor setStroke];
        oval172Path.lineWidth = 1;
        [oval172Path stroke];

        CGContextRestoreGState(context);


        //// Oval 173 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 316.72, 103.5);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval173Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval173Path fill];
        [UIColor.blackColor setStroke];
        oval173Path.lineWidth = 1;
        [oval173Path stroke];

        CGContextRestoreGState(context);


        //// Oval 174 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 332.57, 97.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval174Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 22)];
        [color17 setFill];
        [oval174Path fill];
        [UIColor.blackColor setStroke];
        oval174Path.lineWidth = 1;
        [oval174Path stroke];

        CGContextRestoreGState(context);


        //// Oval 175 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 344.06, 104.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval175Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 20)];
        [color17 setFill];
        [oval175Path fill];
        [UIColor.blackColor setStroke];
        oval175Path.lineWidth = 1;
        [oval175Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 176 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.24, 64.46);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval176Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.67, 0.68, 20, 18.34)];
        [color17 setFill];
        [oval176Path fill];
        [UIColor.blackColor setStroke];
        oval176Path.lineWidth = 1;
        [oval176Path stroke];

        CGContextRestoreGState(context);


        //// Oval 177 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.01, 50.68);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval177Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.81, 24, 26)];
        [color17 setFill];
        [oval177Path fill];
        [UIColor.blackColor setStroke];
        oval177Path.lineWidth = 1;
        [oval177Path stroke];

        CGContextRestoreGState(context);


        //// Oval 178 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 138.51, 44.21);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval178Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval178Path fill];
        [UIColor.blackColor setStroke];
        oval178Path.lineWidth = 1;
        [oval178Path stroke];

        CGContextRestoreGState(context);


        //// Oval 179 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 84.34, 54.72);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval179Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval179Path fill];
        [UIColor.blackColor setStroke];
        oval179Path.lineWidth = 1;
        [oval179Path stroke];

        CGContextRestoreGState(context);


        //// Oval 180 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 8.56, 56.13);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval180Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.88, 26, 26)];
        [color17 setFill];
        [oval180Path fill];
        [UIColor.blackColor setStroke];
        oval180Path.lineWidth = 1;
        [oval180Path stroke];

        CGContextRestoreGState(context);


        //// Oval 181 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.14, 64.33);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval181Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval181Path fill];
        [UIColor.blackColor setStroke];
        oval181Path.lineWidth = 1;
        [oval181Path stroke];

        CGContextRestoreGState(context);


        //// Oval 182 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 34.56, 57.76);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval182Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval182Path fill];
        [UIColor.blackColor setStroke];
        oval182Path.lineWidth = 1;
        [oval182Path stroke];

        CGContextRestoreGState(context);


        //// Oval 183 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 64.61, 60.63);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval183Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.92, 27, 22)];
        [color17 setFill];
        [oval183Path fill];
        [UIColor.blackColor setStroke];
        oval183Path.lineWidth = 1;
        [oval183Path stroke];

        CGContextRestoreGState(context);


        //// Oval 184 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 82.28, 67.12);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval184Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.81, 24, 20)];
        [color17 setFill];
        [oval184Path fill];
        [UIColor.blackColor setStroke];
        oval184Path.lineWidth = 1;
        [oval184Path stroke];

        CGContextRestoreGState(context);


        //// Oval 185 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.51, 59.22);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval185Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval185Path fill];
        [UIColor.blackColor setStroke];
        oval185Path.lineWidth = 1;
        [oval185Path stroke];

        CGContextRestoreGState(context);


        //// Oval 186 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 118.76, 61.81);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval186Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval186Path fill];
        [UIColor.blackColor setStroke];
        oval186Path.lineWidth = 1;
        [oval186Path stroke];

        CGContextRestoreGState(context);


        //// Oval 187 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 107.8, 66.41);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval187Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval187Path fill];
        [UIColor.blackColor setStroke];
        oval187Path.lineWidth = 1;
        [oval187Path stroke];

        CGContextRestoreGState(context);


        //// Oval 188 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28.79, 48.95);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval188Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.9, 0.84, 25, 25)];
        [color17 setFill];
        [oval188Path fill];
        [UIColor.blackColor setStroke];
        oval188Path.lineWidth = 1;
        [oval188Path stroke];

        CGContextRestoreGState(context);


        //// Oval 189 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.74, 49.29);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval189Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval189Path fill];
        [UIColor.blackColor setStroke];
        oval189Path.lineWidth = 1;
        [oval189Path stroke];

        CGContextRestoreGState(context);


        //// Oval 190 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 107.74, 50.4);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval190Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval190Path fill];
        [UIColor.blackColor setStroke];
        oval190Path.lineWidth = 1;
        [oval190Path stroke];

        CGContextRestoreGState(context);


        //// Oval 191 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.06, 40.79);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval191Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.91, 0.91, 27, 25)];
        [color17 setFill];
        [oval191Path fill];
        [UIColor.blackColor setStroke];
        oval191Path.lineWidth = 1;
        [oval191Path stroke];

        CGContextRestoreGState(context);


        //// Oval 192 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 126.85, 52.09);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval192Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval192Path fill];
        [UIColor.blackColor setStroke];
        oval192Path.lineWidth = 1;
        [oval192Path stroke];

        CGContextRestoreGState(context);


        //// Oval 193 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.73, 61.68);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval193Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval193Path fill];
        [UIColor.blackColor setStroke];
        oval193Path.lineWidth = 1;
        [oval193Path stroke];

        CGContextRestoreGState(context);


        //// Oval 194 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.23, 66.35);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval194Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval194Path fill];
        [UIColor.blackColor setStroke];
        oval194Path.lineWidth = 1;
        [oval194Path stroke];

        CGContextRestoreGState(context);


        //// Oval 195 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.21, 65.5);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval195Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.59, 0.61, 18, 16.34)];
        [color17 setFill];
        [oval195Path fill];
        [UIColor.blackColor setStroke];
        oval195Path.lineWidth = 1;
        [oval195Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 21
    {
        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = [UIBezierPath bezierPath];
        [bezier26Path moveToPoint: CGPointMake(382.5, 259)];
        [bezier26Path addCurveToPoint: CGPointMake(382.5, 315) controlPoint1: CGPointMake(385.5, 339) controlPoint2: CGPointMake(382.5, 315)];
        [skyGradientColor setStroke];
        bezier26Path.lineWidth = 1;
        [bezier26Path stroke];


        //// Bezier 27 Drawing
        UIBezierPath* bezier27Path = [UIBezierPath bezierPath];
        [bezier27Path moveToPoint: CGPointMake(370, 200)];
        [bezier27Path addCurveToPoint: CGPointMake(370, 256) controlPoint1: CGPointMake(373, 280) controlPoint2: CGPointMake(370, 256)];
        [skyGradientColor setStroke];
        bezier27Path.lineWidth = 1;
        [bezier27Path stroke];


        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = [UIBezierPath bezierPath];
        [bezier28Path moveToPoint: CGPointMake(358, 237)];
        [bezier28Path addCurveToPoint: CGPointMake(358, 293) controlPoint1: CGPointMake(361, 317) controlPoint2: CGPointMake(358, 293)];
        [skyGradientColor setStroke];
        bezier28Path.lineWidth = 1;
        [bezier28Path stroke];


        //// Bezier 29 Drawing
        UIBezierPath* bezier29Path = [UIBezierPath bezierPath];
        [bezier29Path moveToPoint: CGPointMake(339, 272.5)];
        [bezier29Path addCurveToPoint: CGPointMake(339, 328.5) controlPoint1: CGPointMake(342, 352.5) controlPoint2: CGPointMake(339, 328.5)];
        [skyGradientColor setStroke];
        bezier29Path.lineWidth = 1;
        [bezier29Path stroke];
    }


    //// Group 18
    {
        //// Bezier 13 Drawing
        UIBezierPath* bezier13Path = [UIBezierPath bezierPath];
        [bezier13Path moveToPoint: CGPointMake(291, 505.5)];
        [bezier13Path addCurveToPoint: CGPointMake(291, 561.5) controlPoint1: CGPointMake(294, 585.5) controlPoint2: CGPointMake(291, 561.5)];
        [skyGradientColor setStroke];
        bezier13Path.lineWidth = 1;
        [bezier13Path stroke];


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = [UIBezierPath bezierPath];
        [bezier14Path moveToPoint: CGPointMake(278.5, 446.5)];
        [bezier14Path addCurveToPoint: CGPointMake(278.5, 502.5) controlPoint1: CGPointMake(281.5, 526.5) controlPoint2: CGPointMake(278.5, 502.5)];
        [skyGradientColor setStroke];
        bezier14Path.lineWidth = 1;
        [bezier14Path stroke];


        //// Bezier 15 Drawing
        UIBezierPath* bezier15Path = [UIBezierPath bezierPath];
        [bezier15Path moveToPoint: CGPointMake(266.5, 483.5)];
        [bezier15Path addCurveToPoint: CGPointMake(266.5, 539.5) controlPoint1: CGPointMake(269.5, 563.5) controlPoint2: CGPointMake(266.5, 539.5)];
        [skyGradientColor setStroke];
        bezier15Path.lineWidth = 1;
        [bezier15Path stroke];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(302.5, 446)];
        [bezier21Path addCurveToPoint: CGPointMake(302.5, 502) controlPoint1: CGPointMake(305.5, 526) controlPoint2: CGPointMake(302.5, 502)];
        [skyGradientColor setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];
    }


    //// Group 19
    {
        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(373, 434)];
        [bezier22Path addCurveToPoint: CGPointMake(373, 490) controlPoint1: CGPointMake(376, 514) controlPoint2: CGPointMake(373, 490)];
        [skyGradientColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];


        //// Bezier 23 Drawing
        UIBezierPath* bezier23Path = [UIBezierPath bezierPath];
        [bezier23Path moveToPoint: CGPointMake(360.5, 375)];
        [bezier23Path addCurveToPoint: CGPointMake(360.5, 431) controlPoint1: CGPointMake(363.5, 455) controlPoint2: CGPointMake(360.5, 431)];
        [skyGradientColor setStroke];
        bezier23Path.lineWidth = 1;
        [bezier23Path stroke];


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = [UIBezierPath bezierPath];
        [bezier24Path moveToPoint: CGPointMake(348.5, 412)];
        [bezier24Path addCurveToPoint: CGPointMake(348.5, 468) controlPoint1: CGPointMake(351.5, 492) controlPoint2: CGPointMake(348.5, 468)];
        [skyGradientColor setStroke];
        bezier24Path.lineWidth = 1;
        [bezier24Path stroke];


        //// Bezier 25 Drawing
        UIBezierPath* bezier25Path = [UIBezierPath bezierPath];
        [bezier25Path moveToPoint: CGPointMake(384.5, 374.5)];
        [bezier25Path addCurveToPoint: CGPointMake(384.5, 430.5) controlPoint1: CGPointMake(387.5, 454.5) controlPoint2: CGPointMake(384.5, 430.5)];
        [skyGradientColor setStroke];
        bezier25Path.lineWidth = 1;
        [bezier25Path stroke];
    }


    //// Group 20
    {
        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = [UIBezierPath bezierPath];
        [bezier34Path moveToPoint: CGPointMake(295, 205.5)];
        [bezier34Path addCurveToPoint: CGPointMake(295, 261.5) controlPoint1: CGPointMake(298, 285.5) controlPoint2: CGPointMake(295, 261.5)];
        [skyGradientColor setStroke];
        bezier34Path.lineWidth = 1;
        [bezier34Path stroke];


        //// Bezier 35 Drawing
        UIBezierPath* bezier35Path = [UIBezierPath bezierPath];
        [bezier35Path moveToPoint: CGPointMake(282.5, 146.5)];
        [bezier35Path addCurveToPoint: CGPointMake(282.5, 202.5) controlPoint1: CGPointMake(285.5, 226.5) controlPoint2: CGPointMake(282.5, 202.5)];
        [skyGradientColor setStroke];
        bezier35Path.lineWidth = 1;
        [bezier35Path stroke];


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = [UIBezierPath bezierPath];
        [bezier36Path moveToPoint: CGPointMake(270.5, 183.5)];
        [bezier36Path addCurveToPoint: CGPointMake(270.5, 239.5) controlPoint1: CGPointMake(273.5, 263.5) controlPoint2: CGPointMake(270.5, 239.5)];
        [skyGradientColor setStroke];
        bezier36Path.lineWidth = 1;
        [bezier36Path stroke];


        //// Bezier 37 Drawing
        UIBezierPath* bezier37Path = [UIBezierPath bezierPath];
        [bezier37Path moveToPoint: CGPointMake(306.5, 146)];
        [bezier37Path addCurveToPoint: CGPointMake(306.5, 202) controlPoint1: CGPointMake(309.5, 226) controlPoint2: CGPointMake(306.5, 202)];
        [skyGradientColor setStroke];
        bezier37Path.lineWidth = 1;
        [bezier37Path stroke];
    }


    //// Group 22
    {
        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = [UIBezierPath bezierPath];
        [bezier38Path moveToPoint: CGPointMake(297, 344.5)];
        [bezier38Path addCurveToPoint: CGPointMake(297, 400.5) controlPoint1: CGPointMake(300, 424.5) controlPoint2: CGPointMake(297, 400.5)];
        [skyGradientColor setStroke];
        bezier38Path.lineWidth = 1;
        [bezier38Path stroke];


        //// Bezier 39 Drawing
        UIBezierPath* bezier39Path = [UIBezierPath bezierPath];
        [bezier39Path moveToPoint: CGPointMake(284.5, 285.5)];
        [bezier39Path addCurveToPoint: CGPointMake(284.5, 341.5) controlPoint1: CGPointMake(287.5, 365.5) controlPoint2: CGPointMake(284.5, 341.5)];
        [skyGradientColor setStroke];
        bezier39Path.lineWidth = 1;
        [bezier39Path stroke];


        //// Bezier 40 Drawing
        UIBezierPath* bezier40Path = [UIBezierPath bezierPath];
        [bezier40Path moveToPoint: CGPointMake(272.5, 322.5)];
        [bezier40Path addCurveToPoint: CGPointMake(272.5, 378.5) controlPoint1: CGPointMake(275.5, 402.5) controlPoint2: CGPointMake(272.5, 378.5)];
        [skyGradientColor setStroke];
        bezier40Path.lineWidth = 1;
        [bezier40Path stroke];


        //// Bezier 41 Drawing
        UIBezierPath* bezier41Path = [UIBezierPath bezierPath];
        [bezier41Path moveToPoint: CGPointMake(253.5, 358)];
        [bezier41Path addCurveToPoint: CGPointMake(253.5, 414) controlPoint1: CGPointMake(256.5, 438) controlPoint2: CGPointMake(253.5, 414)];
        [skyGradientColor setStroke];
        bezier41Path.lineWidth = 1;
        [bezier41Path stroke];
    }


    //// Group 25
    {
        //// Group 14
        {
            //// Bezier Drawing
            UIBezierPath* bezierPath = [UIBezierPath bezierPath];
            [bezierPath moveToPoint: CGPointMake(154.5, 340.5)];
            [bezierPath addCurveToPoint: CGPointMake(154.5, 396.5) controlPoint1: CGPointMake(157.5, 420.5) controlPoint2: CGPointMake(154.5, 396.5)];
            [skyGradientColor setStroke];
            bezierPath.lineWidth = 1;
            [bezierPath stroke];


            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
            [bezier2Path moveToPoint: CGPointMake(125, 286.5)];
            [bezier2Path addCurveToPoint: CGPointMake(125, 342.5) controlPoint1: CGPointMake(128, 366.5) controlPoint2: CGPointMake(125, 342.5)];
            [skyGradientColor setStroke];
            bezier2Path.lineWidth = 1;
            [bezier2Path stroke];


            //// Bezier 3 Drawing
            UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
            [bezier3Path moveToPoint: CGPointMake(113, 323.5)];
            [bezier3Path addCurveToPoint: CGPointMake(113, 379.5) controlPoint1: CGPointMake(116, 403.5) controlPoint2: CGPointMake(113, 379.5)];
            [skyGradientColor setStroke];
            bezier3Path.lineWidth = 1;
            [bezier3Path stroke];
        }


        //// Group 15
        {
            //// Bezier 5 Drawing
            UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
            [bezier5Path moveToPoint: CGPointMake(115, 541)];
            [bezier5Path addCurveToPoint: CGPointMake(115, 597) controlPoint1: CGPointMake(118, 621) controlPoint2: CGPointMake(115, 597)];
            [skyGradientColor setStroke];
            bezier5Path.lineWidth = 1;
            [bezier5Path stroke];


            //// Bezier 6 Drawing
            UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
            [bezier6Path moveToPoint: CGPointMake(102.5, 482)];
            [bezier6Path addCurveToPoint: CGPointMake(102.5, 538) controlPoint1: CGPointMake(105.5, 562) controlPoint2: CGPointMake(102.5, 538)];
            [skyGradientColor setStroke];
            bezier6Path.lineWidth = 1;
            [bezier6Path stroke];


            //// Bezier 7 Drawing
            UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
            [bezier7Path moveToPoint: CGPointMake(90.5, 519)];
            [bezier7Path addCurveToPoint: CGPointMake(90.5, 575) controlPoint1: CGPointMake(93.5, 599) controlPoint2: CGPointMake(90.5, 575)];
            [skyGradientColor setStroke];
            bezier7Path.lineWidth = 1;
            [bezier7Path stroke];


            //// Bezier 8 Drawing
            UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
            [bezier8Path moveToPoint: CGPointMake(71.5, 554.5)];
            [bezier8Path addCurveToPoint: CGPointMake(71.5, 610.5) controlPoint1: CGPointMake(74.5, 634.5) controlPoint2: CGPointMake(71.5, 610.5)];
            [skyGradientColor setStroke];
            bezier8Path.lineWidth = 1;
            [bezier8Path stroke];
        }


        //// Group 16
        {
            //// Bezier 9 Drawing
            UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
            [bezier9Path moveToPoint: CGPointMake(195.5, 199)];
            [bezier9Path addCurveToPoint: CGPointMake(195.5, 255) controlPoint1: CGPointMake(198.5, 279) controlPoint2: CGPointMake(195.5, 255)];
            [skyGradientColor setStroke];
            bezier9Path.lineWidth = 1;
            [bezier9Path stroke];


            //// Bezier 10 Drawing
            UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
            [bezier10Path moveToPoint: CGPointMake(183, 140)];
            [bezier10Path addCurveToPoint: CGPointMake(183, 196) controlPoint1: CGPointMake(186, 220) controlPoint2: CGPointMake(183, 196)];
            [skyGradientColor setStroke];
            bezier10Path.lineWidth = 1;
            [bezier10Path stroke];


            //// Bezier 11 Drawing
            UIBezierPath* bezier11Path = [UIBezierPath bezierPath];
            [bezier11Path moveToPoint: CGPointMake(171, 177)];
            [bezier11Path addCurveToPoint: CGPointMake(171, 233) controlPoint1: CGPointMake(174, 257) controlPoint2: CGPointMake(171, 233)];
            [skyGradientColor setStroke];
            bezier11Path.lineWidth = 1;
            [bezier11Path stroke];


            //// Bezier 12 Drawing
            UIBezierPath* bezier12Path = [UIBezierPath bezierPath];
            [bezier12Path moveToPoint: CGPointMake(152, 212.5)];
            [bezier12Path addCurveToPoint: CGPointMake(152, 268.5) controlPoint1: CGPointMake(155, 292.5) controlPoint2: CGPointMake(152, 268.5)];
            [skyGradientColor setStroke];
            bezier12Path.lineWidth = 1;
            [bezier12Path stroke];
        }


        //// Group 17
        {
            //// Bezier 30 Drawing
            UIBezierPath* bezier30Path = [UIBezierPath bezierPath];
            [bezier30Path moveToPoint: CGPointMake(97.5, 202.5)];
            [bezier30Path addCurveToPoint: CGPointMake(97.5, 258.5) controlPoint1: CGPointMake(100.5, 282.5) controlPoint2: CGPointMake(97.5, 258.5)];
            [skyGradientColor setStroke];
            bezier30Path.lineWidth = 1;
            [bezier30Path stroke];


            //// Bezier 31 Drawing
            UIBezierPath* bezier31Path = [UIBezierPath bezierPath];
            [bezier31Path moveToPoint: CGPointMake(85, 143.5)];
            [bezier31Path addCurveToPoint: CGPointMake(85, 199.5) controlPoint1: CGPointMake(88, 223.5) controlPoint2: CGPointMake(85, 199.5)];
            [skyGradientColor setStroke];
            bezier31Path.lineWidth = 1;
            [bezier31Path stroke];


            //// Bezier 32 Drawing
            UIBezierPath* bezier32Path = [UIBezierPath bezierPath];
            [bezier32Path moveToPoint: CGPointMake(73, 180.5)];
            [bezier32Path addCurveToPoint: CGPointMake(73, 236.5) controlPoint1: CGPointMake(76, 260.5) controlPoint2: CGPointMake(73, 236.5)];
            [skyGradientColor setStroke];
            bezier32Path.lineWidth = 1;
            [bezier32Path stroke];


            //// Bezier 33 Drawing
            UIBezierPath* bezier33Path = [UIBezierPath bezierPath];
            [bezier33Path moveToPoint: CGPointMake(54, 216)];
            [bezier33Path addCurveToPoint: CGPointMake(54, 272) controlPoint1: CGPointMake(57, 296) controlPoint2: CGPointMake(54, 272)];
            [skyGradientColor setStroke];
            bezier33Path.lineWidth = 1;
            [bezier33Path stroke];
        }


        //// Group 23
        {
            //// Bezier 4 Drawing
            UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
            [bezier4Path moveToPoint: CGPointMake(171, 488)];
            [bezier4Path addCurveToPoint: CGPointMake(171, 544) controlPoint1: CGPointMake(174, 568) controlPoint2: CGPointMake(171, 544)];
            [skyGradientColor setStroke];
            bezier4Path.lineWidth = 1;
            [bezier4Path stroke];


            //// Bezier 42 Drawing
            UIBezierPath* bezier42Path = [UIBezierPath bezierPath];
            [bezier42Path moveToPoint: CGPointMake(158.5, 429)];
            [bezier42Path addCurveToPoint: CGPointMake(158.5, 485) controlPoint1: CGPointMake(161.5, 509) controlPoint2: CGPointMake(158.5, 485)];
            [skyGradientColor setStroke];
            bezier42Path.lineWidth = 1;
            [bezier42Path stroke];


            //// Bezier 43 Drawing
            UIBezierPath* bezier43Path = [UIBezierPath bezierPath];
            [bezier43Path moveToPoint: CGPointMake(146.5, 466)];
            [bezier43Path addCurveToPoint: CGPointMake(146.5, 522) controlPoint1: CGPointMake(149.5, 546) controlPoint2: CGPointMake(146.5, 522)];
            [skyGradientColor setStroke];
            bezier43Path.lineWidth = 1;
            [bezier43Path stroke];
        }


        //// Group 24
        {
            //// Bezier 44 Drawing
            UIBezierPath* bezier44Path = [UIBezierPath bezierPath];
            [bezier44Path moveToPoint: CGPointMake(67.5, 407.5)];
            [bezier44Path addCurveToPoint: CGPointMake(67.5, 463.5) controlPoint1: CGPointMake(70.5, 487.5) controlPoint2: CGPointMake(67.5, 463.5)];
            [skyGradientColor setStroke];
            bezier44Path.lineWidth = 1;
            [bezier44Path stroke];


            //// Bezier 45 Drawing
            UIBezierPath* bezier45Path = [UIBezierPath bezierPath];
            [bezier45Path moveToPoint: CGPointMake(55, 348.5)];
            [bezier45Path addCurveToPoint: CGPointMake(55, 404.5) controlPoint1: CGPointMake(58, 428.5) controlPoint2: CGPointMake(55, 404.5)];
            [skyGradientColor setStroke];
            bezier45Path.lineWidth = 1;
            [bezier45Path stroke];


            //// Bezier 46 Drawing
            UIBezierPath* bezier46Path = [UIBezierPath bezierPath];
            [bezier46Path moveToPoint: CGPointMake(43, 385.5)];
            [bezier46Path addCurveToPoint: CGPointMake(43, 441.5) controlPoint1: CGPointMake(46, 465.5) controlPoint2: CGPointMake(43, 441.5)];
            [skyGradientColor setStroke];
            bezier46Path.lineWidth = 1;
            [bezier46Path stroke];
        }
    }


    //// Group 26
    {
        //// Group 27
        {
            //// Bezier 47 Drawing
            UIBezierPath* bezier47Path = [UIBezierPath bezierPath];
            [bezier47Path moveToPoint: CGPointMake(231.5, 360)];
            [bezier47Path addCurveToPoint: CGPointMake(231.5, 416) controlPoint1: CGPointMake(234.5, 440) controlPoint2: CGPointMake(231.5, 416)];
            [skyGradientColor setStroke];
            bezier47Path.lineWidth = 1;
            [bezier47Path stroke];


            //// Bezier 48 Drawing
            UIBezierPath* bezier48Path = [UIBezierPath bezierPath];
            [bezier48Path moveToPoint: CGPointMake(202, 306)];
            [bezier48Path addCurveToPoint: CGPointMake(202, 362) controlPoint1: CGPointMake(205, 386) controlPoint2: CGPointMake(202, 362)];
            [skyGradientColor setStroke];
            bezier48Path.lineWidth = 1;
            [bezier48Path stroke];


            //// Bezier 49 Drawing
            UIBezierPath* bezier49Path = [UIBezierPath bezierPath];
            [bezier49Path moveToPoint: CGPointMake(190, 343)];
            [bezier49Path addCurveToPoint: CGPointMake(190, 399) controlPoint1: CGPointMake(193, 423) controlPoint2: CGPointMake(190, 399)];
            [skyGradientColor setStroke];
            bezier49Path.lineWidth = 1;
            [bezier49Path stroke];
        }


        //// Group 28
        {
            //// Bezier 50 Drawing
            UIBezierPath* bezier50Path = [UIBezierPath bezierPath];
            [bezier50Path moveToPoint: CGPointMake(192, 560.5)];
            [bezier50Path addCurveToPoint: CGPointMake(192, 616.5) controlPoint1: CGPointMake(195, 640.5) controlPoint2: CGPointMake(192, 616.5)];
            [skyGradientColor setStroke];
            bezier50Path.lineWidth = 1;
            [bezier50Path stroke];


            //// Bezier 51 Drawing
            UIBezierPath* bezier51Path = [UIBezierPath bezierPath];
            [bezier51Path moveToPoint: CGPointMake(179.5, 501.5)];
            [bezier51Path addCurveToPoint: CGPointMake(179.5, 557.5) controlPoint1: CGPointMake(182.5, 581.5) controlPoint2: CGPointMake(179.5, 557.5)];
            [skyGradientColor setStroke];
            bezier51Path.lineWidth = 1;
            [bezier51Path stroke];


            //// Bezier 52 Drawing
            UIBezierPath* bezier52Path = [UIBezierPath bezierPath];
            [bezier52Path moveToPoint: CGPointMake(167.5, 538.5)];
            [bezier52Path addCurveToPoint: CGPointMake(167.5, 594.5) controlPoint1: CGPointMake(170.5, 618.5) controlPoint2: CGPointMake(167.5, 594.5)];
            [skyGradientColor setStroke];
            bezier52Path.lineWidth = 1;
            [bezier52Path stroke];


            //// Bezier 53 Drawing
            UIBezierPath* bezier53Path = [UIBezierPath bezierPath];
            [bezier53Path moveToPoint: CGPointMake(148.5, 574)];
            [bezier53Path addCurveToPoint: CGPointMake(148.5, 630) controlPoint1: CGPointMake(151.5, 654) controlPoint2: CGPointMake(148.5, 630)];
            [skyGradientColor setStroke];
            bezier53Path.lineWidth = 1;
            [bezier53Path stroke];
        }


        //// Group 29
        {
            //// Bezier 54 Drawing
            UIBezierPath* bezier54Path = [UIBezierPath bezierPath];
            [bezier54Path moveToPoint: CGPointMake(272.5, 218.5)];
            [bezier54Path addCurveToPoint: CGPointMake(272.5, 274.5) controlPoint1: CGPointMake(275.5, 298.5) controlPoint2: CGPointMake(272.5, 274.5)];
            [skyGradientColor setStroke];
            bezier54Path.lineWidth = 1;
            [bezier54Path stroke];


            //// Bezier 55 Drawing
            UIBezierPath* bezier55Path = [UIBezierPath bezierPath];
            [bezier55Path moveToPoint: CGPointMake(260, 159.5)];
            [bezier55Path addCurveToPoint: CGPointMake(260, 215.5) controlPoint1: CGPointMake(263, 239.5) controlPoint2: CGPointMake(260, 215.5)];
            [skyGradientColor setStroke];
            bezier55Path.lineWidth = 1;
            [bezier55Path stroke];


            //// Bezier 56 Drawing
            UIBezierPath* bezier56Path = [UIBezierPath bezierPath];
            [bezier56Path moveToPoint: CGPointMake(248, 196.5)];
            [bezier56Path addCurveToPoint: CGPointMake(248, 252.5) controlPoint1: CGPointMake(251, 276.5) controlPoint2: CGPointMake(248, 252.5)];
            [skyGradientColor setStroke];
            bezier56Path.lineWidth = 1;
            [bezier56Path stroke];


            //// Bezier 57 Drawing
            UIBezierPath* bezier57Path = [UIBezierPath bezierPath];
            [bezier57Path moveToPoint: CGPointMake(229, 232)];
            [bezier57Path addCurveToPoint: CGPointMake(229, 288) controlPoint1: CGPointMake(232, 312) controlPoint2: CGPointMake(229, 288)];
            [skyGradientColor setStroke];
            bezier57Path.lineWidth = 1;
            [bezier57Path stroke];
        }


        //// Group 30
        {
            //// Bezier 58 Drawing
            UIBezierPath* bezier58Path = [UIBezierPath bezierPath];
            [bezier58Path moveToPoint: CGPointMake(174.5, 222)];
            [bezier58Path addCurveToPoint: CGPointMake(174.5, 278) controlPoint1: CGPointMake(177.5, 302) controlPoint2: CGPointMake(174.5, 278)];
            [skyGradientColor setStroke];
            bezier58Path.lineWidth = 1;
            [bezier58Path stroke];


            //// Bezier 59 Drawing
            UIBezierPath* bezier59Path = [UIBezierPath bezierPath];
            [bezier59Path moveToPoint: CGPointMake(162, 163)];
            [bezier59Path addCurveToPoint: CGPointMake(162, 219) controlPoint1: CGPointMake(165, 243) controlPoint2: CGPointMake(162, 219)];
            [skyGradientColor setStroke];
            bezier59Path.lineWidth = 1;
            [bezier59Path stroke];


            //// Bezier 60 Drawing
            UIBezierPath* bezier60Path = [UIBezierPath bezierPath];
            [bezier60Path moveToPoint: CGPointMake(150, 200)];
            [bezier60Path addCurveToPoint: CGPointMake(150, 256) controlPoint1: CGPointMake(153, 280) controlPoint2: CGPointMake(150, 256)];
            [skyGradientColor setStroke];
            bezier60Path.lineWidth = 1;
            [bezier60Path stroke];


            //// Bezier 61 Drawing
            UIBezierPath* bezier61Path = [UIBezierPath bezierPath];
            [bezier61Path moveToPoint: CGPointMake(131, 235.5)];
            [bezier61Path addCurveToPoint: CGPointMake(131, 291.5) controlPoint1: CGPointMake(134, 315.5) controlPoint2: CGPointMake(131, 291.5)];
            [skyGradientColor setStroke];
            bezier61Path.lineWidth = 1;
            [bezier61Path stroke];
        }


        //// Group 31
        {
            //// Bezier 62 Drawing
            UIBezierPath* bezier62Path = [UIBezierPath bezierPath];
            [bezier62Path moveToPoint: CGPointMake(248, 507.5)];
            [bezier62Path addCurveToPoint: CGPointMake(248, 563.5) controlPoint1: CGPointMake(251, 587.5) controlPoint2: CGPointMake(248, 563.5)];
            [skyGradientColor setStroke];
            bezier62Path.lineWidth = 1;
            [bezier62Path stroke];


            //// Bezier 63 Drawing
            UIBezierPath* bezier63Path = [UIBezierPath bezierPath];
            [bezier63Path moveToPoint: CGPointMake(235.5, 448.5)];
            [bezier63Path addCurveToPoint: CGPointMake(235.5, 504.5) controlPoint1: CGPointMake(238.5, 528.5) controlPoint2: CGPointMake(235.5, 504.5)];
            [skyGradientColor setStroke];
            bezier63Path.lineWidth = 1;
            [bezier63Path stroke];


            //// Bezier 64 Drawing
            UIBezierPath* bezier64Path = [UIBezierPath bezierPath];
            [bezier64Path moveToPoint: CGPointMake(223.5, 485.5)];
            [bezier64Path addCurveToPoint: CGPointMake(223.5, 541.5) controlPoint1: CGPointMake(226.5, 565.5) controlPoint2: CGPointMake(223.5, 541.5)];
            [skyGradientColor setStroke];
            bezier64Path.lineWidth = 1;
            [bezier64Path stroke];
        }


        //// Group 32
        {
            //// Bezier 65 Drawing
            UIBezierPath* bezier65Path = [UIBezierPath bezierPath];
            [bezier65Path moveToPoint: CGPointMake(144.5, 427)];
            [bezier65Path addCurveToPoint: CGPointMake(144.5, 483) controlPoint1: CGPointMake(147.5, 507) controlPoint2: CGPointMake(144.5, 483)];
            [skyGradientColor setStroke];
            bezier65Path.lineWidth = 1;
            [bezier65Path stroke];


            //// Bezier 66 Drawing
            UIBezierPath* bezier66Path = [UIBezierPath bezierPath];
            [bezier66Path moveToPoint: CGPointMake(132, 368)];
            [bezier66Path addCurveToPoint: CGPointMake(132, 424) controlPoint1: CGPointMake(135, 448) controlPoint2: CGPointMake(132, 424)];
            [skyGradientColor setStroke];
            bezier66Path.lineWidth = 1;
            [bezier66Path stroke];


            //// Bezier 67 Drawing
            UIBezierPath* bezier67Path = [UIBezierPath bezierPath];
            [bezier67Path moveToPoint: CGPointMake(120, 405)];
            [bezier67Path addCurveToPoint: CGPointMake(120, 461) controlPoint1: CGPointMake(123, 485) controlPoint2: CGPointMake(120, 461)];
            [skyGradientColor setStroke];
            bezier67Path.lineWidth = 1;
            [bezier67Path stroke];
        }
    }


    //// Group 33
    {
        //// Group 34
        {
            //// Bezier 68 Drawing
            UIBezierPath* bezier68Path = [UIBezierPath bezierPath];
            [bezier68Path moveToPoint: CGPointMake(351, 361.5)];
            [bezier68Path addCurveToPoint: CGPointMake(351, 417.5) controlPoint1: CGPointMake(354, 441.5) controlPoint2: CGPointMake(351, 417.5)];
            [skyGradientColor setStroke];
            bezier68Path.lineWidth = 1;
            [bezier68Path stroke];


            //// Bezier 69 Drawing
            UIBezierPath* bezier69Path = [UIBezierPath bezierPath];
            [bezier69Path moveToPoint: CGPointMake(321.5, 307.5)];
            [bezier69Path addCurveToPoint: CGPointMake(321.5, 363.5) controlPoint1: CGPointMake(324.5, 387.5) controlPoint2: CGPointMake(321.5, 363.5)];
            [skyGradientColor setStroke];
            bezier69Path.lineWidth = 1;
            [bezier69Path stroke];


            //// Bezier 70 Drawing
            UIBezierPath* bezier70Path = [UIBezierPath bezierPath];
            [bezier70Path moveToPoint: CGPointMake(309.5, 344.5)];
            [bezier70Path addCurveToPoint: CGPointMake(309.5, 400.5) controlPoint1: CGPointMake(312.5, 424.5) controlPoint2: CGPointMake(309.5, 400.5)];
            [skyGradientColor setStroke];
            bezier70Path.lineWidth = 1;
            [bezier70Path stroke];
        }


        //// Group 35
        {
            //// Bezier 71 Drawing
            UIBezierPath* bezier71Path = [UIBezierPath bezierPath];
            [bezier71Path moveToPoint: CGPointMake(311.5, 562)];
            [bezier71Path addCurveToPoint: CGPointMake(311.5, 618) controlPoint1: CGPointMake(314.5, 642) controlPoint2: CGPointMake(311.5, 618)];
            [skyGradientColor setStroke];
            bezier71Path.lineWidth = 1;
            [bezier71Path stroke];


            //// Bezier 72 Drawing
            UIBezierPath* bezier72Path = [UIBezierPath bezierPath];
            [bezier72Path moveToPoint: CGPointMake(299, 503)];
            [bezier72Path addCurveToPoint: CGPointMake(299, 559) controlPoint1: CGPointMake(302, 583) controlPoint2: CGPointMake(299, 559)];
            [skyGradientColor setStroke];
            bezier72Path.lineWidth = 1;
            [bezier72Path stroke];


            //// Bezier 73 Drawing
            UIBezierPath* bezier73Path = [UIBezierPath bezierPath];
            [bezier73Path moveToPoint: CGPointMake(287, 540)];
            [bezier73Path addCurveToPoint: CGPointMake(287, 596) controlPoint1: CGPointMake(290, 620) controlPoint2: CGPointMake(287, 596)];
            [skyGradientColor setStroke];
            bezier73Path.lineWidth = 1;
            [bezier73Path stroke];


            //// Bezier 74 Drawing
            UIBezierPath* bezier74Path = [UIBezierPath bezierPath];
            [bezier74Path moveToPoint: CGPointMake(268, 575.5)];
            [bezier74Path addCurveToPoint: CGPointMake(268, 631.5) controlPoint1: CGPointMake(271, 655.5) controlPoint2: CGPointMake(268, 631.5)];
            [skyGradientColor setStroke];
            bezier74Path.lineWidth = 1;
            [bezier74Path stroke];
        }


        //// Group 36
        {
            //// Bezier 75 Drawing
            UIBezierPath* bezier75Path = [UIBezierPath bezierPath];
            [bezier75Path moveToPoint: CGPointMake(392, 220)];
            [bezier75Path addCurveToPoint: CGPointMake(392, 276) controlPoint1: CGPointMake(395, 300) controlPoint2: CGPointMake(392, 276)];
            [skyGradientColor setStroke];
            bezier75Path.lineWidth = 1;
            [bezier75Path stroke];


            //// Bezier 76 Drawing
            UIBezierPath* bezier76Path = [UIBezierPath bezierPath];
            [bezier76Path moveToPoint: CGPointMake(379.5, 161)];
            [bezier76Path addCurveToPoint: CGPointMake(379.5, 217) controlPoint1: CGPointMake(382.5, 241) controlPoint2: CGPointMake(379.5, 217)];
            [skyGradientColor setStroke];
            bezier76Path.lineWidth = 1;
            [bezier76Path stroke];


            //// Bezier 77 Drawing
            UIBezierPath* bezier77Path = [UIBezierPath bezierPath];
            [bezier77Path moveToPoint: CGPointMake(367.5, 198)];
            [bezier77Path addCurveToPoint: CGPointMake(367.5, 254) controlPoint1: CGPointMake(370.5, 278) controlPoint2: CGPointMake(367.5, 254)];
            [skyGradientColor setStroke];
            bezier77Path.lineWidth = 1;
            [bezier77Path stroke];


            //// Bezier 78 Drawing
            UIBezierPath* bezier78Path = [UIBezierPath bezierPath];
            [bezier78Path moveToPoint: CGPointMake(348.5, 233.5)];
            [bezier78Path addCurveToPoint: CGPointMake(348.5, 289.5) controlPoint1: CGPointMake(351.5, 313.5) controlPoint2: CGPointMake(348.5, 289.5)];
            [skyGradientColor setStroke];
            bezier78Path.lineWidth = 1;
            [bezier78Path stroke];
        }


        //// Group 37
        {
            //// Bezier 79 Drawing
            UIBezierPath* bezier79Path = [UIBezierPath bezierPath];
            [bezier79Path moveToPoint: CGPointMake(294, 223.5)];
            [bezier79Path addCurveToPoint: CGPointMake(294, 279.5) controlPoint1: CGPointMake(297, 303.5) controlPoint2: CGPointMake(294, 279.5)];
            [skyGradientColor setStroke];
            bezier79Path.lineWidth = 1;
            [bezier79Path stroke];


            //// Bezier 80 Drawing
            UIBezierPath* bezier80Path = [UIBezierPath bezierPath];
            [bezier80Path moveToPoint: CGPointMake(281.5, 164.5)];
            [bezier80Path addCurveToPoint: CGPointMake(281.5, 220.5) controlPoint1: CGPointMake(284.5, 244.5) controlPoint2: CGPointMake(281.5, 220.5)];
            [skyGradientColor setStroke];
            bezier80Path.lineWidth = 1;
            [bezier80Path stroke];


            //// Bezier 81 Drawing
            UIBezierPath* bezier81Path = [UIBezierPath bezierPath];
            [bezier81Path moveToPoint: CGPointMake(269.5, 201.5)];
            [bezier81Path addCurveToPoint: CGPointMake(269.5, 257.5) controlPoint1: CGPointMake(272.5, 281.5) controlPoint2: CGPointMake(269.5, 257.5)];
            [skyGradientColor setStroke];
            bezier81Path.lineWidth = 1;
            [bezier81Path stroke];


            //// Bezier 82 Drawing
            UIBezierPath* bezier82Path = [UIBezierPath bezierPath];
            [bezier82Path moveToPoint: CGPointMake(250.5, 237)];
            [bezier82Path addCurveToPoint: CGPointMake(250.5, 293) controlPoint1: CGPointMake(253.5, 317) controlPoint2: CGPointMake(250.5, 293)];
            [skyGradientColor setStroke];
            bezier82Path.lineWidth = 1;
            [bezier82Path stroke];
        }


        //// Group 38
        {
            //// Bezier 83 Drawing
            UIBezierPath* bezier83Path = [UIBezierPath bezierPath];
            [bezier83Path moveToPoint: CGPointMake(367.5, 509)];
            [bezier83Path addCurveToPoint: CGPointMake(367.5, 565) controlPoint1: CGPointMake(370.5, 589) controlPoint2: CGPointMake(367.5, 565)];
            [skyGradientColor setStroke];
            bezier83Path.lineWidth = 1;
            [bezier83Path stroke];


            //// Bezier 84 Drawing
            UIBezierPath* bezier84Path = [UIBezierPath bezierPath];
            [bezier84Path moveToPoint: CGPointMake(355, 450)];
            [bezier84Path addCurveToPoint: CGPointMake(355, 506) controlPoint1: CGPointMake(358, 530) controlPoint2: CGPointMake(355, 506)];
            [skyGradientColor setStroke];
            bezier84Path.lineWidth = 1;
            [bezier84Path stroke];


            //// Bezier 85 Drawing
            UIBezierPath* bezier85Path = [UIBezierPath bezierPath];
            [bezier85Path moveToPoint: CGPointMake(343, 487)];
            [bezier85Path addCurveToPoint: CGPointMake(343, 543) controlPoint1: CGPointMake(346, 567) controlPoint2: CGPointMake(343, 543)];
            [skyGradientColor setStroke];
            bezier85Path.lineWidth = 1;
            [bezier85Path stroke];
        }


        //// Group 39
        {
            //// Bezier 86 Drawing
            UIBezierPath* bezier86Path = [UIBezierPath bezierPath];
            [bezier86Path moveToPoint: CGPointMake(264, 428.5)];
            [bezier86Path addCurveToPoint: CGPointMake(264, 484.5) controlPoint1: CGPointMake(267, 508.5) controlPoint2: CGPointMake(264, 484.5)];
            [skyGradientColor setStroke];
            bezier86Path.lineWidth = 1;
            [bezier86Path stroke];


            //// Bezier 87 Drawing
            UIBezierPath* bezier87Path = [UIBezierPath bezierPath];
            [bezier87Path moveToPoint: CGPointMake(251.5, 369.5)];
            [bezier87Path addCurveToPoint: CGPointMake(251.5, 425.5) controlPoint1: CGPointMake(254.5, 449.5) controlPoint2: CGPointMake(251.5, 425.5)];
            [skyGradientColor setStroke];
            bezier87Path.lineWidth = 1;
            [bezier87Path stroke];


            //// Bezier 88 Drawing
            UIBezierPath* bezier88Path = [UIBezierPath bezierPath];
            [bezier88Path moveToPoint: CGPointMake(239.5, 406.5)];
            [bezier88Path addCurveToPoint: CGPointMake(239.5, 462.5) controlPoint1: CGPointMake(242.5, 486.5) controlPoint2: CGPointMake(239.5, 462.5)];
            [skyGradientColor setStroke];
            bezier88Path.lineWidth = 1;
            [bezier88Path stroke];
        }
    }


    //// Group 40
    {
        //// Group 41
        {
            //// Bezier 89 Drawing
            UIBezierPath* bezier89Path = [UIBezierPath bezierPath];
            [bezier89Path moveToPoint: CGPointMake(111.5, 278.5)];
            [bezier89Path addCurveToPoint: CGPointMake(111.5, 334.5) controlPoint1: CGPointMake(114.5, 358.5) controlPoint2: CGPointMake(111.5, 334.5)];
            [skyGradientColor setStroke];
            bezier89Path.lineWidth = 1;
            [bezier89Path stroke];


            //// Bezier 90 Drawing
            UIBezierPath* bezier90Path = [UIBezierPath bezierPath];
            [bezier90Path moveToPoint: CGPointMake(82, 224.5)];
            [bezier90Path addCurveToPoint: CGPointMake(82, 280.5) controlPoint1: CGPointMake(85, 304.5) controlPoint2: CGPointMake(82, 280.5)];
            [skyGradientColor setStroke];
            bezier90Path.lineWidth = 1;
            [bezier90Path stroke];


            //// Bezier 91 Drawing
            UIBezierPath* bezier91Path = [UIBezierPath bezierPath];
            [bezier91Path moveToPoint: CGPointMake(70, 261.5)];
            [bezier91Path addCurveToPoint: CGPointMake(70, 317.5) controlPoint1: CGPointMake(73, 341.5) controlPoint2: CGPointMake(70, 317.5)];
            [skyGradientColor setStroke];
            bezier91Path.lineWidth = 1;
            [bezier91Path stroke];
        }


        //// Group 42
        {
            //// Bezier 92 Drawing
            UIBezierPath* bezier92Path = [UIBezierPath bezierPath];
            [bezier92Path moveToPoint: CGPointMake(72, 479)];
            [bezier92Path addCurveToPoint: CGPointMake(72, 535) controlPoint1: CGPointMake(75, 559) controlPoint2: CGPointMake(72, 535)];
            [skyGradientColor setStroke];
            bezier92Path.lineWidth = 1;
            [bezier92Path stroke];


            //// Bezier 93 Drawing
            UIBezierPath* bezier93Path = [UIBezierPath bezierPath];
            [bezier93Path moveToPoint: CGPointMake(59.5, 420)];
            [bezier93Path addCurveToPoint: CGPointMake(59.5, 476) controlPoint1: CGPointMake(62.5, 500) controlPoint2: CGPointMake(59.5, 476)];
            [skyGradientColor setStroke];
            bezier93Path.lineWidth = 1;
            [bezier93Path stroke];


            //// Bezier 94 Drawing
            UIBezierPath* bezier94Path = [UIBezierPath bezierPath];
            [bezier94Path moveToPoint: CGPointMake(47.5, 457)];
            [bezier94Path addCurveToPoint: CGPointMake(47.5, 513) controlPoint1: CGPointMake(50.5, 537) controlPoint2: CGPointMake(47.5, 513)];
            [skyGradientColor setStroke];
            bezier94Path.lineWidth = 1;
            [bezier94Path stroke];


            //// Bezier 95 Drawing
            UIBezierPath* bezier95Path = [UIBezierPath bezierPath];
            [bezier95Path moveToPoint: CGPointMake(28.5, 492.5)];
            [bezier95Path addCurveToPoint: CGPointMake(28.5, 548.5) controlPoint1: CGPointMake(31.5, 572.5) controlPoint2: CGPointMake(28.5, 548.5)];
            [skyGradientColor setStroke];
            bezier95Path.lineWidth = 1;
            [bezier95Path stroke];
        }


        //// Group 43
        {
            //// Bezier 96 Drawing
            UIBezierPath* bezier96Path = [UIBezierPath bezierPath];
            [bezier96Path moveToPoint: CGPointMake(152.5, 137)];
            [bezier96Path addCurveToPoint: CGPointMake(152.5, 193) controlPoint1: CGPointMake(155.5, 217) controlPoint2: CGPointMake(152.5, 193)];
            [skyGradientColor setStroke];
            bezier96Path.lineWidth = 1;
            [bezier96Path stroke];


            //// Bezier 97 Drawing
            UIBezierPath* bezier97Path = [UIBezierPath bezierPath];
            [bezier97Path moveToPoint: CGPointMake(140, 78)];
            [bezier97Path addCurveToPoint: CGPointMake(140, 134) controlPoint1: CGPointMake(143, 158) controlPoint2: CGPointMake(140, 134)];
            [skyGradientColor setStroke];
            bezier97Path.lineWidth = 1;
            [bezier97Path stroke];


            //// Bezier 98 Drawing
            UIBezierPath* bezier98Path = [UIBezierPath bezierPath];
            [bezier98Path moveToPoint: CGPointMake(128, 115)];
            [bezier98Path addCurveToPoint: CGPointMake(128, 171) controlPoint1: CGPointMake(131, 195) controlPoint2: CGPointMake(128, 171)];
            [skyGradientColor setStroke];
            bezier98Path.lineWidth = 1;
            [bezier98Path stroke];


            //// Bezier 99 Drawing
            UIBezierPath* bezier99Path = [UIBezierPath bezierPath];
            [bezier99Path moveToPoint: CGPointMake(109, 150.5)];
            [bezier99Path addCurveToPoint: CGPointMake(109, 206.5) controlPoint1: CGPointMake(112, 230.5) controlPoint2: CGPointMake(109, 206.5)];
            [skyGradientColor setStroke];
            bezier99Path.lineWidth = 1;
            [bezier99Path stroke];
        }


        //// Group 44
        {
            //// Bezier 100 Drawing
            UIBezierPath* bezier100Path = [UIBezierPath bezierPath];
            [bezier100Path moveToPoint: CGPointMake(54.5, 140.5)];
            [bezier100Path addCurveToPoint: CGPointMake(54.5, 196.5) controlPoint1: CGPointMake(57.5, 220.5) controlPoint2: CGPointMake(54.5, 196.5)];
            [skyGradientColor setStroke];
            bezier100Path.lineWidth = 1;
            [bezier100Path stroke];


            //// Bezier 101 Drawing
            UIBezierPath* bezier101Path = [UIBezierPath bezierPath];
            [bezier101Path moveToPoint: CGPointMake(42, 81.5)];
            [bezier101Path addCurveToPoint: CGPointMake(42, 137.5) controlPoint1: CGPointMake(45, 161.5) controlPoint2: CGPointMake(42, 137.5)];
            [skyGradientColor setStroke];
            bezier101Path.lineWidth = 1;
            [bezier101Path stroke];


            //// Bezier 102 Drawing
            UIBezierPath* bezier102Path = [UIBezierPath bezierPath];
            [bezier102Path moveToPoint: CGPointMake(30, 118.5)];
            [bezier102Path addCurveToPoint: CGPointMake(30, 174.5) controlPoint1: CGPointMake(33, 198.5) controlPoint2: CGPointMake(30, 174.5)];
            [skyGradientColor setStroke];
            bezier102Path.lineWidth = 1;
            [bezier102Path stroke];


            //// Bezier 103 Drawing
            UIBezierPath* bezier103Path = [UIBezierPath bezierPath];
            [bezier103Path moveToPoint: CGPointMake(11, 154)];
            [bezier103Path addCurveToPoint: CGPointMake(11, 210) controlPoint1: CGPointMake(14, 234) controlPoint2: CGPointMake(11, 210)];
            [skyGradientColor setStroke];
            bezier103Path.lineWidth = 1;
            [bezier103Path stroke];
        }


        //// Group 45
        {
            //// Bezier 104 Drawing
            UIBezierPath* bezier104Path = [UIBezierPath bezierPath];
            [bezier104Path moveToPoint: CGPointMake(128, 426)];
            [bezier104Path addCurveToPoint: CGPointMake(128, 482) controlPoint1: CGPointMake(131, 506) controlPoint2: CGPointMake(128, 482)];
            [skyGradientColor setStroke];
            bezier104Path.lineWidth = 1;
            [bezier104Path stroke];


            //// Bezier 105 Drawing
            UIBezierPath* bezier105Path = [UIBezierPath bezierPath];
            [bezier105Path moveToPoint: CGPointMake(115.5, 367)];
            [bezier105Path addCurveToPoint: CGPointMake(115.5, 423) controlPoint1: CGPointMake(118.5, 447) controlPoint2: CGPointMake(115.5, 423)];
            [skyGradientColor setStroke];
            bezier105Path.lineWidth = 1;
            [bezier105Path stroke];


            //// Bezier 106 Drawing
            UIBezierPath* bezier106Path = [UIBezierPath bezierPath];
            [bezier106Path moveToPoint: CGPointMake(103.5, 404)];
            [bezier106Path addCurveToPoint: CGPointMake(103.5, 460) controlPoint1: CGPointMake(106.5, 484) controlPoint2: CGPointMake(103.5, 460)];
            [skyGradientColor setStroke];
            bezier106Path.lineWidth = 1;
            [bezier106Path stroke];
        }


        //// Group 46
        {
            //// Bezier 107 Drawing
            UIBezierPath* bezier107Path = [UIBezierPath bezierPath];
            [bezier107Path moveToPoint: CGPointMake(24.5, 345.5)];
            [bezier107Path addCurveToPoint: CGPointMake(24.5, 401.5) controlPoint1: CGPointMake(27.5, 425.5) controlPoint2: CGPointMake(24.5, 401.5)];
            [skyGradientColor setStroke];
            bezier107Path.lineWidth = 1;
            [bezier107Path stroke];


            //// Bezier 108 Drawing
            UIBezierPath* bezier108Path = [UIBezierPath bezierPath];
            [bezier108Path moveToPoint: CGPointMake(12, 286.5)];
            [bezier108Path addCurveToPoint: CGPointMake(12, 342.5) controlPoint1: CGPointMake(15, 366.5) controlPoint2: CGPointMake(12, 342.5)];
            [skyGradientColor setStroke];
            bezier108Path.lineWidth = 1;
            [bezier108Path stroke];


            //// Bezier 109 Drawing
            UIBezierPath* bezier109Path = [UIBezierPath bezierPath];
            [bezier109Path moveToPoint: CGPointMake(0, 323.5)];
            [bezier109Path addCurveToPoint: CGPointMake(0, 379.5) controlPoint1: CGPointMake(3, 403.5) controlPoint2: CGPointMake(0, 379.5)];
            [skyGradientColor setStroke];
            bezier109Path.lineWidth = 1;
            [bezier109Path stroke];
        }
    }


    //// Star 8 Drawing
    UIBezierPath* star8Path = [UIBezierPath bezierPath];
    [star8Path moveToPoint: CGPointMake(194.5, 30.5)];
    [star8Path addLineToPoint: CGPointMake(199.44, 37.7)];
    [star8Path addLineToPoint: CGPointMake(207.81, 40.17)];
    [star8Path addLineToPoint: CGPointMake(202.49, 47.1)];
    [star8Path addLineToPoint: CGPointMake(202.73, 55.83)];
    [star8Path addLineToPoint: CGPointMake(194.5, 52.9)];
    [star8Path addLineToPoint: CGPointMake(186.27, 55.83)];
    [star8Path addLineToPoint: CGPointMake(186.51, 47.1)];
    [star8Path addLineToPoint: CGPointMake(181.19, 40.17)];
    [star8Path addLineToPoint: CGPointMake(189.56, 37.7)];
    [star8Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
    [color11 setFill];
    [star8Path fill];
    CGContextRestoreGState(context);

    [shadow2Color setStroke];
    star8Path.lineWidth = 1;
    [star8Path stroke];


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 41 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.74, 47.96);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.67, 0.68, 20, 18.34)];
        [color17 setFill];
        [oval41Path fill];
        [UIColor.blackColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];

        CGContextRestoreGState(context);


        //// Oval 42 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.51, 34.18);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.81, 24, 26)];
        [color17 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];

        CGContextRestoreGState(context);


        //// Oval 43 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.01, 27.71);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval43Path fill];
        [UIColor.blackColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];

        CGContextRestoreGState(context);


        //// Oval 44 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 84.84, 38.22);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval44Path fill];
        [UIColor.blackColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];

        CGContextRestoreGState(context);


        //// Oval 45 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 9.06, 39.63);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.88, 26, 26)];
        [color17 setFill];
        [oval45Path fill];
        [UIColor.blackColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];

        CGContextRestoreGState(context);


        //// Oval 46 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.64, 47.83);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval46Path fill];
        [UIColor.blackColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];

        CGContextRestoreGState(context);


        //// Oval 47 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 35.06, 41.26);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval47Path fill];
        [UIColor.blackColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];

        CGContextRestoreGState(context);


        //// Oval 48 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 65.11, 44.13);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.92, 27, 22)];
        [color17 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];

        CGContextRestoreGState(context);


        //// Oval 49 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 82.78, 50.62);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.81, 24, 20)];
        [color17 setFill];
        [oval49Path fill];
        [UIColor.blackColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];

        CGContextRestoreGState(context);


        //// Oval 50 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.01, 42.72);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval50Path fill];
        [UIColor.blackColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];

        CGContextRestoreGState(context);


        //// Oval 51 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 119.26, 45.31);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval51Path fill];
        [UIColor.blackColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];

        CGContextRestoreGState(context);


        //// Oval 52 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.3, 49.91);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval52Path fill];
        [UIColor.blackColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];

        CGContextRestoreGState(context);


        //// Oval 53 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 29.29, 32.45);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.9, 0.84, 25, 25)];
        [color17 setFill];
        [oval53Path fill];
        [UIColor.blackColor setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];

        CGContextRestoreGState(context);


        //// Oval 60 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 51.24, 32.79);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];

        CGContextRestoreGState(context);


        //// Oval 61 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.24, 33.9);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];

        CGContextRestoreGState(context);


        //// Oval 62 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.56, 24.29);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.91, 0.91, 27, 25)];
        [color17 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];

        CGContextRestoreGState(context);


        //// Oval 65 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 127.35, 35.59);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];

        CGContextRestoreGState(context);


        //// Oval 68 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 140.23, 45.18);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval68Path fill];
        [UIColor.blackColor setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];

        CGContextRestoreGState(context);


        //// Oval 69 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.73, 49.85);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval69Path fill];
        [UIColor.blackColor setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];

        CGContextRestoreGState(context);


        //// Oval 70 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.71, 49);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.59, 0.61, 18, 16.34)];
        [color17 setFill];
        [oval70Path fill];
        [UIColor.blackColor setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 47
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 202.35, 29.52);
        CGContextRotateCTM(context, 3.95 * M_PI / 180);



        //// Oval 196 Drawing
        UIBezierPath* oval196Path = [UIBezierPath bezierPath];
        [oval196Path moveToPoint: CGPointMake(10.12, -2.14)];
        [oval196Path addCurveToPoint: CGPointMake(10.3, -2.14) controlPoint1: CGPointMake(10.12, -0.2) controlPoint2: CGPointMake(11.65, -1.7)];
        [oval196Path addCurveToPoint: CGPointMake(8.4, 0.83) controlPoint1: CGPointMake(9.55, -2.38) controlPoint2: CGPointMake(9.08, -0.23)];
        [oval196Path addCurveToPoint: CGPointMake(5.55, -2.14) controlPoint1: CGPointMake(7.6, 2.08) controlPoint2: CGPointMake(6.71, -1.77)];
        [oval196Path addCurveToPoint: CGPointMake(2.82, 0.83) controlPoint1: CGPointMake(4.74, -2.39) controlPoint2: CGPointMake(3.73, 1.14)];
        [oval196Path addCurveToPoint: CGPointMake(-1.11, -2.14) controlPoint1: CGPointMake(1.64, 0.43) controlPoint2: CGPointMake(0.22, -2.14)];
        [oval196Path addCurveToPoint: CGPointMake(-3.96, 0.83) controlPoint1: CGPointMake(-2.98, -2.14) controlPoint2: CGPointMake(-2.99, 2.18)];
        [oval196Path addCurveToPoint: CGPointMake(-6.81, -2.14) controlPoint1: CGPointMake(-4.69, -0.17) controlPoint2: CGPointMake(-5.55, -3.34)];
        [oval196Path addCurveToPoint: CGPointMake(-9.67, -0.16) controlPoint1: CGPointMake(-7.72, -1.27) controlPoint2: CGPointMake(-9.05, 1.76)];
        [oval196Path addCurveToPoint: CGPointMake(-13.85, -2.14) controlPoint1: CGPointMake(-11.57, -6.09) controlPoint2: CGPointMake(-13.85, 0.5)];
        [oval196Path addCurveToPoint: CGPointMake(-1.59, -11.52) controlPoint1: CGPointMake(-13.85, -8.41) controlPoint2: CGPointMake(-8.94, -11.52)];
        [oval196Path addCurveToPoint: CGPointMake(10.12, -2.14) controlPoint1: CGPointMake(5.77, -11.52) controlPoint2: CGPointMake(10.12, -8.41)];
        [oval196Path closePath];
        [color12 setFill];
        [oval196Path fill];
        [UIColor.blackColor setStroke];
        oval196Path.lineWidth = 1;
        [oval196Path stroke];


        //// Bezier 110 Drawing
        UIBezierPath* bezier110Path = [UIBezierPath bezierPath];
        [bezier110Path moveToPoint: CGPointMake(-2.57, -12.02)];
        [bezier110Path addCurveToPoint: CGPointMake(-8.8, -2.14) controlPoint1: CGPointMake(-9.69, -7.9) controlPoint2: CGPointMake(-8.8, -2.14)];
        [UIColor.blackColor setStroke];
        bezier110Path.lineWidth = 1;
        [bezier110Path stroke];


        //// Bezier 111 Drawing
        UIBezierPath* bezier111Path = [UIBezierPath bezierPath];
        [bezier111Path moveToPoint: CGPointMake(-2.57, -12.02)];
        [bezier111Path addCurveToPoint: CGPointMake(3.57, -2.75) controlPoint1: CGPointMake(6.65, -8.45) controlPoint2: CGPointMake(3.57, -2.75)];
        [UIColor.blackColor setStroke];
        bezier111Path.lineWidth = 1;
        [bezier111Path stroke];


        //// Bezier 112 Drawing
        UIBezierPath* bezier112Path = [UIBezierPath bezierPath];
        [bezier112Path moveToPoint: CGPointMake(-2.57, -11.03)];
        [bezier112Path addLineToPoint: CGPointMake(-2.57, -2.14)];
        [UIColor.blackColor setStroke];
        bezier112Path.lineWidth = 1;
        [bezier112Path stroke];


        //// Bezier 113 Drawing
        UIBezierPath* bezier113Path = [UIBezierPath bezierPath];
        [bezier113Path moveToPoint: CGPointMake(-2.25, -3.71)];
        [bezier113Path addCurveToPoint: CGPointMake(-2.25, 1.23) controlPoint1: CGPointMake(-1.35, -1.82) controlPoint2: CGPointMake(-2.64, -0.07)];
        [bezier113Path addCurveToPoint: CGPointMake(-2.25, 7.16) controlPoint1: CGPointMake(-0.18, 8.03) controlPoint2: CGPointMake(-2.25, 7.16)];
        [UIColor.blackColor setStroke];
        bezier113Path.lineWidth = 1;
        [bezier113Path stroke];



        CGContextRestoreGState(context);
    }


    //// Group 48
    {
        //// Bezier 114 Drawing
        UIBezierPath* bezier114Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier114Path.lineWidth = 1;
        [bezier114Path stroke];


        //// Oval 197 Drawing
        UIBezierPath* oval197Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(189.5, 38.5, 4, 6)];
        [UIColor.whiteColor setFill];
        [oval197Path fill];
        [color setStroke];
        oval197Path.lineWidth = 1;
        [oval197Path stroke];


        //// Oval 198 Drawing
        UIBezierPath* oval198Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(194, 38.5, 4, 6)];
        [UIColor.whiteColor setFill];
        [oval198Path fill];
        [color setStroke];
        oval198Path.lineWidth = 1;
        [oval198Path stroke];


        //// Oval 199 Drawing
        UIBezierPath* oval199Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(190.5, 41.5, 3, 3)];
        [UIColor.blackColor setFill];
        [oval199Path fill];
        [color setStroke];
        oval199Path.lineWidth = 1;
        [oval199Path stroke];


        //// Oval 200 Drawing
        UIBezierPath* oval200Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(195, 41.5, 3, 3)];
        [UIColor.blackColor setFill];
        [oval200Path fill];
        [color setStroke];
        oval200Path.lineWidth = 1;
        [oval200Path stroke];


        //// Bezier 115 Drawing
        UIBezierPath* bezier115Path = [UIBezierPath bezierPath];
        [bezier115Path moveToPoint: CGPointMake(189.5, 47.5)];
        [bezier115Path addCurveToPoint: CGPointMake(198.5, 47.5) controlPoint1: CGPointMake(195.73, 50.18) controlPoint2: CGPointMake(198.5, 47.5)];
        [bezier115Path addCurveToPoint: CGPointMake(192.96, 49.84) controlPoint1: CGPointMake(198.5, 47.5) controlPoint2: CGPointMake(196.42, 52.19)];
        [bezier115Path addCurveToPoint: CGPointMake(189.5, 47.5) controlPoint1: CGPointMake(189.5, 47.5) controlPoint2: CGPointMake(189.5, 47.5)];
        [UIColor.whiteColor setFill];
        [bezier115Path fill];
        [UIColor.blackColor setStroke];
        bezier115Path.lineWidth = 1;
        [bezier115Path stroke];
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas10
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* skyGradientColor = [UIColor colorWithRed: 0.238 green: 0.591 blue: 0.914 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* color17 = [UIColor colorWithRed: 0.333 green: 0.333 blue: 0.333 alpha: 0.86];
    UIColor* shadow2Color = [UIColor colorWithRed: 1 green: 0.799 blue: 0.229 alpha: 1];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* lightningGradientColor = [UIColor colorWithRed: 1 green: 0.841 blue: 0.139 alpha: 0.841];
    UIColor* lightningGradientColor2 = [UIColor colorWithRed: 1 green: 0.463 blue: 0 alpha: 0.87];
    UIColor* color13 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.525];
    UIColor* lightningShadowColor = [UIColor colorWithRed: 1 green: 0.979 blue: 0.615 alpha: 1];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);
    CGFloat lightningGradientLocations[] = {0, 0.55, 1};
    CGGradientRef lightningGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)lightningGradientColor.CGColor, (id)[lightningGradientColor blendedColorWithFraction: 0.5 ofColor: lightningGradientColor2].CGColor, (id)lightningGradientColor2.CGColor], lightningGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];
    NSShadow* lightningShadow = [[NSShadow alloc] init];
    [lightningShadow setShadowColor: lightningShadowColor];
    [lightningShadow setShadowOffset: CGSizeMake(0.1, 16.1)];
    [lightningShadow setShadowBlurRadius: 11];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 48
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, lightningShadow.shadowOffset, lightningShadow.shadowBlurRadius, [lightningShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier 110 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 67.88, 156.2);
        CGContextRotateCTM(context, -6.65 * M_PI / 180);

        UIBezierPath* bezier110Path = [UIBezierPath bezierPath];
        [bezier110Path moveToPoint: CGPointMake(-0.8, 36.73)];
        [bezier110Path addLineToPoint: CGPointMake(-10.3, 25.82)];
        [bezier110Path addLineToPoint: CGPointMake(-9.06, 95.3)];
        [bezier110Path addLineToPoint: CGPointMake(-20.21, 87.84)];
        [bezier110Path addLineToPoint: CGPointMake(-5.34, 173.4)];
        [bezier110Path addLineToPoint: CGPointMake(-7.41, 109.66)];
        [bezier110Path addLineToPoint: CGPointMake(2.09, 122.29)];
        [bezier110Path addLineToPoint: CGPointMake(-0.39, 55.11)];
        [bezier110Path addLineToPoint: CGPointMake(6.63, 66.59)];
        [bezier110Path addCurveToPoint: CGPointMake(14.06, 8.02) controlPoint1: CGPointMake(6.63, 66.59) controlPoint2: CGPointMake(7.04, 72.91)];
        [bezier110Path addCurveToPoint: CGPointMake(10.35, 10.89) controlPoint1: CGPointMake(14.7, 2.09) controlPoint2: CGPointMake(11.32, 11.04)];
        [bezier110Path addCurveToPoint: CGPointMake(11.59, 5.72) controlPoint1: CGPointMake(8.43, 10.59) controlPoint2: CGPointMake(12.49, 4.49)];
        [bezier110Path addCurveToPoint: CGPointMake(8.28, 4) controlPoint1: CGPointMake(10.48, 7.23) controlPoint2: CGPointMake(9.41, 2.91)];
        [bezier110Path addCurveToPoint: CGPointMake(6.63, 10.89) controlPoint1: CGPointMake(7.74, 4.53) controlPoint2: CGPointMake(7.82, 14.03)];
        [bezier110Path addCurveToPoint: CGPointMake(4.57, 8.02) controlPoint1: CGPointMake(5.8, 8.68) controlPoint2: CGPointMake(6.22, 2.28)];
        [bezier110Path addCurveToPoint: CGPointMake(4.57, 1.7) controlPoint1: CGPointMake(2.48, 15.26) controlPoint2: CGPointMake(5.11, 1.63)];
        [bezier110Path addCurveToPoint: CGPointMake(2.5, 8.02) controlPoint1: CGPointMake(4.27, 1.74) controlPoint2: CGPointMake(3.32, 8.21)];
        [bezier110Path addCurveToPoint: CGPointMake(0.44, 1.7) controlPoint1: CGPointMake(1.62, 7.81) controlPoint2: CGPointMake(0.85, 0.98)];
        [bezier110Path addCurveToPoint: CGPointMake(0.44, 8.02) controlPoint1: CGPointMake(-0.54, 3.4) controlPoint2: CGPointMake(0.44, 8.02)];
        [bezier110Path addLineToPoint: CGPointMake(-0.8, 36.73)];
        [bezier110Path closePath];
        bezier110Path.lineCapStyle = kCGLineCapSquare;

        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [bezier110Path addClip];
        CGContextDrawLinearGradient(context, lightningGradient, CGPointMake(-3.03, 1.65), CGPointMake(-3.03, 173.4), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color setStroke];
        bezier110Path.lineWidth = 1;
        [bezier110Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 111 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 71.1, 194.14);
        CGContextRotateCTM(context, -6.65 * M_PI / 180);

        UIBezierPath* bezier111Path = [UIBezierPath bezierPath];
        [bezier111Path moveToPoint: CGPointMake(-5.51, -0.49)];
        [bezier111Path addCurveToPoint: CGPointMake(-1.92, 68.44) controlPoint1: CGPointMake(-4.85, 59.09) controlPoint2: CGPointMake(-1.92, 68.44)];
        [bezier111Path addLineToPoint: CGPointMake(-11.5, 59.09)];
        [bezier111Path addLineToPoint: CGPointMake(-10.17, 79.29)];
        bezier111Path.lineCapStyle = kCGLineCapRound;

        [color13 setStroke];
        bezier111Path.lineWidth = 2;
        [bezier111Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 112 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 64.5, 172.45);
        CGContextRotateCTM(context, -6.65 * M_PI / 180);

        UIBezierPath* bezier112Path = [UIBezierPath bezierPath];
        [bezier112Path moveToPoint: CGPointMake(11.24, 1.26)];
        [bezier112Path addLineToPoint: CGPointMake(9.52, 36.65)];
        [bezier112Path addLineToPoint: CGPointMake(-1.44, 21.77)];
        [color13 setStroke];
        bezier112Path.lineWidth = 3;
        [bezier112Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 113 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 73.09, 274.68);
        CGContextRotateCTM(context, -6.65 * M_PI / 180);

        UIBezierPath* bezier113Path = [UIBezierPath bezierPath];
        [bezier113Path moveToPoint: CGPointMake(-0.29, 23.63)];
        [bezier113Path addLineToPoint: CGPointMake(-2.75, -0.03)];
        [color13 setStroke];
        bezier113Path.lineWidth = 1;
        [bezier113Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 47
    {
        //// Star 8 Drawing
        UIBezierPath* star8Path = [UIBezierPath bezierPath];
        [star8Path moveToPoint: CGPointMake(244.36, 4.5)];
        [star8Path addLineToPoint: CGPointMake(247.07, 13.07)];
        [star8Path addLineToPoint: CGPointMake(254.81, 15.37)];
        [star8Path addLineToPoint: CGPointMake(249.89, 21.81)];
        [star8Path addLineToPoint: CGPointMake(250.12, 29.94)];
        [star8Path addLineToPoint: CGPointMake(242.51, 27.22)];
        [star8Path addLineToPoint: CGPointMake(234.2, 31.5)];
        [star8Path addLineToPoint: CGPointMake(237.89, 21.26)];
        [star8Path addLineToPoint: CGPointMake(230.5, 14.74)];
        [star8Path addLineToPoint: CGPointMake(241.59, 11.95)];
        [star8Path addLineToPoint: CGPointMake(244.36, 4.5)];
        [star8Path closePath];
        [color11 setFill];
        [star8Path fill];
        [shadow2Color setStroke];
        star8Path.lineWidth = 1;
        [star8Path stroke];


        //// Group 57
        {
            //// Bezier 114 Drawing
            UIBezierPath* bezier114Path = [UIBezierPath bezierPath];
            [UIColor.blackColor setStroke];
            bezier114Path.lineWidth = 1;
            [bezier114Path stroke];


            //// Oval 197 Drawing
            UIBezierPath* oval197Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(237.5, 12.5, 6, 8)];
            [UIColor.whiteColor setFill];
            [oval197Path fill];
            [color setStroke];
            oval197Path.lineWidth = 1;
            [oval197Path stroke];


            //// Oval 198 Drawing
            UIBezierPath* oval198Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243, 12.5, 6, 8)];
            [UIColor.whiteColor setFill];
            [oval198Path fill];
            [color setStroke];
            oval198Path.lineWidth = 1;
            [oval198Path stroke];


            //// Oval 199 Drawing
            UIBezierPath* oval199Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(238.5, 17.5, 3, 3)];
            [UIColor.blackColor setFill];
            [oval199Path fill];
            [color setStroke];
            oval199Path.lineWidth = 1;
            [oval199Path stroke];


            //// Oval 200 Drawing
            UIBezierPath* oval200Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243.5, 17.5, 3, 3)];
            [UIColor.blackColor setFill];
            [oval200Path fill];
            [color setStroke];
            oval200Path.lineWidth = 1;
            [oval200Path stroke];


            //// Oval 133 Drawing
            UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239.5, 22.5, 7, 2)];
            [UIColor.whiteColor setFill];
            [oval133Path fill];
            [color setStroke];
            oval133Path.lineWidth = 1;
            [oval133Path stroke];
        }
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 176 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.73, 62.9);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval176Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.65, 0.68, 19.37, 13.1)];
        [color17 setFill];
        [oval176Path fill];
        [UIColor.blackColor setStroke];
        oval176Path.lineWidth = 1;
        [oval176Path stroke];

        CGContextRestoreGState(context);


        //// Oval 177 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.97, 52.92);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval177Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.91, 0.81, 23.21, 18.61)];
        [color17 setFill];
        [oval177Path fill];
        [UIColor.blackColor setStroke];
        oval177Path.lineWidth = 1;
        [oval177Path stroke];

        CGContextRestoreGState(context);


        //// Oval 178 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 127.72, 48.24);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval178Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.77, 0.78, 22.27, 15.73)];
        [color17 setFill];
        [oval178Path fill];
        [UIColor.blackColor setStroke];
        oval178Path.lineWidth = 1;
        [oval178Path stroke];

        CGContextRestoreGState(context);


        //// Oval 179 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 74.76, 55.85);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval179Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.7, 0.64, 18.38, 14.31)];
        [color17 setFill];
        [oval179Path fill];
        [UIColor.blackColor setStroke];
        oval179Path.lineWidth = 1;
        [oval179Path stroke];

        CGContextRestoreGState(context);


        //// Oval 180 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0.77, 56.87);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval180Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.91, 0.88, 25.17, 18.6)];
        [color17 setFill];
        [oval180Path fill];
        [UIColor.blackColor setStroke];
        oval180Path.lineWidth = 1;
        [oval180Path stroke];

        CGContextRestoreGState(context);


        //// Oval 181 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 13.99, 62.81);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval181Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.7, 0.71, 20.34, 14.3)];
        [color17 setFill];
        [oval181Path fill];
        [UIColor.blackColor setStroke];
        oval181Path.lineWidth = 1;
        [oval181Path stroke];

        CGContextRestoreGState(context);


        //// Oval 182 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 26.16, 58.04);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval182Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.84, 0.84, 24.21, 17.16)];
        [color17 setFill];
        [oval182Path fill];
        [UIColor.blackColor setStroke];
        oval182Path.lineWidth = 1;
        [oval182Path stroke];

        CGContextRestoreGState(context);


        //// Oval 183 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 55.51, 60.12);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval183Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.78, 0.92, 26.18, 15.69)];
        [color17 setFill];
        [oval183Path fill];
        [UIColor.blackColor setStroke];
        oval183Path.lineWidth = 1;
        [oval183Path stroke];

        CGContextRestoreGState(context);


        //// Oval 184 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 72.75, 64.82);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval184Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.71, 0.81, 23.27, 14.27)];
        [color17 setFill];
        [oval184Path fill];
        [UIColor.blackColor setStroke];
        oval184Path.lineWidth = 1;
        [oval184Path stroke];

        CGContextRestoreGState(context);


        //// Oval 185 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 88.6, 59.11);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval185Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.7, 0.64, 18.38, 14.31)];
        [color17 setFill];
        [oval185Path fill];
        [UIColor.blackColor setStroke];
        oval185Path.lineWidth = 1;
        [oval185Path stroke];

        CGContextRestoreGState(context);


        //// Oval 186 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.43, 60.98);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval186Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.84, 0.84, 24.21, 17.16)];
        [color17 setFill];
        [oval186Path fill];
        [UIColor.blackColor setStroke];
        oval186Path.lineWidth = 1;
        [oval186Path stroke];

        CGContextRestoreGState(context);


        //// Oval 187 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 97.69, 64.31);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval187Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.64, 18.37, 15.04)];
        [color17 setFill];
        [oval187Path fill];
        [UIColor.blackColor setStroke];
        oval187Path.lineWidth = 1;
        [oval187Path stroke];

        CGContextRestoreGState(context);


        //// Oval 188 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 20.52, 51.67);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval188Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.88, 0.84, 24.2, 17.88)];
        [color17 setFill];
        [oval188Path fill];
        [UIColor.blackColor setStroke];
        oval188Path.lineWidth = 1;
        [oval188Path stroke];

        CGContextRestoreGState(context);


        //// Oval 189 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 41.96, 51.92);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval189Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.74, 21.29, 16.46)];
        [color17 setFill];
        [oval189Path fill];
        [UIColor.blackColor setStroke];
        oval189Path.lineWidth = 1;
        [oval189Path stroke];

        CGContextRestoreGState(context);


        //// Oval 190 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 97.63, 52.72);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval190Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.64, 18.37, 15.04)];
        [color17 setFill];
        [oval190Path fill];
        [UIColor.blackColor setStroke];
        oval190Path.lineWidth = 1;
        [oval190Path stroke];

        CGContextRestoreGState(context);


        //// Oval 191 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 106.78, 45.76);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval191Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.88, 0.91, 26.15, 17.86)];
        [color17 setFill];
        [oval191Path fill];
        [UIColor.blackColor setStroke];
        oval191Path.lineWidth = 1;
        [oval191Path stroke];

        CGContextRestoreGState(context);


        //// Oval 192 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 116.32, 53.94);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval192Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.77, 0.78, 22.27, 15.73)];
        [color17 setFill];
        [oval192Path fill];
        [UIColor.blackColor setStroke];
        oval192Path.lineWidth = 1;
        [oval192Path stroke];

        CGContextRestoreGState(context);


        //// Oval 193 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 128.91, 60.89);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval193Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.74, 21.29, 16.46)];
        [color17 setFill];
        [oval193Path fill];
        [UIColor.blackColor setStroke];
        oval193Path.lineWidth = 1;
        [oval193Path stroke];

        CGContextRestoreGState(context);


        //// Oval 194 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 41.43, 64.27);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval194Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.7, 0.71, 20.34, 14.3)];
        [color17 setFill];
        [oval194Path fill];
        [UIColor.blackColor setStroke];
        oval194Path.lineWidth = 1;
        [oval194Path stroke];

        CGContextRestoreGState(context);


        //// Oval 195 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 144.95, 63.65);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval195Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.58, 0.61, 17.44, 11.67)];
        [color17 setFill];
        [oval195Path fill];
        [UIColor.blackColor setStroke];
        oval195Path.lineWidth = 1;
        [oval195Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 55
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 29.18, 98.56);
        CGContextRotateCTM(context, -2.5 * M_PI / 180);

        CGContextSetShadowWithColor(context, lightningShadow.shadowOffset, lightningShadow.shadowBlurRadius, [lightningShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 56
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, -6.13, 13.8);
            CGContextRotateCTM(context, -4.73 * M_PI / 180);



            //// Bezier 125 Drawing
            UIBezierPath* bezier125Path = [UIBezierPath bezierPath];
            [bezier125Path moveToPoint: CGPointMake(10.4, -43.22)];
            [bezier125Path addLineToPoint: CGPointMake(12.51, -38.29)];
            [bezier125Path addLineToPoint: CGPointMake(13.02, -45.01)];
            [bezier125Path addLineToPoint: CGPointMake(14.57, -40.81)];
            [bezier125Path addLineToPoint: CGPointMake(15.66, -30.56)];
            [bezier125Path addLineToPoint: CGPointMake(16.73, -44.68)];
            [bezier125Path addLineToPoint: CGPointMake(17.25, -35.16)];
            [bezier125Path addLineToPoint: CGPointMake(20.13, -40.31)];
            [bezier125Path addLineToPoint: CGPointMake(19.73, -34.93)];
            [bezier125Path addLineToPoint: CGPointMake(22.61, -40.09)];
            [bezier125Path addLineToPoint: CGPointMake(16.54, 18.23)];
            [bezier125Path addLineToPoint: CGPointMake(10.33, 10.81)];
            [bezier125Path addLineToPoint: CGPointMake(10.33, 43.19)];
            [bezier125Path addLineToPoint: CGPointMake(2.89, 35.1)];
            [bezier125Path addLineToPoint: CGPointMake(2.89, 87.72)];
            [bezier125Path addLineToPoint: CGPointMake(-5.18, 20.93)];
            [bezier125Path addLineToPoint: CGPointMake(4.13, 27.68)];
            [bezier125Path addLineToPoint: CGPointMake(1.65, -6.06)];
            [bezier125Path addLineToPoint: CGPointMake(10.33, 0.01)];
            [bezier125Path addLineToPoint: CGPointMake(8.47, -41.14)];
            [bezier125Path addLineToPoint: CGPointMake(10.4, -43.22)];
            [bezier125Path closePath];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
            CGContextBeginTransparencyLayer(context, NULL);
            [bezier125Path addClip];
            CGContextDrawLinearGradient(context, lightningGradient, CGPointMake(8.72, -45.01), CGPointMake(8.72, 87.72), 0);
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);

            [UIColor.blackColor setStroke];
            bezier125Path.lineWidth = 1;
            [bezier125Path stroke];



            CGContextRestoreGState(context);
        }


        //// Bezier 126 Drawing
        UIBezierPath* bezier126Path = [UIBezierPath bezierPath];
        [bezier126Path moveToPoint: CGPointMake(7.11, -13.94)];
        [bezier126Path addLineToPoint: CGPointMake(8.39, 19.92)];
        [bezier126Path addLineToPoint: CGPointMake(0.75, 15.86)];
        [bezier126Path addLineToPoint: CGPointMake(3.93, 47.01)];
        [bezier126Path addLineToPoint: CGPointMake(-4.34, 42.95)];
        [bezier126Path addLineToPoint: CGPointMake(-1.16, 69.36)];
        [color13 setStroke];
        bezier126Path.lineWidth = 1;
        [bezier126Path stroke];


        CGContextEndTransparencyLayer(context);

        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(216.5, 11.5, 133, 135)];
        CGContextSaveGState(context);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(283, 11.5), CGPointMake(283, 146.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(282, 52.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(269, 49.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(272.5, 61.5, 7.5, 10)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(265, 45.5)];
        [oval58Path addCurveToPoint: CGPointMake(261.15, 63.03) controlPoint1: CGPointMake(266.89, 48.43) controlPoint2: CGPointMake(263.33, 55.89)];
        [oval58Path addCurveToPoint: CGPointMake(265, 78.5) controlPoint1: CGPointMake(259.03, 69.97) controlPoint2: CGPointMake(258.22, 76.62)];
        [oval58Path addCurveToPoint: CGPointMake(253, 107.5) controlPoint1: CGPointMake(280.41, 82.78) controlPoint2: CGPointMake(253, 96.66)];
        [oval58Path addCurveToPoint: CGPointMake(283.5, 146.5) controlPoint1: CGPointMake(253, 144.78) controlPoint2: CGPointMake(320.78, 146.5)];
        [oval58Path addCurveToPoint: CGPointMake(216, 79) controlPoint1: CGPointMake(246.22, 146.5) controlPoint2: CGPointMake(216, 116.28)];
        [oval58Path addCurveToPoint: CGPointMake(283.5, 11.5) controlPoint1: CGPointMake(216, 41.72) controlPoint2: CGPointMake(246.22, 11.5)];
        [oval58Path addCurveToPoint: CGPointMake(265, 45.5) controlPoint1: CGPointMake(300.25, 11.5) controlPoint2: CGPointMake(258.54, 35.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(255.35, 11.5), CGPointMake(255.35, 146.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 245.17, 56.78);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.21, -6.54, 10.43, 13.09)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 260.66, 49.6);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-9.72, 4.73, 10.96, 11.44)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(241, 54, 6, 8)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(251, 56, 4.5, 7)];
        [color setFill];
        [oval66Path fill];


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(285.5, 62.5, 7.5, 9.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(387.5, 129.5, 17, 18)];
        [color17 setFill];
        [oval98Path fill];
        [UIColor.blackColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(368.5, 126.5, 23, 24)];
        [color17 setFill];
        [oval16Path fill];
        [UIColor.blackColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381.5, 140.5, 20, 22)];
        [color17 setFill];
        [oval19Path fill];
        [UIColor.blackColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239.5, 140.5, 26, 26)];
        [color17 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253, 149, 21, 20)];
        [color17 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265.5, 143, 25, 24)];
        [color17 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 152, 21, 20)];
        [color17 setFill];
        [oval4Path fill];
        [UIColor.blackColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295.5, 147, 27, 22)];
        [color17 setFill];
        [oval5Path fill];
        [UIColor.blackColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 152, 28, 24)];
        [color17 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(329.5, 146.5, 19, 20)];
        [color17 setFill];
        [oval7Path fill];
        [UIColor.blackColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 149, 27, 26)];
        [color17 setFill];
        [oval9Path fill];
        [UIColor.blackColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 154, 19, 21)];
        [color17 setFill];
        [oval8Path fill];
        [UIColor.blackColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 134, 25, 25)];
        [color17 setFill];
        [oval10Path fill];
        [UIColor.blackColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281, 134, 24, 25)];
        [color17 setFill];
        [oval11Path fill];
        [UIColor.blackColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(303.5, 129.5, 26, 25)];
        [color17 setFill];
        [oval12Path fill];
        [UIColor.blackColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(322.5, 138.5, 20, 24)];
        [color17 setFill];
        [oval13Path fill];
        [UIColor.blackColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 138, 19, 21)];
        [color17 setFill];
        [oval14Path fill];
        [UIColor.blackColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 129, 27, 25)];
        [color17 setFill];
        [oval15Path fill];
        [UIColor.blackColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 140.5, 23, 22)];
        [color17 setFill];
        [oval17Path fill];
        [UIColor.blackColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 150.5, 22, 23)];
        [color17 setFill];
        [oval18Path fill];
        [UIColor.blackColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(386.5, 153.5, 20, 19)];
        [color17 setFill];
        [oval20Path fill];
        [UIColor.blackColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(398, 140.5, 18, 20)];
        [color17 setFill];
        [oval101Path fill];
        [UIColor.blackColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(400, 155.5, 16, 15)];
        [color17 setFill];
        [oval106Path fill];
        [UIColor.blackColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -19.35, 150.07);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.36, 18.65)];
        [color17 setFill];
        [oval104Path fill];
        [UIColor.blackColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];

        CGContextRestoreGState(context);


        //// Oval 105 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -5.61, 136.05);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.44, 26.44)];
        [color17 setFill];
        [oval105Path fill];
        [UIColor.blackColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];

        CGContextRestoreGState(context);


        //// Oval 138 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 8, 129.47);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.42, 22.37)];
        [color17 setFill];
        [oval138Path fill];
        [UIColor.blackColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];

        CGContextRestoreGState(context);


        //// Oval 97 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 67.15, 140.16);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.35, 20.34)];
        [color17 setFill];
        [oval97Path fill];
        [UIColor.blackColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];

        CGContextRestoreGState(context);


        //// Oval 86 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.39, 141.6);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 26.47, 26.44)];
        [color17 setFill];
        [oval86Path fill];
        [UIColor.blackColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];

        CGContextRestoreGState(context);


        //// Oval 87 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 128.44, 149.93);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.38, 20.34)];
        [color17 setFill];
        [oval87Path fill];
        [UIColor.blackColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];

        CGContextRestoreGState(context);


        //// Oval 88 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 111.87, 143.25);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.45, 24.4)];
        [color17 setFill];
        [oval88Path fill];
        [UIColor.blackColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];

        CGContextRestoreGState(context);


        //// Oval 90 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 79.16, 146.17);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27.49, 22.37)];
        [color17 setFill];
        [oval90Path fill];
        [UIColor.blackColor setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];

        CGContextRestoreGState(context);


        //// Oval 91 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 64.16, 152.77);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.44, 20.34)];
        [color17 setFill];
        [oval91Path fill];
        [UIColor.blackColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];

        CGContextRestoreGState(context);


        //// Oval 92 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 52.73, 144.74);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.35, 20.34)];
        [color17 setFill];
        [oval92Path fill];
        [UIColor.blackColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];

        CGContextRestoreGState(context);


        //// Oval 93 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 26.15, 147.37);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.45, 24.4)];
        [color17 setFill];
        [oval93Path fill];
        [UIColor.blackColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];

        CGContextRestoreGState(context);


        //// Oval 94 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 43.3, 152.04);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.35, 21.35)];
        [color17 setFill];
        [oval94Path fill];
        [UIColor.blackColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];

        CGContextRestoreGState(context);


        //// Oval 95 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.78, 134.3);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.45, 25.42)];
        [color17 setFill];
        [oval95Path fill];
        [UIColor.blackColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];

        CGContextRestoreGState(context);


        //// Oval 96 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.42, 134.64);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.4, 23.39)];
        [color17 setFill];
        [oval96Path fill];
        [UIColor.blackColor setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];

        CGContextRestoreGState(context);


        //// Oval 99 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 43.36, 135.77);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.35, 21.35)];
        [color17 setFill];
        [oval99Path fill];
        [UIColor.blackColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];

        CGContextRestoreGState(context);


        //// Oval 100 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 25.88, 126);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27.49, 25.42)];
        [color17 setFill];
        [oval100Path fill];
        [UIColor.blackColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];

        CGContextRestoreGState(context);


        //// Oval 102 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 19.87, 137.49);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.42, 22.37)];
        [color17 setFill];
        [oval102Path fill];
        [UIColor.blackColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];

        CGContextRestoreGState(context);


        //// Oval 103 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 7.82, 147.24);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.4, 23.39)];
        [color17 setFill];
        [oval103Path fill];
        [UIColor.blackColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];

        CGContextRestoreGState(context);


        //// Oval 89 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.85, 151.98);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.38, 20.34)];
        [color17 setFill];
        [oval89Path fill];
        [UIColor.blackColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];

        CGContextRestoreGState(context);


        //// Oval 139 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -5.13, 151.12);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.33, 16.62)];
        [color17 setFill];
        [oval139Path fill];
        [UIColor.blackColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 69, 20, 18)];
        [color3 setFill];
        [oval109Path fill];
        [UIColor.blackColor setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 61.5, 20, 18)];
        [color3 setFill];
        [oval110Path fill];
        [UIColor.blackColor setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 60, 20, 16)];
        [color3 setFill];
        [oval111Path fill];
        [UIColor.blackColor setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 62.5, 20, 17)];
        [color3 setFill];
        [oval112Path fill];
        [UIColor.blackColor setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 71, 20, 17)];
        [color3 setFill];
        [oval113Path fill];
        [UIColor.blackColor setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 68.5, 21, 18)];
        [color3 setFill];
        [oval114Path fill];
        [UIColor.blackColor setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 115 Drawing
        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 68, 23, 17)];
        [color3 setFill];
        [oval115Path fill];
        [UIColor.blackColor setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 68, 21, 19)];
        [color3 setFill];
        [oval116Path fill];
        [UIColor.blackColor setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 65.5, 20, 15)];
        [color3 setFill];
        [oval117Path fill];
        [UIColor.blackColor setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 59, 20, 18)];
        [color3 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360.5, 51.5, 20, 18)];
        [color3 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 50, 20, 16)];
        [color3 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 52.5, 20, 17)];
        [color3 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(308, 61, 20, 17)];
        [color3 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(315.5, 58.5, 21, 18)];
        [color3 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(330.5, 58, 23, 17)];
        [color3 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(366, 58, 21, 19)];
        [color3 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(353.5, 55.5, 20, 15)];
        [color3 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 50, 20, 18)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.blackColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395.5, 42.5, 20, 18)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.blackColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 41, 20, 16)];
        [color3 setFill];
        [oval120Path fill];
        [UIColor.blackColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363, 43.5, 20, 17)];
        [color3 setFill];
        [oval121Path fill];
        [UIColor.blackColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 52, 20, 17)];
        [color3 setFill];
        [oval122Path fill];
        [UIColor.blackColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350.5, 49.5, 21, 18)];
        [color3 setFill];
        [oval123Path fill];
        [UIColor.blackColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 49, 23, 17)];
        [color3 setFill];
        [oval124Path fill];
        [UIColor.blackColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(401, 49, 21, 19)];
        [color3 setFill];
        [oval125Path fill];
        [UIColor.blackColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(388.5, 46.5, 20, 15)];
        [color3 setFill];
        [oval126Path fill];
        [UIColor.blackColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(371.5, 113, 17, 18)];
        [color17 setFill];
        [oval130Path fill];
        [UIColor.blackColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(352.5, 110, 23, 24)];
        [color17 setFill];
        [oval131Path fill];
        [UIColor.blackColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 124, 20, 22)];
        [color17 setFill];
        [oval132Path fill];
        [UIColor.blackColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(249.5, 126.5, 25, 24)];
        [color17 setFill];
        [oval135Path fill];
        [UIColor.blackColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 135.5, 21, 20)];
        [color17 setFill];
        [oval136Path fill];
        [UIColor.blackColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(279.5, 130.5, 27, 22)];
        [color17 setFill];
        [oval137Path fill];
        [UIColor.blackColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295, 135.5, 28, 24)];
        [color17 setFill];
        [oval151Path fill];
        [UIColor.blackColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(313.5, 130, 19, 20)];
        [color17 setFill];
        [oval152Path fill];
        [UIColor.blackColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        //// Oval 153 Drawing
        UIBezierPath* oval153Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 132.5, 27, 26)];
        [color17 setFill];
        [oval153Path fill];
        [UIColor.blackColor setStroke];
        oval153Path.lineWidth = 1;
        [oval153Path stroke];


        //// Oval 154 Drawing
        UIBezierPath* oval154Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 137.5, 19, 21)];
        [color17 setFill];
        [oval154Path fill];
        [UIColor.blackColor setStroke];
        oval154Path.lineWidth = 1;
        [oval154Path stroke];


        //// Oval 156 Drawing
        UIBezierPath* oval156Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 117.5, 24, 25)];
        [color17 setFill];
        [oval156Path fill];
        [UIColor.blackColor setStroke];
        oval156Path.lineWidth = 1;
        [oval156Path stroke];


        //// Oval 157 Drawing
        UIBezierPath* oval157Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287.5, 113, 26, 25)];
        [color17 setFill];
        [oval157Path fill];
        [UIColor.blackColor setStroke];
        oval157Path.lineWidth = 1;
        [oval157Path stroke];


        //// Oval 158 Drawing
        UIBezierPath* oval158Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(306.5, 122, 20, 24)];
        [color17 setFill];
        [oval158Path fill];
        [UIColor.blackColor setStroke];
        oval158Path.lineWidth = 1;
        [oval158Path stroke];


        //// Oval 159 Drawing
        UIBezierPath* oval159Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 121.5, 19, 21)];
        [color17 setFill];
        [oval159Path fill];
        [UIColor.blackColor setStroke];
        oval159Path.lineWidth = 1;
        [oval159Path stroke];


        //// Oval 160 Drawing
        UIBezierPath* oval160Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 112.5, 27, 25)];
        [color17 setFill];
        [oval160Path fill];
        [UIColor.blackColor setStroke];
        oval160Path.lineWidth = 1;
        [oval160Path stroke];


        //// Oval 161 Drawing
        UIBezierPath* oval161Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(342, 124, 23, 22)];
        [color17 setFill];
        [oval161Path fill];
        [UIColor.blackColor setStroke];
        oval161Path.lineWidth = 1;
        [oval161Path stroke];


        //// Oval 162 Drawing
        UIBezierPath* oval162Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(354.5, 134, 22, 23)];
        [color17 setFill];
        [oval162Path fill];
        [UIColor.blackColor setStroke];
        oval162Path.lineWidth = 1;
        [oval162Path stroke];


        //// Oval 163 Drawing
        UIBezierPath* oval163Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 137, 20, 19)];
        [color17 setFill];
        [oval163Path fill];
        [UIColor.blackColor setStroke];
        oval163Path.lineWidth = 1;
        [oval163Path stroke];


        //// Oval 164 Drawing
        UIBezierPath* oval164Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(382, 124, 18, 20)];
        [color17 setFill];
        [oval164Path fill];
        [UIColor.blackColor setStroke];
        oval164Path.lineWidth = 1;
        [oval164Path stroke];


        //// Oval 165 Drawing
        UIBezierPath* oval165Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(384, 139, 16, 15)];
        [color17 setFill];
        [oval165Path fill];
        [UIColor.blackColor setStroke];
        oval165Path.lineWidth = 1;
        [oval165Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 21
    {
        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = [UIBezierPath bezierPath];
        [bezier26Path moveToPoint: CGPointMake(382.5, 259)];
        [bezier26Path addCurveToPoint: CGPointMake(382.5, 315) controlPoint1: CGPointMake(385.5, 339) controlPoint2: CGPointMake(382.5, 315)];
        [skyGradientColor setStroke];
        bezier26Path.lineWidth = 1;
        [bezier26Path stroke];


        //// Bezier 27 Drawing
        UIBezierPath* bezier27Path = [UIBezierPath bezierPath];
        [bezier27Path moveToPoint: CGPointMake(370, 200)];
        [bezier27Path addCurveToPoint: CGPointMake(370, 256) controlPoint1: CGPointMake(373, 280) controlPoint2: CGPointMake(370, 256)];
        [skyGradientColor setStroke];
        bezier27Path.lineWidth = 1;
        [bezier27Path stroke];


        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = [UIBezierPath bezierPath];
        [bezier28Path moveToPoint: CGPointMake(358, 237)];
        [bezier28Path addCurveToPoint: CGPointMake(358, 293) controlPoint1: CGPointMake(361, 317) controlPoint2: CGPointMake(358, 293)];
        [skyGradientColor setStroke];
        bezier28Path.lineWidth = 1;
        [bezier28Path stroke];


        //// Bezier 29 Drawing
        UIBezierPath* bezier29Path = [UIBezierPath bezierPath];
        [bezier29Path moveToPoint: CGPointMake(339, 272.5)];
        [bezier29Path addCurveToPoint: CGPointMake(339, 328.5) controlPoint1: CGPointMake(342, 352.5) controlPoint2: CGPointMake(339, 328.5)];
        [skyGradientColor setStroke];
        bezier29Path.lineWidth = 1;
        [bezier29Path stroke];
    }


    //// Group 18
    {
        //// Bezier 13 Drawing
        UIBezierPath* bezier13Path = [UIBezierPath bezierPath];
        [bezier13Path moveToPoint: CGPointMake(291, 505.5)];
        [bezier13Path addCurveToPoint: CGPointMake(291, 561.5) controlPoint1: CGPointMake(294, 585.5) controlPoint2: CGPointMake(291, 561.5)];
        [skyGradientColor setStroke];
        bezier13Path.lineWidth = 1;
        [bezier13Path stroke];


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = [UIBezierPath bezierPath];
        [bezier14Path moveToPoint: CGPointMake(278.5, 446.5)];
        [bezier14Path addCurveToPoint: CGPointMake(278.5, 502.5) controlPoint1: CGPointMake(281.5, 526.5) controlPoint2: CGPointMake(278.5, 502.5)];
        [skyGradientColor setStroke];
        bezier14Path.lineWidth = 1;
        [bezier14Path stroke];


        //// Bezier 15 Drawing
        UIBezierPath* bezier15Path = [UIBezierPath bezierPath];
        [bezier15Path moveToPoint: CGPointMake(266.5, 483.5)];
        [bezier15Path addCurveToPoint: CGPointMake(266.5, 539.5) controlPoint1: CGPointMake(269.5, 563.5) controlPoint2: CGPointMake(266.5, 539.5)];
        [skyGradientColor setStroke];
        bezier15Path.lineWidth = 1;
        [bezier15Path stroke];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(302.5, 446)];
        [bezier21Path addCurveToPoint: CGPointMake(302.5, 502) controlPoint1: CGPointMake(305.5, 526) controlPoint2: CGPointMake(302.5, 502)];
        [skyGradientColor setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];
    }


    //// Group 19
    {
        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(373, 434)];
        [bezier22Path addCurveToPoint: CGPointMake(373, 490) controlPoint1: CGPointMake(376, 514) controlPoint2: CGPointMake(373, 490)];
        [skyGradientColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];


        //// Bezier 23 Drawing
        UIBezierPath* bezier23Path = [UIBezierPath bezierPath];
        [bezier23Path moveToPoint: CGPointMake(360.5, 375)];
        [bezier23Path addCurveToPoint: CGPointMake(360.5, 431) controlPoint1: CGPointMake(363.5, 455) controlPoint2: CGPointMake(360.5, 431)];
        [skyGradientColor setStroke];
        bezier23Path.lineWidth = 1;
        [bezier23Path stroke];


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = [UIBezierPath bezierPath];
        [bezier24Path moveToPoint: CGPointMake(348.5, 412)];
        [bezier24Path addCurveToPoint: CGPointMake(348.5, 468) controlPoint1: CGPointMake(351.5, 492) controlPoint2: CGPointMake(348.5, 468)];
        [skyGradientColor setStroke];
        bezier24Path.lineWidth = 1;
        [bezier24Path stroke];


        //// Bezier 25 Drawing
        UIBezierPath* bezier25Path = [UIBezierPath bezierPath];
        [bezier25Path moveToPoint: CGPointMake(384.5, 374.5)];
        [bezier25Path addCurveToPoint: CGPointMake(384.5, 430.5) controlPoint1: CGPointMake(387.5, 454.5) controlPoint2: CGPointMake(384.5, 430.5)];
        [skyGradientColor setStroke];
        bezier25Path.lineWidth = 1;
        [bezier25Path stroke];
    }


    //// Group 20
    {
        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = [UIBezierPath bezierPath];
        [bezier34Path moveToPoint: CGPointMake(295, 205.5)];
        [bezier34Path addCurveToPoint: CGPointMake(295, 261.5) controlPoint1: CGPointMake(298, 285.5) controlPoint2: CGPointMake(295, 261.5)];
        [skyGradientColor setStroke];
        bezier34Path.lineWidth = 1;
        [bezier34Path stroke];


        //// Bezier 35 Drawing
        UIBezierPath* bezier35Path = [UIBezierPath bezierPath];
        [bezier35Path moveToPoint: CGPointMake(282.5, 146.5)];
        [bezier35Path addCurveToPoint: CGPointMake(282.5, 202.5) controlPoint1: CGPointMake(285.5, 226.5) controlPoint2: CGPointMake(282.5, 202.5)];
        [skyGradientColor setStroke];
        bezier35Path.lineWidth = 1;
        [bezier35Path stroke];


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = [UIBezierPath bezierPath];
        [bezier36Path moveToPoint: CGPointMake(270.5, 183.5)];
        [bezier36Path addCurveToPoint: CGPointMake(270.5, 239.5) controlPoint1: CGPointMake(273.5, 263.5) controlPoint2: CGPointMake(270.5, 239.5)];
        [skyGradientColor setStroke];
        bezier36Path.lineWidth = 1;
        [bezier36Path stroke];


        //// Bezier 37 Drawing
        UIBezierPath* bezier37Path = [UIBezierPath bezierPath];
        [bezier37Path moveToPoint: CGPointMake(306.5, 146)];
        [bezier37Path addCurveToPoint: CGPointMake(306.5, 202) controlPoint1: CGPointMake(309.5, 226) controlPoint2: CGPointMake(306.5, 202)];
        [skyGradientColor setStroke];
        bezier37Path.lineWidth = 1;
        [bezier37Path stroke];
    }


    //// Group 22
    {
        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = [UIBezierPath bezierPath];
        [bezier38Path moveToPoint: CGPointMake(297, 344.5)];
        [bezier38Path addCurveToPoint: CGPointMake(297, 400.5) controlPoint1: CGPointMake(300, 424.5) controlPoint2: CGPointMake(297, 400.5)];
        [skyGradientColor setStroke];
        bezier38Path.lineWidth = 1;
        [bezier38Path stroke];


        //// Bezier 39 Drawing
        UIBezierPath* bezier39Path = [UIBezierPath bezierPath];
        [bezier39Path moveToPoint: CGPointMake(284.5, 285.5)];
        [bezier39Path addCurveToPoint: CGPointMake(284.5, 341.5) controlPoint1: CGPointMake(287.5, 365.5) controlPoint2: CGPointMake(284.5, 341.5)];
        [skyGradientColor setStroke];
        bezier39Path.lineWidth = 1;
        [bezier39Path stroke];


        //// Bezier 40 Drawing
        UIBezierPath* bezier40Path = [UIBezierPath bezierPath];
        [bezier40Path moveToPoint: CGPointMake(272.5, 322.5)];
        [bezier40Path addCurveToPoint: CGPointMake(272.5, 378.5) controlPoint1: CGPointMake(275.5, 402.5) controlPoint2: CGPointMake(272.5, 378.5)];
        [skyGradientColor setStroke];
        bezier40Path.lineWidth = 1;
        [bezier40Path stroke];


        //// Bezier 41 Drawing
        UIBezierPath* bezier41Path = [UIBezierPath bezierPath];
        [bezier41Path moveToPoint: CGPointMake(253.5, 358)];
        [bezier41Path addCurveToPoint: CGPointMake(253.5, 414) controlPoint1: CGPointMake(256.5, 438) controlPoint2: CGPointMake(253.5, 414)];
        [skyGradientColor setStroke];
        bezier41Path.lineWidth = 1;
        [bezier41Path stroke];
    }


    //// Group 26
    {
        //// Group 27
        {
            //// Bezier 47 Drawing
            UIBezierPath* bezier47Path = [UIBezierPath bezierPath];
            [bezier47Path moveToPoint: CGPointMake(241.5, 360)];
            [bezier47Path addCurveToPoint: CGPointMake(241.5, 416) controlPoint1: CGPointMake(244.5, 440) controlPoint2: CGPointMake(241.5, 416)];
            [skyGradientColor setStroke];
            bezier47Path.lineWidth = 1;
            [bezier47Path stroke];


            //// Bezier 48 Drawing
            UIBezierPath* bezier48Path = [UIBezierPath bezierPath];
            [bezier48Path moveToPoint: CGPointMake(212, 306)];
            [bezier48Path addCurveToPoint: CGPointMake(212, 362) controlPoint1: CGPointMake(215, 386) controlPoint2: CGPointMake(212, 362)];
            [skyGradientColor setStroke];
            bezier48Path.lineWidth = 1;
            [bezier48Path stroke];


            //// Bezier 49 Drawing
            UIBezierPath* bezier49Path = [UIBezierPath bezierPath];
            [bezier49Path moveToPoint: CGPointMake(200, 343)];
            [bezier49Path addCurveToPoint: CGPointMake(200, 399) controlPoint1: CGPointMake(203, 423) controlPoint2: CGPointMake(200, 399)];
            [skyGradientColor setStroke];
            bezier49Path.lineWidth = 1;
            [bezier49Path stroke];
        }


        //// Group 28
        {
            //// Bezier 50 Drawing
            UIBezierPath* bezier50Path = [UIBezierPath bezierPath];
            [bezier50Path moveToPoint: CGPointMake(202, 560.5)];
            [bezier50Path addCurveToPoint: CGPointMake(202, 616.5) controlPoint1: CGPointMake(205, 640.5) controlPoint2: CGPointMake(202, 616.5)];
            [skyGradientColor setStroke];
            bezier50Path.lineWidth = 1;
            [bezier50Path stroke];


            //// Bezier 51 Drawing
            UIBezierPath* bezier51Path = [UIBezierPath bezierPath];
            [bezier51Path moveToPoint: CGPointMake(189.5, 501.5)];
            [bezier51Path addCurveToPoint: CGPointMake(189.5, 557.5) controlPoint1: CGPointMake(192.5, 581.5) controlPoint2: CGPointMake(189.5, 557.5)];
            [skyGradientColor setStroke];
            bezier51Path.lineWidth = 1;
            [bezier51Path stroke];


            //// Bezier 52 Drawing
            UIBezierPath* bezier52Path = [UIBezierPath bezierPath];
            [bezier52Path moveToPoint: CGPointMake(177.5, 538.5)];
            [bezier52Path addCurveToPoint: CGPointMake(177.5, 594.5) controlPoint1: CGPointMake(180.5, 618.5) controlPoint2: CGPointMake(177.5, 594.5)];
            [skyGradientColor setStroke];
            bezier52Path.lineWidth = 1;
            [bezier52Path stroke];


            //// Bezier 53 Drawing
            UIBezierPath* bezier53Path = [UIBezierPath bezierPath];
            [bezier53Path moveToPoint: CGPointMake(158.5, 574)];
            [bezier53Path addCurveToPoint: CGPointMake(158.5, 630) controlPoint1: CGPointMake(161.5, 654) controlPoint2: CGPointMake(158.5, 630)];
            [skyGradientColor setStroke];
            bezier53Path.lineWidth = 1;
            [bezier53Path stroke];
        }


        //// Group 29
        {
            //// Bezier 54 Drawing
            UIBezierPath* bezier54Path = [UIBezierPath bezierPath];
            [bezier54Path moveToPoint: CGPointMake(282.5, 218.5)];
            [bezier54Path addCurveToPoint: CGPointMake(282.5, 274.5) controlPoint1: CGPointMake(285.5, 298.5) controlPoint2: CGPointMake(282.5, 274.5)];
            [skyGradientColor setStroke];
            bezier54Path.lineWidth = 1;
            [bezier54Path stroke];


            //// Bezier 55 Drawing
            UIBezierPath* bezier55Path = [UIBezierPath bezierPath];
            [bezier55Path moveToPoint: CGPointMake(270, 159.5)];
            [bezier55Path addCurveToPoint: CGPointMake(270, 215.5) controlPoint1: CGPointMake(273, 239.5) controlPoint2: CGPointMake(270, 215.5)];
            [skyGradientColor setStroke];
            bezier55Path.lineWidth = 1;
            [bezier55Path stroke];


            //// Bezier 56 Drawing
            UIBezierPath* bezier56Path = [UIBezierPath bezierPath];
            [bezier56Path moveToPoint: CGPointMake(258, 196.5)];
            [bezier56Path addCurveToPoint: CGPointMake(258, 252.5) controlPoint1: CGPointMake(261, 276.5) controlPoint2: CGPointMake(258, 252.5)];
            [skyGradientColor setStroke];
            bezier56Path.lineWidth = 1;
            [bezier56Path stroke];


            //// Bezier 57 Drawing
            UIBezierPath* bezier57Path = [UIBezierPath bezierPath];
            [bezier57Path moveToPoint: CGPointMake(239, 232)];
            [bezier57Path addCurveToPoint: CGPointMake(239, 288) controlPoint1: CGPointMake(242, 312) controlPoint2: CGPointMake(239, 288)];
            [skyGradientColor setStroke];
            bezier57Path.lineWidth = 1;
            [bezier57Path stroke];
        }


        //// Group 30
        {
            //// Bezier 58 Drawing
            UIBezierPath* bezier58Path = [UIBezierPath bezierPath];
            [bezier58Path moveToPoint: CGPointMake(184.5, 222)];
            [bezier58Path addCurveToPoint: CGPointMake(184.5, 278) controlPoint1: CGPointMake(187.5, 302) controlPoint2: CGPointMake(184.5, 278)];
            [skyGradientColor setStroke];
            bezier58Path.lineWidth = 1;
            [bezier58Path stroke];


            //// Bezier 59 Drawing
            UIBezierPath* bezier59Path = [UIBezierPath bezierPath];
            [bezier59Path moveToPoint: CGPointMake(172, 163)];
            [bezier59Path addCurveToPoint: CGPointMake(172, 219) controlPoint1: CGPointMake(175, 243) controlPoint2: CGPointMake(172, 219)];
            [skyGradientColor setStroke];
            bezier59Path.lineWidth = 1;
            [bezier59Path stroke];


            //// Bezier 60 Drawing
            UIBezierPath* bezier60Path = [UIBezierPath bezierPath];
            [bezier60Path moveToPoint: CGPointMake(160, 200)];
            [bezier60Path addCurveToPoint: CGPointMake(160, 256) controlPoint1: CGPointMake(163, 280) controlPoint2: CGPointMake(160, 256)];
            [skyGradientColor setStroke];
            bezier60Path.lineWidth = 1;
            [bezier60Path stroke];


            //// Bezier 61 Drawing
            UIBezierPath* bezier61Path = [UIBezierPath bezierPath];
            [bezier61Path moveToPoint: CGPointMake(141, 235.5)];
            [bezier61Path addCurveToPoint: CGPointMake(141, 291.5) controlPoint1: CGPointMake(144, 315.5) controlPoint2: CGPointMake(141, 291.5)];
            [skyGradientColor setStroke];
            bezier61Path.lineWidth = 1;
            [bezier61Path stroke];
        }


        //// Group 31
        {
            //// Bezier 62 Drawing
            UIBezierPath* bezier62Path = [UIBezierPath bezierPath];
            [bezier62Path moveToPoint: CGPointMake(258, 507.5)];
            [bezier62Path addCurveToPoint: CGPointMake(258, 563.5) controlPoint1: CGPointMake(261, 587.5) controlPoint2: CGPointMake(258, 563.5)];
            [skyGradientColor setStroke];
            bezier62Path.lineWidth = 1;
            [bezier62Path stroke];


            //// Bezier 63 Drawing
            UIBezierPath* bezier63Path = [UIBezierPath bezierPath];
            [bezier63Path moveToPoint: CGPointMake(245.5, 448.5)];
            [bezier63Path addCurveToPoint: CGPointMake(245.5, 504.5) controlPoint1: CGPointMake(248.5, 528.5) controlPoint2: CGPointMake(245.5, 504.5)];
            [skyGradientColor setStroke];
            bezier63Path.lineWidth = 1;
            [bezier63Path stroke];


            //// Bezier 64 Drawing
            UIBezierPath* bezier64Path = [UIBezierPath bezierPath];
            [bezier64Path moveToPoint: CGPointMake(233.5, 485.5)];
            [bezier64Path addCurveToPoint: CGPointMake(233.5, 541.5) controlPoint1: CGPointMake(236.5, 565.5) controlPoint2: CGPointMake(233.5, 541.5)];
            [skyGradientColor setStroke];
            bezier64Path.lineWidth = 1;
            [bezier64Path stroke];
        }


        //// Group 32
        {
            //// Bezier 65 Drawing
            UIBezierPath* bezier65Path = [UIBezierPath bezierPath];
            [bezier65Path moveToPoint: CGPointMake(154.5, 427)];
            [bezier65Path addCurveToPoint: CGPointMake(154.5, 483) controlPoint1: CGPointMake(157.5, 507) controlPoint2: CGPointMake(154.5, 483)];
            [skyGradientColor setStroke];
            bezier65Path.lineWidth = 1;
            [bezier65Path stroke];


            //// Bezier 66 Drawing
            UIBezierPath* bezier66Path = [UIBezierPath bezierPath];
            [bezier66Path moveToPoint: CGPointMake(142, 368)];
            [bezier66Path addCurveToPoint: CGPointMake(142, 424) controlPoint1: CGPointMake(145, 448) controlPoint2: CGPointMake(142, 424)];
            [skyGradientColor setStroke];
            bezier66Path.lineWidth = 1;
            [bezier66Path stroke];


            //// Bezier 67 Drawing
            UIBezierPath* bezier67Path = [UIBezierPath bezierPath];
            [bezier67Path moveToPoint: CGPointMake(130, 405)];
            [bezier67Path addCurveToPoint: CGPointMake(130, 461) controlPoint1: CGPointMake(133, 485) controlPoint2: CGPointMake(130, 461)];
            [skyGradientColor setStroke];
            bezier67Path.lineWidth = 1;
            [bezier67Path stroke];
        }
    }


    //// Group 33
    {
        //// Group 34
        {
            //// Bezier 68 Drawing
            UIBezierPath* bezier68Path = [UIBezierPath bezierPath];
            [bezier68Path moveToPoint: CGPointMake(351, 361.5)];
            [bezier68Path addCurveToPoint: CGPointMake(351, 417.5) controlPoint1: CGPointMake(354, 441.5) controlPoint2: CGPointMake(351, 417.5)];
            [skyGradientColor setStroke];
            bezier68Path.lineWidth = 1;
            [bezier68Path stroke];


            //// Bezier 69 Drawing
            UIBezierPath* bezier69Path = [UIBezierPath bezierPath];
            [bezier69Path moveToPoint: CGPointMake(321.5, 307.5)];
            [bezier69Path addCurveToPoint: CGPointMake(321.5, 363.5) controlPoint1: CGPointMake(324.5, 387.5) controlPoint2: CGPointMake(321.5, 363.5)];
            [skyGradientColor setStroke];
            bezier69Path.lineWidth = 1;
            [bezier69Path stroke];


            //// Bezier 70 Drawing
            UIBezierPath* bezier70Path = [UIBezierPath bezierPath];
            [bezier70Path moveToPoint: CGPointMake(309.5, 344.5)];
            [bezier70Path addCurveToPoint: CGPointMake(309.5, 400.5) controlPoint1: CGPointMake(312.5, 424.5) controlPoint2: CGPointMake(309.5, 400.5)];
            [skyGradientColor setStroke];
            bezier70Path.lineWidth = 1;
            [bezier70Path stroke];
        }


        //// Group 35
        {
            //// Bezier 71 Drawing
            UIBezierPath* bezier71Path = [UIBezierPath bezierPath];
            [bezier71Path moveToPoint: CGPointMake(311.5, 562)];
            [bezier71Path addCurveToPoint: CGPointMake(311.5, 618) controlPoint1: CGPointMake(314.5, 642) controlPoint2: CGPointMake(311.5, 618)];
            [skyGradientColor setStroke];
            bezier71Path.lineWidth = 1;
            [bezier71Path stroke];


            //// Bezier 72 Drawing
            UIBezierPath* bezier72Path = [UIBezierPath bezierPath];
            [bezier72Path moveToPoint: CGPointMake(299, 503)];
            [bezier72Path addCurveToPoint: CGPointMake(299, 559) controlPoint1: CGPointMake(302, 583) controlPoint2: CGPointMake(299, 559)];
            [skyGradientColor setStroke];
            bezier72Path.lineWidth = 1;
            [bezier72Path stroke];


            //// Bezier 73 Drawing
            UIBezierPath* bezier73Path = [UIBezierPath bezierPath];
            [bezier73Path moveToPoint: CGPointMake(287, 540)];
            [bezier73Path addCurveToPoint: CGPointMake(287, 596) controlPoint1: CGPointMake(290, 620) controlPoint2: CGPointMake(287, 596)];
            [skyGradientColor setStroke];
            bezier73Path.lineWidth = 1;
            [bezier73Path stroke];


            //// Bezier 74 Drawing
            UIBezierPath* bezier74Path = [UIBezierPath bezierPath];
            [bezier74Path moveToPoint: CGPointMake(268, 575.5)];
            [bezier74Path addCurveToPoint: CGPointMake(268, 631.5) controlPoint1: CGPointMake(271, 655.5) controlPoint2: CGPointMake(268, 631.5)];
            [skyGradientColor setStroke];
            bezier74Path.lineWidth = 1;
            [bezier74Path stroke];
        }


        //// Group 36
        {
            //// Bezier 75 Drawing
            UIBezierPath* bezier75Path = [UIBezierPath bezierPath];
            [bezier75Path moveToPoint: CGPointMake(392, 220)];
            [bezier75Path addCurveToPoint: CGPointMake(392, 276) controlPoint1: CGPointMake(395, 300) controlPoint2: CGPointMake(392, 276)];
            [skyGradientColor setStroke];
            bezier75Path.lineWidth = 1;
            [bezier75Path stroke];


            //// Bezier 76 Drawing
            UIBezierPath* bezier76Path = [UIBezierPath bezierPath];
            [bezier76Path moveToPoint: CGPointMake(379.5, 161)];
            [bezier76Path addCurveToPoint: CGPointMake(379.5, 217) controlPoint1: CGPointMake(382.5, 241) controlPoint2: CGPointMake(379.5, 217)];
            [skyGradientColor setStroke];
            bezier76Path.lineWidth = 1;
            [bezier76Path stroke];


            //// Bezier 77 Drawing
            UIBezierPath* bezier77Path = [UIBezierPath bezierPath];
            [bezier77Path moveToPoint: CGPointMake(367.5, 198)];
            [bezier77Path addCurveToPoint: CGPointMake(367.5, 254) controlPoint1: CGPointMake(370.5, 278) controlPoint2: CGPointMake(367.5, 254)];
            [skyGradientColor setStroke];
            bezier77Path.lineWidth = 1;
            [bezier77Path stroke];


            //// Bezier 78 Drawing
            UIBezierPath* bezier78Path = [UIBezierPath bezierPath];
            [bezier78Path moveToPoint: CGPointMake(348.5, 233.5)];
            [bezier78Path addCurveToPoint: CGPointMake(348.5, 289.5) controlPoint1: CGPointMake(351.5, 313.5) controlPoint2: CGPointMake(348.5, 289.5)];
            [skyGradientColor setStroke];
            bezier78Path.lineWidth = 1;
            [bezier78Path stroke];
        }


        //// Group 37
        {
            //// Bezier 79 Drawing
            UIBezierPath* bezier79Path = [UIBezierPath bezierPath];
            [bezier79Path moveToPoint: CGPointMake(294, 223.5)];
            [bezier79Path addCurveToPoint: CGPointMake(294, 279.5) controlPoint1: CGPointMake(297, 303.5) controlPoint2: CGPointMake(294, 279.5)];
            [skyGradientColor setStroke];
            bezier79Path.lineWidth = 1;
            [bezier79Path stroke];


            //// Bezier 80 Drawing
            UIBezierPath* bezier80Path = [UIBezierPath bezierPath];
            [bezier80Path moveToPoint: CGPointMake(281.5, 164.5)];
            [bezier80Path addCurveToPoint: CGPointMake(281.5, 220.5) controlPoint1: CGPointMake(284.5, 244.5) controlPoint2: CGPointMake(281.5, 220.5)];
            [skyGradientColor setStroke];
            bezier80Path.lineWidth = 1;
            [bezier80Path stroke];


            //// Bezier 81 Drawing
            UIBezierPath* bezier81Path = [UIBezierPath bezierPath];
            [bezier81Path moveToPoint: CGPointMake(269.5, 201.5)];
            [bezier81Path addCurveToPoint: CGPointMake(269.5, 257.5) controlPoint1: CGPointMake(272.5, 281.5) controlPoint2: CGPointMake(269.5, 257.5)];
            [skyGradientColor setStroke];
            bezier81Path.lineWidth = 1;
            [bezier81Path stroke];


            //// Bezier 82 Drawing
            UIBezierPath* bezier82Path = [UIBezierPath bezierPath];
            [bezier82Path moveToPoint: CGPointMake(250.5, 237)];
            [bezier82Path addCurveToPoint: CGPointMake(250.5, 293) controlPoint1: CGPointMake(253.5, 317) controlPoint2: CGPointMake(250.5, 293)];
            [skyGradientColor setStroke];
            bezier82Path.lineWidth = 1;
            [bezier82Path stroke];
        }


        //// Group 38
        {
            //// Bezier 83 Drawing
            UIBezierPath* bezier83Path = [UIBezierPath bezierPath];
            [bezier83Path moveToPoint: CGPointMake(367.5, 509)];
            [bezier83Path addCurveToPoint: CGPointMake(367.5, 565) controlPoint1: CGPointMake(370.5, 589) controlPoint2: CGPointMake(367.5, 565)];
            [skyGradientColor setStroke];
            bezier83Path.lineWidth = 1;
            [bezier83Path stroke];


            //// Bezier 84 Drawing
            UIBezierPath* bezier84Path = [UIBezierPath bezierPath];
            [bezier84Path moveToPoint: CGPointMake(355, 450)];
            [bezier84Path addCurveToPoint: CGPointMake(355, 506) controlPoint1: CGPointMake(358, 530) controlPoint2: CGPointMake(355, 506)];
            [skyGradientColor setStroke];
            bezier84Path.lineWidth = 1;
            [bezier84Path stroke];


            //// Bezier 85 Drawing
            UIBezierPath* bezier85Path = [UIBezierPath bezierPath];
            [bezier85Path moveToPoint: CGPointMake(343, 487)];
            [bezier85Path addCurveToPoint: CGPointMake(343, 543) controlPoint1: CGPointMake(346, 567) controlPoint2: CGPointMake(343, 543)];
            [skyGradientColor setStroke];
            bezier85Path.lineWidth = 1;
            [bezier85Path stroke];
        }


        //// Group 39
        {
            //// Bezier 86 Drawing
            UIBezierPath* bezier86Path = [UIBezierPath bezierPath];
            [bezier86Path moveToPoint: CGPointMake(264, 428.5)];
            [bezier86Path addCurveToPoint: CGPointMake(264, 484.5) controlPoint1: CGPointMake(267, 508.5) controlPoint2: CGPointMake(264, 484.5)];
            [skyGradientColor setStroke];
            bezier86Path.lineWidth = 1;
            [bezier86Path stroke];


            //// Bezier 87 Drawing
            UIBezierPath* bezier87Path = [UIBezierPath bezierPath];
            [bezier87Path moveToPoint: CGPointMake(251.5, 369.5)];
            [bezier87Path addCurveToPoint: CGPointMake(251.5, 425.5) controlPoint1: CGPointMake(254.5, 449.5) controlPoint2: CGPointMake(251.5, 425.5)];
            [skyGradientColor setStroke];
            bezier87Path.lineWidth = 1;
            [bezier87Path stroke];


            //// Bezier 88 Drawing
            UIBezierPath* bezier88Path = [UIBezierPath bezierPath];
            [bezier88Path moveToPoint: CGPointMake(239.5, 406.5)];
            [bezier88Path addCurveToPoint: CGPointMake(239.5, 462.5) controlPoint1: CGPointMake(242.5, 486.5) controlPoint2: CGPointMake(239.5, 462.5)];
            [skyGradientColor setStroke];
            bezier88Path.lineWidth = 1;
            [bezier88Path stroke];
        }
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 41 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.74, 47.96);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.67, 0.68, 20, 18.34)];
        [color17 setFill];
        [oval41Path fill];
        [UIColor.blackColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];

        CGContextRestoreGState(context);


        //// Oval 42 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.51, 34.18);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.81, 24, 26)];
        [color17 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];

        CGContextRestoreGState(context);


        //// Oval 43 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 139.01, 27.71);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval43Path fill];
        [UIColor.blackColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];

        CGContextRestoreGState(context);


        //// Oval 44 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 84.84, 38.22);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval44Path fill];
        [UIColor.blackColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];

        CGContextRestoreGState(context);


        //// Oval 45 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 9.06, 39.63);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.94, 0.88, 26, 26)];
        [color17 setFill];
        [oval45Path fill];
        [UIColor.blackColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];

        CGContextRestoreGState(context);


        //// Oval 46 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.64, 47.83);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval46Path fill];
        [UIColor.blackColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];

        CGContextRestoreGState(context);


        //// Oval 47 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 35.06, 41.26);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval47Path fill];
        [UIColor.blackColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];

        CGContextRestoreGState(context);


        //// Oval 48 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 65.11, 44.13);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.92, 27, 22)];
        [color17 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];

        CGContextRestoreGState(context);


        //// Oval 49 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 82.78, 50.62);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.81, 24, 20)];
        [color17 setFill];
        [oval49Path fill];
        [UIColor.blackColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];

        CGContextRestoreGState(context);


        //// Oval 50 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 99.01, 42.72);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.72, 0.64, 19, 20)];
        [color17 setFill];
        [oval50Path fill];
        [UIColor.blackColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];

        CGContextRestoreGState(context);


        //// Oval 51 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 119.26, 45.31);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.87, 0.84, 25, 24)];
        [color17 setFill];
        [oval51Path fill];
        [UIColor.blackColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];

        CGContextRestoreGState(context);


        //// Oval 52 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.3, 49.91);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval52Path fill];
        [UIColor.blackColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];

        CGContextRestoreGState(context);


        //// Oval 53 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 29.29, 32.45);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.9, 0.84, 25, 25)];
        [color17 setFill];
        [oval53Path fill];
        [UIColor.blackColor setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];

        CGContextRestoreGState(context);


        //// Oval 60 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 51.24, 32.79);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];

        CGContextRestoreGState(context);


        //// Oval 61 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 108.24, 33.9);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.76, 0.64, 19, 21)];
        [color17 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];

        CGContextRestoreGState(context);


        //// Oval 62 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.56, 24.29);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.91, 0.91, 27, 25)];
        [color17 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];

        CGContextRestoreGState(context);


        //// Oval 65 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 127.35, 35.59);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.8, 0.78, 23, 22)];
        [color17 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];

        CGContextRestoreGState(context);


        //// Oval 68 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 140.23, 45.18);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.83, 0.74, 22, 23)];
        [color17 setFill];
        [oval68Path fill];
        [UIColor.blackColor setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];

        CGContextRestoreGState(context);


        //// Oval 69 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 50.73, 49.85);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.73, 0.71, 21, 20)];
        [color17 setFill];
        [oval69Path fill];
        [UIColor.blackColor setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];

        CGContextRestoreGState(context);


        //// Oval 70 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.71, 49);
        CGContextRotateCTM(context, -2.01 * M_PI / 180);

        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.59, 0.61, 18, 16.34)];
        [color17 setFill];
        [oval70Path fill];
        [UIColor.blackColor setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 49
    {
        //// Bezier 116 Drawing
        UIBezierPath* bezier116Path = [UIBezierPath bezierPath];
        [bezier116Path moveToPoint: CGPointMake(273.5, 104.01)];
        [bezier116Path addCurveToPoint: CGPointMake(278.72, 104.01) controlPoint1: CGPointMake(276.4, 102.64) controlPoint2: CGPointMake(278.72, 104.01)];
        bezier116Path.lineCapStyle = kCGLineCapRound;

        [UIColor.blackColor setStroke];
        bezier116Path.lineWidth = 2;
        [bezier116Path stroke];


        //// Bezier 117 Drawing
        UIBezierPath* bezier117Path = [UIBezierPath bezierPath];
        [bezier117Path moveToPoint: CGPointMake(278.72, 104.1)];
        [bezier117Path addCurveToPoint: CGPointMake(288.99, 102.55) controlPoint1: CGPointMake(283.69, 105.06) controlPoint2: CGPointMake(288.99, 102.55)];
        bezier117Path.lineCapStyle = kCGLineCapRound;

        [UIColor.blackColor setStroke];
        bezier117Path.lineWidth = 3;
        [bezier117Path stroke];


        //// Bezier 118 Drawing
        UIBezierPath* bezier118Path = [UIBezierPath bezierPath];
        [bezier118Path moveToPoint: CGPointMake(289.17, 102.72)];
        [bezier118Path addCurveToPoint: CGPointMake(297, 103.41) controlPoint1: CGPointMake(292.23, 101.35) controlPoint2: CGPointMake(297, 103.41)];
        bezier118Path.lineCapStyle = kCGLineCapRound;

        [UIColor.blackColor setStroke];
        bezier118Path.lineWidth = 4;
        [bezier118Path stroke];
    }


    //// Group 50
    {
        //// Bezier 119 Drawing
        UIBezierPath* bezier119Path = [UIBezierPath bezierPath];
        [bezier119Path moveToPoint: CGPointMake(253.5, 104.2)];
        [bezier119Path addCurveToPoint: CGPointMake(250.5, 104.2) controlPoint1: CGPointMake(251.83, 101.51) controlPoint2: CGPointMake(250.5, 104.2)];
        bezier119Path.lineCapStyle = kCGLineCapRound;

        [UIColor.blackColor setStroke];
        bezier119Path.lineWidth = 1;
        [bezier119Path stroke];


        //// Bezier 120 Drawing
        UIBezierPath* bezier120Path = [UIBezierPath bezierPath];
        [bezier120Path moveToPoint: CGPointMake(250.5, 104.39)];
        [bezier120Path addCurveToPoint: CGPointMake(244.6, 101.34) controlPoint1: CGPointMake(247.65, 106.27) controlPoint2: CGPointMake(244.6, 101.34)];
        bezier120Path.lineCapStyle = kCGLineCapRound;

        [UIColor.blackColor setStroke];
        bezier120Path.lineWidth = 2;
        [bezier120Path stroke];


        //// Bezier 121 Drawing
        UIBezierPath* bezier121Path = [UIBezierPath bezierPath];
        [bezier121Path moveToPoint: CGPointMake(244.5, 101.68)];
        [bezier121Path addCurveToPoint: CGPointMake(240, 103.03) controlPoint1: CGPointMake(242.74, 98.98) controlPoint2: CGPointMake(240, 103.03)];
        bezier121Path.lineCapStyle = kCGLineCapRound;

        [UIColor.blackColor setStroke];
        bezier121Path.lineWidth = 3;
        [bezier121Path stroke];
    }


    //// Group 51
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 343.13, 241.06);
        CGContextRotateCTM(context, 0.89 * M_PI / 180);

        CGContextSetShadowWithColor(context, lightningShadow.shadowOffset, lightningShadow.shadowBlurRadius, [lightningShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 52
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 0.37, 12.44);
            CGContextRotateCTM(context, 4.73 * M_PI / 180);



            //// Bezier 115 Drawing
            UIBezierPath* bezier115Path = [UIBezierPath bezierPath];
            [bezier115Path moveToPoint: CGPointMake(-3.98, -117.81)];
            [bezier115Path addLineToPoint: CGPointMake(-7.24, -109.76)];
            [bezier115Path addLineToPoint: CGPointMake(-8.02, -120.74)];
            [bezier115Path addLineToPoint: CGPointMake(-10.41, -113.88)];
            [bezier115Path addLineToPoint: CGPointMake(-12.08, -97.14)];
            [bezier115Path addLineToPoint: CGPointMake(-13.74, -120.19)];
            [bezier115Path addLineToPoint: CGPointMake(-14.54, -104.64)];
            [bezier115Path addLineToPoint: CGPointMake(-18.98, -113.06)];
            [bezier115Path addLineToPoint: CGPointMake(-18.35, -104.28)];
            [bezier115Path addLineToPoint: CGPointMake(-22.79, -112.7)];
            [bezier115Path addLineToPoint: CGPointMake(-13.44, -17.47)];
            [bezier115Path addLineToPoint: CGPointMake(-3.88, -29.59)];
            [bezier115Path addLineToPoint: CGPointMake(-3.88, 23.29)];
            [bezier115Path addLineToPoint: CGPointMake(7.58, 10.07)];
            [bezier115Path addLineToPoint: CGPointMake(7.58, 96)];
            [bezier115Path addLineToPoint: CGPointMake(20, -13.06)];
            [bezier115Path addLineToPoint: CGPointMake(5.67, -2.05)];
            [bezier115Path addLineToPoint: CGPointMake(9.49, -57.13)];
            [bezier115Path addLineToPoint: CGPointMake(-3.88, -47.22)];
            [bezier115Path addLineToPoint: CGPointMake(-1.02, -114.42)];
            [bezier115Path addLineToPoint: CGPointMake(-3.98, -117.81)];
            [bezier115Path closePath];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
            CGContextBeginTransparencyLayer(context, NULL);
            [bezier115Path addClip];
            CGContextDrawLinearGradient(context, lightningGradient, CGPointMake(-1.39, -120.74), CGPointMake(-1.39, 96), 0);
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);

            [UIColor.blackColor setStroke];
            bezier115Path.lineWidth = 1;
            [bezier115Path stroke];



            CGContextRestoreGState(context);
        }


        //// Bezier 122 Drawing
        UIBezierPath* bezier122Path = [UIBezierPath bezierPath];
        [bezier122Path moveToPoint: CGPointMake(-4.63, -79.59)];
        [bezier122Path addLineToPoint: CGPointMake(-6.63, -24.33)];
        [bezier122Path addLineToPoint: CGPointMake(5.37, -30.96)];
        [bezier122Path addLineToPoint: CGPointMake(0.37, 19.88)];
        [bezier122Path addLineToPoint: CGPointMake(13.37, 13.24)];
        [bezier122Path addLineToPoint: CGPointMake(8.37, 56.34)];
        [color13 setStroke];
        bezier122Path.lineWidth = 1;
        [bezier122Path stroke];


        CGContextEndTransparencyLayer(context);

        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 48.69, 135.6);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.61, 19.78)];
        [color17 setFill];
        [oval21Path fill];
        [UIColor.blackColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];

        CGContextRestoreGState(context);


        //// Oval 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 62.63, 120.72);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.72, 28.04)];
        [color17 setFill];
        [oval22Path fill];
        [UIColor.blackColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 23 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 76.41, 113.73);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.7, 23.72)];
        [color17 setFill];
        [oval23Path fill];
        [UIColor.blackColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];

        CGContextRestoreGState(context);


        //// Oval 24 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 136.37, 125.08);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.57, 21.57)];
        [color17 setFill];
        [oval24Path fill];
        [UIColor.blackColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];

        CGContextRestoreGState(context);


        //// Oval 25 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 207.58, 126.62);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 26.79, 28.04)];
        [color17 setFill];
        [oval25Path fill];
        [UIColor.blackColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];

        CGContextRestoreGState(context);


        //// Oval 26 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 198.49, 135.46);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.64, 21.57)];
        [color17 setFill];
        [oval26Path fill];
        [UIColor.blackColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];

        CGContextRestoreGState(context);


        //// Oval 27 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 181.7, 128.37);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.76, 25.88)];
        [color17 setFill];
        [oval27Path fill];
        [UIColor.blackColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];

        CGContextRestoreGState(context);


        //// Oval 28 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 148.55, 131.48);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27.83, 23.72)];
        [color17 setFill];
        [oval28Path fill];
        [UIColor.blackColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];

        CGContextRestoreGState(context);


        //// Oval 29 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 133.34, 138.49);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.73, 21.56)];
        [color17 setFill];
        [oval29Path fill];
        [UIColor.blackColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];

        CGContextRestoreGState(context);


        //// Oval 30 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 121.75, 129.95);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.57, 21.57)];
        [color17 setFill];
        [oval30Path fill];
        [UIColor.blackColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];

        CGContextRestoreGState(context);


        //// Oval 31 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 94.82, 132.75);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.76, 25.88)];
        [color17 setFill];
        [oval31Path fill];
        [UIColor.blackColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];

        CGContextRestoreGState(context);


        //// Oval 32 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 112.2, 137.7);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.57, 22.65)];
        [color17 setFill];
        [oval32Path fill];
        [UIColor.blackColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];

        CGContextRestoreGState(context);


        //// Oval 33 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 187.7, 118.86);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.76, 26.96)];
        [color17 setFill];
        [oval33Path fill];
        [UIColor.blackColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];

        CGContextRestoreGState(context);


        //// Oval 34 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.06, 119.22);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.67, 24.81)];
        [color17 setFill];
        [oval34Path fill];
        [UIColor.blackColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];

        CGContextRestoreGState(context);


        //// Oval 35 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 112.26, 120.41);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.57, 22.65)];
        [color17 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];

        CGContextRestoreGState(context);


        //// Oval 36 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 94.54, 110.05);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 27.82, 26.96)];
        [color17 setFill];
        [oval36Path fill];
        [UIColor.blackColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];

        CGContextRestoreGState(context);


        //// Oval 37 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 88.45, 122.25);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.7, 23.72)];
        [color17 setFill];
        [oval37Path fill];
        [UIColor.blackColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];

        CGContextRestoreGState(context);


        //// Oval 38 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 76.23, 132.61);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.67, 24.81)];
        [color17 setFill];
        [oval38Path fill];
        [UIColor.blackColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];

        CGContextRestoreGState(context);


        //// Oval 39 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 169.51, 137.64);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.64, 21.57)];
        [color17 setFill];
        [oval39Path fill];
        [UIColor.blackColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];

        CGContextRestoreGState(context);


        //// Oval 40 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 63.1, 136.72);
        CGContextRotateCTM(context, 2.01 * M_PI / 180);

        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.55, 17.62)];
        [color17 setFill];
        [oval40Path fill];
        [UIColor.blackColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 40
    {
        //// Group 41
        {
            //// Bezier 89 Drawing
            UIBezierPath* bezier89Path = [UIBezierPath bezierPath];
            [bezier89Path moveToPoint: CGPointMake(114.5, 271.5)];
            [bezier89Path addCurveToPoint: CGPointMake(114.5, 327.5) controlPoint1: CGPointMake(117.5, 351.5) controlPoint2: CGPointMake(114.5, 327.5)];
            [skyGradientColor setStroke];
            bezier89Path.lineWidth = 1;
            [bezier89Path stroke];


            //// Bezier 90 Drawing
            UIBezierPath* bezier90Path = [UIBezierPath bezierPath];
            [bezier90Path moveToPoint: CGPointMake(85, 217.5)];
            [bezier90Path addCurveToPoint: CGPointMake(85, 273.5) controlPoint1: CGPointMake(88, 297.5) controlPoint2: CGPointMake(85, 273.5)];
            [skyGradientColor setStroke];
            bezier90Path.lineWidth = 1;
            [bezier90Path stroke];


            //// Bezier 91 Drawing
            UIBezierPath* bezier91Path = [UIBezierPath bezierPath];
            [bezier91Path moveToPoint: CGPointMake(73, 254.5)];
            [bezier91Path addCurveToPoint: CGPointMake(73, 310.5) controlPoint1: CGPointMake(76, 334.5) controlPoint2: CGPointMake(73, 310.5)];
            [skyGradientColor setStroke];
            bezier91Path.lineWidth = 1;
            [bezier91Path stroke];
        }


        //// Group 42
        {
            //// Bezier 92 Drawing
            UIBezierPath* bezier92Path = [UIBezierPath bezierPath];
            [bezier92Path moveToPoint: CGPointMake(75, 472)];
            [bezier92Path addCurveToPoint: CGPointMake(75, 528) controlPoint1: CGPointMake(78, 552) controlPoint2: CGPointMake(75, 528)];
            [skyGradientColor setStroke];
            bezier92Path.lineWidth = 1;
            [bezier92Path stroke];


            //// Bezier 93 Drawing
            UIBezierPath* bezier93Path = [UIBezierPath bezierPath];
            [bezier93Path moveToPoint: CGPointMake(62.5, 413)];
            [bezier93Path addCurveToPoint: CGPointMake(62.5, 469) controlPoint1: CGPointMake(65.5, 493) controlPoint2: CGPointMake(62.5, 469)];
            [skyGradientColor setStroke];
            bezier93Path.lineWidth = 1;
            [bezier93Path stroke];


            //// Bezier 94 Drawing
            UIBezierPath* bezier94Path = [UIBezierPath bezierPath];
            [bezier94Path moveToPoint: CGPointMake(50.5, 450)];
            [bezier94Path addCurveToPoint: CGPointMake(50.5, 506) controlPoint1: CGPointMake(53.5, 530) controlPoint2: CGPointMake(50.5, 506)];
            [skyGradientColor setStroke];
            bezier94Path.lineWidth = 1;
            [bezier94Path stroke];


            //// Bezier 95 Drawing
            UIBezierPath* bezier95Path = [UIBezierPath bezierPath];
            [bezier95Path moveToPoint: CGPointMake(31.5, 485.5)];
            [bezier95Path addCurveToPoint: CGPointMake(31.5, 541.5) controlPoint1: CGPointMake(34.5, 565.5) controlPoint2: CGPointMake(31.5, 541.5)];
            [skyGradientColor setStroke];
            bezier95Path.lineWidth = 1;
            [bezier95Path stroke];
        }


        //// Group 43
        {
            //// Bezier 96 Drawing
            UIBezierPath* bezier96Path = [UIBezierPath bezierPath];
            [bezier96Path moveToPoint: CGPointMake(155.5, 130)];
            [bezier96Path addCurveToPoint: CGPointMake(155.5, 186) controlPoint1: CGPointMake(158.5, 210) controlPoint2: CGPointMake(155.5, 186)];
            [skyGradientColor setStroke];
            bezier96Path.lineWidth = 1;
            [bezier96Path stroke];


            //// Bezier 97 Drawing
            UIBezierPath* bezier97Path = [UIBezierPath bezierPath];
            [bezier97Path moveToPoint: CGPointMake(143, 71)];
            [bezier97Path addCurveToPoint: CGPointMake(143, 127) controlPoint1: CGPointMake(146, 151) controlPoint2: CGPointMake(143, 127)];
            [skyGradientColor setStroke];
            bezier97Path.lineWidth = 1;
            [bezier97Path stroke];


            //// Bezier 98 Drawing
            UIBezierPath* bezier98Path = [UIBezierPath bezierPath];
            [bezier98Path moveToPoint: CGPointMake(131, 108)];
            [bezier98Path addCurveToPoint: CGPointMake(131, 164) controlPoint1: CGPointMake(134, 188) controlPoint2: CGPointMake(131, 164)];
            [skyGradientColor setStroke];
            bezier98Path.lineWidth = 1;
            [bezier98Path stroke];


            //// Bezier 99 Drawing
            UIBezierPath* bezier99Path = [UIBezierPath bezierPath];
            [bezier99Path moveToPoint: CGPointMake(112, 143.5)];
            [bezier99Path addCurveToPoint: CGPointMake(112, 199.5) controlPoint1: CGPointMake(115, 223.5) controlPoint2: CGPointMake(112, 199.5)];
            [skyGradientColor setStroke];
            bezier99Path.lineWidth = 1;
            [bezier99Path stroke];
        }


        //// Group 44
        {
            //// Bezier 100 Drawing
            UIBezierPath* bezier100Path = [UIBezierPath bezierPath];
            [bezier100Path moveToPoint: CGPointMake(57.5, 133.5)];
            [bezier100Path addCurveToPoint: CGPointMake(57.5, 189.5) controlPoint1: CGPointMake(60.5, 213.5) controlPoint2: CGPointMake(57.5, 189.5)];
            [skyGradientColor setStroke];
            bezier100Path.lineWidth = 1;
            [bezier100Path stroke];


            //// Bezier 101 Drawing
            UIBezierPath* bezier101Path = [UIBezierPath bezierPath];
            [bezier101Path moveToPoint: CGPointMake(45, 74.5)];
            [bezier101Path addCurveToPoint: CGPointMake(45, 130.5) controlPoint1: CGPointMake(48, 154.5) controlPoint2: CGPointMake(45, 130.5)];
            [skyGradientColor setStroke];
            bezier101Path.lineWidth = 1;
            [bezier101Path stroke];


            //// Bezier 102 Drawing
            UIBezierPath* bezier102Path = [UIBezierPath bezierPath];
            [bezier102Path moveToPoint: CGPointMake(33, 111.5)];
            [bezier102Path addCurveToPoint: CGPointMake(33, 167.5) controlPoint1: CGPointMake(36, 191.5) controlPoint2: CGPointMake(33, 167.5)];
            [skyGradientColor setStroke];
            bezier102Path.lineWidth = 1;
            [bezier102Path stroke];


            //// Bezier 103 Drawing
            UIBezierPath* bezier103Path = [UIBezierPath bezierPath];
            [bezier103Path moveToPoint: CGPointMake(14, 147)];
            [bezier103Path addCurveToPoint: CGPointMake(14, 203) controlPoint1: CGPointMake(17, 227) controlPoint2: CGPointMake(14, 203)];
            [skyGradientColor setStroke];
            bezier103Path.lineWidth = 1;
            [bezier103Path stroke];
        }


        //// Group 45
        {
            //// Bezier 104 Drawing
            UIBezierPath* bezier104Path = [UIBezierPath bezierPath];
            [bezier104Path moveToPoint: CGPointMake(131, 419)];
            [bezier104Path addCurveToPoint: CGPointMake(131, 475) controlPoint1: CGPointMake(134, 499) controlPoint2: CGPointMake(131, 475)];
            [skyGradientColor setStroke];
            bezier104Path.lineWidth = 1;
            [bezier104Path stroke];


            //// Bezier 105 Drawing
            UIBezierPath* bezier105Path = [UIBezierPath bezierPath];
            [bezier105Path moveToPoint: CGPointMake(118.5, 360)];
            [bezier105Path addCurveToPoint: CGPointMake(118.5, 416) controlPoint1: CGPointMake(121.5, 440) controlPoint2: CGPointMake(118.5, 416)];
            [skyGradientColor setStroke];
            bezier105Path.lineWidth = 1;
            [bezier105Path stroke];


            //// Bezier 106 Drawing
            UIBezierPath* bezier106Path = [UIBezierPath bezierPath];
            [bezier106Path moveToPoint: CGPointMake(106.5, 397)];
            [bezier106Path addCurveToPoint: CGPointMake(106.5, 453) controlPoint1: CGPointMake(109.5, 477) controlPoint2: CGPointMake(106.5, 453)];
            [skyGradientColor setStroke];
            bezier106Path.lineWidth = 1;
            [bezier106Path stroke];
        }


        //// Group 46
        {
            //// Bezier 107 Drawing
            UIBezierPath* bezier107Path = [UIBezierPath bezierPath];
            [bezier107Path moveToPoint: CGPointMake(27.5, 338.5)];
            [bezier107Path addCurveToPoint: CGPointMake(27.5, 394.5) controlPoint1: CGPointMake(30.5, 418.5) controlPoint2: CGPointMake(27.5, 394.5)];
            [skyGradientColor setStroke];
            bezier107Path.lineWidth = 1;
            [bezier107Path stroke];


            //// Bezier 108 Drawing
            UIBezierPath* bezier108Path = [UIBezierPath bezierPath];
            [bezier108Path moveToPoint: CGPointMake(15, 279.5)];
            [bezier108Path addCurveToPoint: CGPointMake(15, 335.5) controlPoint1: CGPointMake(18, 359.5) controlPoint2: CGPointMake(15, 335.5)];
            [skyGradientColor setStroke];
            bezier108Path.lineWidth = 1;
            [bezier108Path stroke];


            //// Bezier 109 Drawing
            UIBezierPath* bezier109Path = [UIBezierPath bezierPath];
            [bezier109Path moveToPoint: CGPointMake(3, 316.5)];
            [bezier109Path addCurveToPoint: CGPointMake(3, 372.5) controlPoint1: CGPointMake(6, 396.5) controlPoint2: CGPointMake(3, 372.5)];
            [skyGradientColor setStroke];
            bezier109Path.lineWidth = 1;
            [bezier109Path stroke];
        }
    }


    //// Group 53
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 161.32, 167.06);
        CGContextRotateCTM(context, -2.5 * M_PI / 180);

        CGContextSetShadowWithColor(context, lightningShadow.shadowOffset, lightningShadow.shadowBlurRadius, [lightningShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 54
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, -6.53, 13.79);
            CGContextRotateCTM(context, -4.73 * M_PI / 180);



            //// Bezier 123 Drawing
            UIBezierPath* bezier123Path = [UIBezierPath bezierPath];
            [bezier123Path moveToPoint: CGPointMake(10.09, -43.08)];
            [bezier123Path addLineToPoint: CGPointMake(12.13, -37.81)];
            [bezier123Path addLineToPoint: CGPointMake(12.62, -44.99)];
            [bezier123Path addLineToPoint: CGPointMake(14.11, -40.51)];
            [bezier123Path addLineToPoint: CGPointMake(15.16, -29.56)];
            [bezier123Path addLineToPoint: CGPointMake(16.2, -44.64)];
            [bezier123Path addLineToPoint: CGPointMake(16.7, -34.47)];
            [bezier123Path addLineToPoint: CGPointMake(19.48, -39.97)];
            [bezier123Path addLineToPoint: CGPointMake(19.08, -34.23)];
            [bezier123Path addLineToPoint: CGPointMake(21.86, -39.74)];
            [bezier123Path addLineToPoint: CGPointMake(16.01, 22.54)];
            [bezier123Path addLineToPoint: CGPointMake(10.03, 14.61)];
            [bezier123Path addLineToPoint: CGPointMake(10.03, 49.2)];
            [bezier123Path addLineToPoint: CGPointMake(2.85, 40.55)];
            [bezier123Path addLineToPoint: CGPointMake(2.85, 96.74)];
            [bezier123Path addLineToPoint: CGPointMake(-4.92, 25.42)];
            [bezier123Path addLineToPoint: CGPointMake(4.05, 32.63)];
            [bezier123Path addLineToPoint: CGPointMake(1.65, -3.4)];
            [bezier123Path addLineToPoint: CGPointMake(10.03, 3.09)];
            [bezier123Path addLineToPoint: CGPointMake(8.23, -40.86)];
            [bezier123Path addLineToPoint: CGPointMake(10.09, -43.08)];
            [bezier123Path closePath];
            CGContextSaveGState(context);
            CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
            CGContextBeginTransparencyLayer(context, NULL);
            [bezier123Path addClip];
            CGContextDrawLinearGradient(context, lightningGradient, CGPointMake(8.47, -44.99), CGPointMake(8.47, 96.74), 0);
            CGContextEndTransparencyLayer(context);
            CGContextRestoreGState(context);

            [UIColor.blackColor setStroke];
            bezier123Path.lineWidth = 1;
            [bezier123Path stroke];



            CGContextRestoreGState(context);
        }


        //// Bezier 124 Drawing
        UIBezierPath* bezier124Path = [UIBezierPath bezierPath];
        [bezier124Path moveToPoint: CGPointMake(6.97, -12.68)];
        [bezier124Path addLineToPoint: CGPointMake(8.25, 23.45)];
        [bezier124Path addLineToPoint: CGPointMake(0.61, 19.11)];
        [bezier124Path addLineToPoint: CGPointMake(3.79, 52.35)];
        [bezier124Path addLineToPoint: CGPointMake(-4.48, 48.01)];
        [bezier124Path addLineToPoint: CGPointMake(-1.3, 76.19)];
        [color13 setStroke];
        bezier124Path.lineWidth = 1;
        [bezier124Path stroke];


        CGContextEndTransparencyLayer(context);

        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 140 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 57.25, 114.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.48, 26.95)];
        [color17 setFill];
        [oval140Path fill];
        [UIColor.blackColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];

        CGContextRestoreGState(context);


        //// Oval 141 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 74.64, 115.41);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.58, 25.8)];
        [color17 setFill];
        [oval141Path fill];
        [UIColor.blackColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];

        CGContextRestoreGState(context);


        //// Oval 142 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 94.44, 122.95);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.8, 18.76)];
        [color17 setFill];
        [oval142Path fill];
        [UIColor.blackColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];

        CGContextRestoreGState(context);


        //// Oval 143 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 103.81, 117.61);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.57, 24.63)];
        [color17 setFill];
        [oval143Path fill];
        [UIColor.blackColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];

        CGContextRestoreGState(context);


        //// Oval 144 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 119.63, 119.74);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.35, 23.45)];
        [color17 setFill];
        [oval144Path fill];
        [UIColor.blackColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];

        CGContextRestoreGState(context);


        //// Oval 145 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 133.46, 109.23);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.82, 22.25)];
        [color17 setFill];
        [oval145Path fill];
        [UIColor.blackColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];

        CGContextRestoreGState(context);


        //// Oval 146 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.12, 116.98);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.92, 21.09)];
        [color17 setFill];
        [oval146Path fill];
        [UIColor.blackColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];

        CGContextRestoreGState(context);


        //// Oval 147 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 73.67, 106.72);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 25.56, 23.47)];
        [color17 setFill];
        [oval147Path fill];
        [UIColor.blackColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];

        CGContextRestoreGState(context);


        //// Oval 148 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 92.32, 104.39);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.35, 23.45)];
        [color17 setFill];
        [oval148Path fill];
        [UIColor.blackColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];

        CGContextRestoreGState(context);


        //// Oval 149 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 109.8, 96.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 24.47, 25.79)];
        [color17 setFill];
        [oval149Path fill];
        [UIColor.blackColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];

        CGContextRestoreGState(context);


        //// Oval 150 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 122.51, 105.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.93, 23.42)];
        [color17 setFill];
        [oval150Path fill];
        [UIColor.blackColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 7
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 71 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 117.1, 113.2);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.9, 25.92)];
        [color17 setFill];
        [oval71Path fill];
        [UIColor.blackColor setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];

        CGContextRestoreGState(context);


        //// Oval 72 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 133.3, 114.46);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.92, 24.82)];
        [color17 setFill];
        [oval72Path fill];
        [UIColor.blackColor setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];

        CGContextRestoreGState(context);


        //// Oval 73 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 151.77, 121.72);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.65, 18.04)];
        [color17 setFill];
        [oval73Path fill];
        [UIColor.blackColor setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];

        CGContextRestoreGState(context);


        //// Oval 74 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 160.47, 116.57);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.91, 23.7)];
        [color17 setFill];
        [oval74Path fill];
        [UIColor.blackColor setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];

        CGContextRestoreGState(context);


        //// Oval 75 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 175.21, 118.62);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.84, 22.56)];
        [color17 setFill];
        [oval75Path fill];
        [UIColor.blackColor setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];

        CGContextRestoreGState(context);


        //// Oval 78 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 188.1, 108.56);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.68, 21.39)];
        [color17 setFill];
        [oval78Path fill];
        [UIColor.blackColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];

        CGContextRestoreGState(context);


        //// Oval 107 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 191.52, 115.99);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.7, 20.29)];
        [color17 setFill];
        [oval107Path fill];
        [UIColor.blackColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];

        CGContextRestoreGState(context);


        //// Oval 108 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 132.41, 106.13);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.9, 22.58)];
        [color17 setFill];
        [oval108Path fill];
        [UIColor.blackColor setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];

        CGContextRestoreGState(context);


        //// Oval 127 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 149.77, 103.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.84, 22.56)];
        [color17 setFill];
        [oval127Path fill];
        [UIColor.blackColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];

        CGContextRestoreGState(context);


        //// Oval 128 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 166.05, 96.71);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22.89, 24.81)];
        [color17 setFill];
        [oval128Path fill];
        [UIColor.blackColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];

        CGContextRestoreGState(context);


        //// Oval 129 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 177.9, 105.36);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.72, 22.52)];
        [color17 setFill];
        [oval129Path fill];
        [UIColor.blackColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 155 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 284.98, 111.82);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval155Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 23)];
        [color17 setFill];
        [oval155Path fill];
        [UIColor.blackColor setStroke];
        oval155Path.lineWidth = 1;
        [oval155Path stroke];

        CGContextRestoreGState(context);


        //// Oval 166 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 300.73, 112.96);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval166Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 22)];
        [color17 setFill];
        [oval166Path fill];
        [UIColor.blackColor setStroke];
        oval166Path.lineWidth = 1;
        [oval166Path stroke];

        CGContextRestoreGState(context);


        //// Oval 167 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 318.61, 119.39);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval167Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color17 setFill];
        [oval167Path fill];
        [UIColor.blackColor setStroke];
        oval167Path.lineWidth = 1;
        [oval167Path stroke];

        CGContextRestoreGState(context);


        //// Oval 168 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 327.13, 114.85);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval168Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 21)];
        [color17 setFill];
        [oval168Path fill];
        [UIColor.blackColor setStroke];
        oval168Path.lineWidth = 1;
        [oval168Path stroke];

        CGContextRestoreGState(context);


        //// Oval 169 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 341.45, 116.67);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval169Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval169Path fill];
        [UIColor.blackColor setStroke];
        oval169Path.lineWidth = 1;
        [oval169Path stroke];

        CGContextRestoreGState(context);


        //// Oval 170 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 353.97, 107.62);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval170Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 19)];
        [color17 setFill];
        [oval170Path fill];
        [UIColor.blackColor setStroke];
        oval170Path.lineWidth = 1;
        [oval170Path stroke];

        CGContextRestoreGState(context);


        //// Oval 171 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 357.28, 114.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval171Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color17 setFill];
        [oval171Path fill];
        [UIColor.blackColor setStroke];
        oval171Path.lineWidth = 1;
        [oval171Path stroke];

        CGContextRestoreGState(context);


        //// Oval 172 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 299.84, 105.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval172Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23, 20)];
        [color17 setFill];
        [oval172Path fill];
        [UIColor.blackColor setStroke];
        oval172Path.lineWidth = 1;
        [oval172Path stroke];

        CGContextRestoreGState(context);


        //// Oval 173 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 316.72, 103.5);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval173Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 20)];
        [color17 setFill];
        [oval173Path fill];
        [UIColor.blackColor setStroke];
        oval173Path.lineWidth = 1;
        [oval173Path stroke];

        CGContextRestoreGState(context);


        //// Oval 174 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 332.57, 97.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval174Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 22, 22)];
        [color17 setFill];
        [oval174Path fill];
        [UIColor.blackColor setStroke];
        oval174Path.lineWidth = 1;
        [oval174Path stroke];

        CGContextRestoreGState(context);


        //// Oval 175 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 344.06, 104.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval175Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 20)];
        [color17 setFill];
        [oval175Path fill];
        [UIColor.blackColor setStroke];
        oval175Path.lineWidth = 1;
        [oval175Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 25
    {
        //// Group 14
        {
            //// Bezier Drawing
            UIBezierPath* bezierPath = [UIBezierPath bezierPath];
            [bezierPath moveToPoint: CGPointMake(175.5, 331.5)];
            [bezierPath addCurveToPoint: CGPointMake(175.5, 387.5) controlPoint1: CGPointMake(178.5, 411.5) controlPoint2: CGPointMake(175.5, 387.5)];
            [skyGradientColor setStroke];
            bezierPath.lineWidth = 1;
            [bezierPath stroke];


            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
            [bezier2Path moveToPoint: CGPointMake(146, 277.5)];
            [bezier2Path addCurveToPoint: CGPointMake(146, 333.5) controlPoint1: CGPointMake(149, 357.5) controlPoint2: CGPointMake(146, 333.5)];
            [skyGradientColor setStroke];
            bezier2Path.lineWidth = 1;
            [bezier2Path stroke];


            //// Bezier 3 Drawing
            UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
            [bezier3Path moveToPoint: CGPointMake(134, 314.5)];
            [bezier3Path addCurveToPoint: CGPointMake(134, 370.5) controlPoint1: CGPointMake(137, 394.5) controlPoint2: CGPointMake(134, 370.5)];
            [skyGradientColor setStroke];
            bezier3Path.lineWidth = 1;
            [bezier3Path stroke];
        }


        //// Group 15
        {
            //// Bezier 5 Drawing
            UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
            [bezier5Path moveToPoint: CGPointMake(136, 532)];
            [bezier5Path addCurveToPoint: CGPointMake(136, 588) controlPoint1: CGPointMake(139, 612) controlPoint2: CGPointMake(136, 588)];
            [skyGradientColor setStroke];
            bezier5Path.lineWidth = 1;
            [bezier5Path stroke];


            //// Bezier 6 Drawing
            UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
            [bezier6Path moveToPoint: CGPointMake(123.5, 473)];
            [bezier6Path addCurveToPoint: CGPointMake(123.5, 529) controlPoint1: CGPointMake(126.5, 553) controlPoint2: CGPointMake(123.5, 529)];
            [skyGradientColor setStroke];
            bezier6Path.lineWidth = 1;
            [bezier6Path stroke];


            //// Bezier 7 Drawing
            UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
            [bezier7Path moveToPoint: CGPointMake(111.5, 510)];
            [bezier7Path addCurveToPoint: CGPointMake(111.5, 566) controlPoint1: CGPointMake(114.5, 590) controlPoint2: CGPointMake(111.5, 566)];
            [skyGradientColor setStroke];
            bezier7Path.lineWidth = 1;
            [bezier7Path stroke];


            //// Bezier 8 Drawing
            UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
            [bezier8Path moveToPoint: CGPointMake(92.5, 545.5)];
            [bezier8Path addCurveToPoint: CGPointMake(92.5, 601.5) controlPoint1: CGPointMake(95.5, 625.5) controlPoint2: CGPointMake(92.5, 601.5)];
            [skyGradientColor setStroke];
            bezier8Path.lineWidth = 1;
            [bezier8Path stroke];
        }


        //// Group 16
        {
            //// Bezier 9 Drawing
            UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
            [bezier9Path moveToPoint: CGPointMake(216.5, 190)];
            [bezier9Path addCurveToPoint: CGPointMake(216.5, 246) controlPoint1: CGPointMake(219.5, 270) controlPoint2: CGPointMake(216.5, 246)];
            [skyGradientColor setStroke];
            bezier9Path.lineWidth = 1;
            [bezier9Path stroke];


            //// Bezier 10 Drawing
            UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
            [bezier10Path moveToPoint: CGPointMake(204, 131)];
            [bezier10Path addCurveToPoint: CGPointMake(204, 187) controlPoint1: CGPointMake(207, 211) controlPoint2: CGPointMake(204, 187)];
            [skyGradientColor setStroke];
            bezier10Path.lineWidth = 1;
            [bezier10Path stroke];


            //// Bezier 11 Drawing
            UIBezierPath* bezier11Path = [UIBezierPath bezierPath];
            [bezier11Path moveToPoint: CGPointMake(192, 168)];
            [bezier11Path addCurveToPoint: CGPointMake(192, 224) controlPoint1: CGPointMake(195, 248) controlPoint2: CGPointMake(192, 224)];
            [skyGradientColor setStroke];
            bezier11Path.lineWidth = 1;
            [bezier11Path stroke];


            //// Bezier 12 Drawing
            UIBezierPath* bezier12Path = [UIBezierPath bezierPath];
            [bezier12Path moveToPoint: CGPointMake(173, 203.5)];
            [bezier12Path addCurveToPoint: CGPointMake(173, 259.5) controlPoint1: CGPointMake(176, 283.5) controlPoint2: CGPointMake(173, 259.5)];
            [skyGradientColor setStroke];
            bezier12Path.lineWidth = 1;
            [bezier12Path stroke];
        }


        //// Group 17
        {
            //// Bezier 30 Drawing
            UIBezierPath* bezier30Path = [UIBezierPath bezierPath];
            [bezier30Path moveToPoint: CGPointMake(118.5, 193.5)];
            [bezier30Path addCurveToPoint: CGPointMake(118.5, 249.5) controlPoint1: CGPointMake(121.5, 273.5) controlPoint2: CGPointMake(118.5, 249.5)];
            [skyGradientColor setStroke];
            bezier30Path.lineWidth = 1;
            [bezier30Path stroke];


            //// Bezier 31 Drawing
            UIBezierPath* bezier31Path = [UIBezierPath bezierPath];
            [bezier31Path moveToPoint: CGPointMake(106, 134.5)];
            [bezier31Path addCurveToPoint: CGPointMake(106, 190.5) controlPoint1: CGPointMake(109, 214.5) controlPoint2: CGPointMake(106, 190.5)];
            [skyGradientColor setStroke];
            bezier31Path.lineWidth = 1;
            [bezier31Path stroke];


            //// Bezier 32 Drawing
            UIBezierPath* bezier32Path = [UIBezierPath bezierPath];
            [bezier32Path moveToPoint: CGPointMake(94, 171.5)];
            [bezier32Path addCurveToPoint: CGPointMake(94, 227.5) controlPoint1: CGPointMake(97, 251.5) controlPoint2: CGPointMake(94, 227.5)];
            [skyGradientColor setStroke];
            bezier32Path.lineWidth = 1;
            [bezier32Path stroke];


            //// Bezier 33 Drawing
            UIBezierPath* bezier33Path = [UIBezierPath bezierPath];
            [bezier33Path moveToPoint: CGPointMake(75, 207)];
            [bezier33Path addCurveToPoint: CGPointMake(75, 263) controlPoint1: CGPointMake(78, 287) controlPoint2: CGPointMake(75, 263)];
            [skyGradientColor setStroke];
            bezier33Path.lineWidth = 1;
            [bezier33Path stroke];
        }


        //// Group 23
        {
            //// Bezier 4 Drawing
            UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
            [bezier4Path moveToPoint: CGPointMake(192, 479)];
            [bezier4Path addCurveToPoint: CGPointMake(192, 535) controlPoint1: CGPointMake(195, 559) controlPoint2: CGPointMake(192, 535)];
            [skyGradientColor setStroke];
            bezier4Path.lineWidth = 1;
            [bezier4Path stroke];


            //// Bezier 42 Drawing
            UIBezierPath* bezier42Path = [UIBezierPath bezierPath];
            [bezier42Path moveToPoint: CGPointMake(179.5, 420)];
            [bezier42Path addCurveToPoint: CGPointMake(179.5, 476) controlPoint1: CGPointMake(182.5, 500) controlPoint2: CGPointMake(179.5, 476)];
            [skyGradientColor setStroke];
            bezier42Path.lineWidth = 1;
            [bezier42Path stroke];


            //// Bezier 43 Drawing
            UIBezierPath* bezier43Path = [UIBezierPath bezierPath];
            [bezier43Path moveToPoint: CGPointMake(167.5, 457)];
            [bezier43Path addCurveToPoint: CGPointMake(167.5, 513) controlPoint1: CGPointMake(170.5, 537) controlPoint2: CGPointMake(167.5, 513)];
            [skyGradientColor setStroke];
            bezier43Path.lineWidth = 1;
            [bezier43Path stroke];
        }


        //// Group 24
        {
            //// Bezier 44 Drawing
            UIBezierPath* bezier44Path = [UIBezierPath bezierPath];
            [bezier44Path moveToPoint: CGPointMake(88.5, 398.5)];
            [bezier44Path addCurveToPoint: CGPointMake(88.5, 454.5) controlPoint1: CGPointMake(91.5, 478.5) controlPoint2: CGPointMake(88.5, 454.5)];
            [skyGradientColor setStroke];
            bezier44Path.lineWidth = 1;
            [bezier44Path stroke];


            //// Bezier 45 Drawing
            UIBezierPath* bezier45Path = [UIBezierPath bezierPath];
            [bezier45Path moveToPoint: CGPointMake(76, 339.5)];
            [bezier45Path addCurveToPoint: CGPointMake(76, 395.5) controlPoint1: CGPointMake(79, 419.5) controlPoint2: CGPointMake(76, 395.5)];
            [skyGradientColor setStroke];
            bezier45Path.lineWidth = 1;
            [bezier45Path stroke];


            //// Bezier 46 Drawing
            UIBezierPath* bezier46Path = [UIBezierPath bezierPath];
            [bezier46Path moveToPoint: CGPointMake(64, 376.5)];
            [bezier46Path addCurveToPoint: CGPointMake(64, 432.5) controlPoint1: CGPointMake(67, 456.5) controlPoint2: CGPointMake(64, 432.5)];
            [skyGradientColor setStroke];
            bezier46Path.lineWidth = 1;
            [bezier46Path stroke];
        }
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGGradientRelease(lightningGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas11
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* shadow2Color = [UIColor colorWithRed: 1 green: 0.799 blue: 0.229 alpha: 1];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* moonFrontShadowColor = [UIColor colorWithRed: 1 green: 0.985 blue: 0.815 alpha: 1];
    UIColor* nightSkySnowGradientColor = [UIColor colorWithRed: 0.156 green: 0.132 blue: 0.253 alpha: 1];
    UIColor* nightSkySnowGradientColor2 = [UIColor colorWithRed: 0.885 green: 0.885 blue: 0.885 alpha: 1];

    //// Gradient Declarations
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);
    CGFloat nightSkySnowGradientLocations[] = {0, 0.76, 1};
    CGGradientRef nightSkySnowGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)nightSkySnowGradientColor.CGColor, (id)[nightSkySnowGradientColor blendedColorWithFraction: 0.5 ofColor: nightSkySnowGradientColor2].CGColor, (id)nightSkySnowGradientColor2.CGColor], nightSkySnowGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];
    NSShadow* moonFrontShadow = [[NSShadow alloc] init];
    [moonFrontShadow setShadowColor: [moonFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(moonFrontShadowColor.CGColor) * 0.14]];
    [moonFrontShadow setShadowOffset: CGSizeMake(28.1, 36.1)];
    [moonFrontShadow setShadowBlurRadius: 37];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, nightSkySnowGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Star 29 Drawing
    UIBezierPath* star29Path = [UIBezierPath bezierPath];
    [star29Path moveToPoint: CGPointMake(98, 65.5)];
    [star29Path addLineToPoint: CGPointMake(100.12, 68.59)];
    [star29Path addLineToPoint: CGPointMake(103.71, 69.65)];
    [star29Path addLineToPoint: CGPointMake(101.42, 72.61)];
    [star29Path addLineToPoint: CGPointMake(101.53, 76.35)];
    [star29Path addLineToPoint: CGPointMake(98, 75.1)];
    [star29Path addLineToPoint: CGPointMake(94.47, 76.35)];
    [star29Path addLineToPoint: CGPointMake(94.58, 72.61)];
    [star29Path addLineToPoint: CGPointMake(92.29, 69.65)];
    [star29Path addLineToPoint: CGPointMake(95.88, 68.59)];
    [star29Path closePath];
    [color11 setFill];
    [star29Path fill];
    [shadow2Color setStroke];
    star29Path.lineWidth = 1;
    [star29Path stroke];


    //// Group 18
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(114, 58.5, 18, 13)];
        [color10 setFill];
        [oval133Path fill];
        [UIColor.blackColor setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(126.5, 54, 18, 12)];
        [color10 setFill];
        [oval137Path fill];
        [UIColor.blackColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 182 Drawing
        UIBezierPath* oval182Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(114, 52.5, 18, 12)];
        [color10 setFill];
        [oval182Path fill];
        [UIColor.blackColor setStroke];
        oval182Path.lineWidth = 1;
        [oval182Path stroke];


        //// Oval 183 Drawing
        UIBezierPath* oval183Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(97, 54, 19, 12)];
        [color10 setFill];
        [oval183Path fill];
        [UIColor.blackColor setStroke];
        oval183Path.lineWidth = 1;
        [oval183Path stroke];


        //// Oval 192 Drawing
        UIBezierPath* oval192Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(81, 61.5, 14, 9)];
        [color10 setFill];
        [oval192Path fill];
        [UIColor.blackColor setStroke];
        oval192Path.lineWidth = 1;
        [oval192Path stroke];


        //// Oval 193 Drawing
        UIBezierPath* oval193Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(87.5, 59, 17, 11)];
        [color10 setFill];
        [oval193Path fill];
        [UIColor.blackColor setStroke];
        oval193Path.lineWidth = 1;
        [oval193Path stroke];


        //// Oval 194 Drawing
        UIBezierPath* oval194Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(100.5, 58.5, 19, 12)];
        [color10 setFill];
        [oval194Path fill];
        [UIColor.blackColor setStroke];
        oval194Path.lineWidth = 1;
        [oval194Path stroke];


        //// Oval 195 Drawing
        UIBezierPath* oval195Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(132, 58.5, 19, 13)];
        [color10 setFill];
        [oval195Path fill];
        [UIColor.blackColor setStroke];
        oval195Path.lineWidth = 1;
        [oval195Path stroke];


        //// Oval 196 Drawing
        UIBezierPath* oval196Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(120.5, 57, 19, 10)];
        [color10 setFill];
        [oval196Path fill];
        [UIColor.blackColor setStroke];
        oval196Path.lineWidth = 1;
        [oval196Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Star 21 Drawing
    UIBezierPath* star21Path = [UIBezierPath bezierPath];
    [star21Path moveToPoint: CGPointMake(85, 32)];
    [star21Path addLineToPoint: CGPointMake(87.82, 36.12)];
    [star21Path addLineToPoint: CGPointMake(92.61, 37.53)];
    [star21Path addLineToPoint: CGPointMake(89.57, 41.48)];
    [star21Path addLineToPoint: CGPointMake(89.7, 46.47)];
    [star21Path addLineToPoint: CGPointMake(85, 44.8)];
    [star21Path addLineToPoint: CGPointMake(80.3, 46.47)];
    [star21Path addLineToPoint: CGPointMake(80.43, 41.48)];
    [star21Path addLineToPoint: CGPointMake(77.39, 37.53)];
    [star21Path addLineToPoint: CGPointMake(82.18, 36.12)];
    [star21Path closePath];
    [color11 setFill];
    [star21Path fill];
    [shadow2Color setStroke];
    star21Path.lineWidth = 1;
    [star21Path stroke];


    //// Star 23 Drawing
    UIBezierPath* star23Path = [UIBezierPath bezierPath];
    [star23Path moveToPoint: CGPointMake(129.5, 51.5)];
    [star23Path addLineToPoint: CGPointMake(131.97, 55.1)];
    [star23Path addLineToPoint: CGPointMake(136.16, 56.34)];
    [star23Path addLineToPoint: CGPointMake(133.49, 59.8)];
    [star23Path addLineToPoint: CGPointMake(133.61, 64.16)];
    [star23Path addLineToPoint: CGPointMake(129.5, 62.7)];
    [star23Path addLineToPoint: CGPointMake(125.39, 64.16)];
    [star23Path addLineToPoint: CGPointMake(125.51, 59.8)];
    [star23Path addLineToPoint: CGPointMake(122.84, 56.34)];
    [star23Path addLineToPoint: CGPointMake(127.03, 55.1)];
    [star23Path closePath];
    [color11 setFill];
    [star23Path fill];
    [shadow2Color setStroke];
    star23Path.lineWidth = 1;
    [star23Path stroke];


    //// Star 24 Drawing
    UIBezierPath* star24Path = [UIBezierPath bezierPath];
    [star24Path moveToPoint: CGPointMake(129.5, 10.5)];
    [star24Path addLineToPoint: CGPointMake(132.32, 14.62)];
    [star24Path addLineToPoint: CGPointMake(137.11, 16.03)];
    [star24Path addLineToPoint: CGPointMake(134.07, 19.98)];
    [star24Path addLineToPoint: CGPointMake(134.2, 24.97)];
    [star24Path addLineToPoint: CGPointMake(129.5, 23.3)];
    [star24Path addLineToPoint: CGPointMake(124.8, 24.97)];
    [star24Path addLineToPoint: CGPointMake(124.93, 19.98)];
    [star24Path addLineToPoint: CGPointMake(121.89, 16.03)];
    [star24Path addLineToPoint: CGPointMake(126.68, 14.62)];
    [star24Path closePath];
    [color11 setFill];
    [star24Path fill];
    [shadow2Color setStroke];
    star24Path.lineWidth = 1;
    [star24Path stroke];


    //// Star 25 Drawing
    UIBezierPath* star25Path = [UIBezierPath bezierPath];
    [star25Path moveToPoint: CGPointMake(170.5, 13.5)];
    [star25Path addLineToPoint: CGPointMake(172.26, 16.07)];
    [star25Path addLineToPoint: CGPointMake(175.26, 16.95)];
    [star25Path addLineToPoint: CGPointMake(173.35, 19.43)];
    [star25Path addLineToPoint: CGPointMake(173.44, 22.55)];
    [star25Path addLineToPoint: CGPointMake(170.5, 21.5)];
    [star25Path addLineToPoint: CGPointMake(167.56, 22.55)];
    [star25Path addLineToPoint: CGPointMake(167.65, 19.43)];
    [star25Path addLineToPoint: CGPointMake(165.74, 16.95)];
    [star25Path addLineToPoint: CGPointMake(168.74, 16.07)];
    [star25Path closePath];
    [color11 setFill];
    [star25Path fill];
    [shadow2Color setStroke];
    star25Path.lineWidth = 1;
    [star25Path stroke];


    //// Star 26 Drawing
    UIBezierPath* star26Path = [UIBezierPath bezierPath];
    [star26Path moveToPoint: CGPointMake(183, 58)];
    [star26Path addLineToPoint: CGPointMake(186.88, 63.66)];
    [star26Path addLineToPoint: CGPointMake(193.46, 65.6)];
    [star26Path addLineToPoint: CGPointMake(189.28, 71.04)];
    [star26Path addLineToPoint: CGPointMake(189.47, 77.9)];
    [star26Path addLineToPoint: CGPointMake(183, 75.6)];
    [star26Path addLineToPoint: CGPointMake(176.53, 77.9)];
    [star26Path addLineToPoint: CGPointMake(176.72, 71.04)];
    [star26Path addLineToPoint: CGPointMake(172.54, 65.6)];
    [star26Path addLineToPoint: CGPointMake(179.12, 63.66)];
    [star26Path closePath];
    [color11 setFill];
    [star26Path fill];
    [shadow2Color setStroke];
    star26Path.lineWidth = 1;
    [star26Path stroke];


    //// Star 27 Drawing
    UIBezierPath* star27Path = [UIBezierPath bezierPath];
    [star27Path moveToPoint: CGPointMake(129.5, 92.5)];
    [star27Path addLineToPoint: CGPointMake(132.67, 97.13)];
    [star27Path addLineToPoint: CGPointMake(138.06, 98.72)];
    [star27Path addLineToPoint: CGPointMake(134.64, 103.17)];
    [star27Path addLineToPoint: CGPointMake(134.79, 108.78)];
    [star27Path addLineToPoint: CGPointMake(129.5, 106.9)];
    [star27Path addLineToPoint: CGPointMake(124.21, 108.78)];
    [star27Path addLineToPoint: CGPointMake(124.36, 103.17)];
    [star27Path addLineToPoint: CGPointMake(120.94, 98.72)];
    [star27Path addLineToPoint: CGPointMake(126.33, 97.13)];
    [star27Path closePath];
    [color11 setFill];
    [star27Path fill];
    [shadow2Color setStroke];
    star27Path.lineWidth = 1;
    [star27Path stroke];


    //// Star 28 Drawing
    UIBezierPath* star28Path = [UIBezierPath bezierPath];
    [star28Path moveToPoint: CGPointMake(54, 5)];
    [star28Path addLineToPoint: CGPointMake(57.17, 9.63)];
    [star28Path addLineToPoint: CGPointMake(62.56, 11.22)];
    [star28Path addLineToPoint: CGPointMake(59.14, 15.67)];
    [star28Path addLineToPoint: CGPointMake(59.29, 21.28)];
    [star28Path addLineToPoint: CGPointMake(54, 19.4)];
    [star28Path addLineToPoint: CGPointMake(48.71, 21.28)];
    [star28Path addLineToPoint: CGPointMake(48.86, 15.67)];
    [star28Path addLineToPoint: CGPointMake(45.44, 11.22)];
    [star28Path addLineToPoint: CGPointMake(50.83, 9.63)];
    [star28Path closePath];
    [color11 setFill];
    [star28Path fill];
    [shadow2Color setStroke];
    star28Path.lineWidth = 1;
    [star28Path stroke];


    //// Star 30 Drawing
    UIBezierPath* star30Path = [UIBezierPath bezierPath];
    [star30Path moveToPoint: CGPointMake(48.5, 77)];
    [star30Path addLineToPoint: CGPointMake(51.67, 81.63)];
    [star30Path addLineToPoint: CGPointMake(57.06, 83.22)];
    [star30Path addLineToPoint: CGPointMake(53.64, 87.67)];
    [star30Path addLineToPoint: CGPointMake(53.79, 93.28)];
    [star30Path addLineToPoint: CGPointMake(48.5, 91.4)];
    [star30Path addLineToPoint: CGPointMake(43.21, 93.28)];
    [star30Path addLineToPoint: CGPointMake(43.36, 87.67)];
    [star30Path addLineToPoint: CGPointMake(39.94, 83.22)];
    [star30Path addLineToPoint: CGPointMake(45.33, 81.63)];
    [star30Path closePath];
    [color11 setFill];
    [star30Path fill];
    [shadow2Color setStroke];
    star30Path.lineWidth = 1;
    [star30Path stroke];


    //// Star 31 Drawing
    UIBezierPath* star31Path = [UIBezierPath bezierPath];
    [star31Path moveToPoint: CGPointMake(209, 127)];
    [star31Path addLineToPoint: CGPointMake(212.88, 132.66)];
    [star31Path addLineToPoint: CGPointMake(219.46, 134.6)];
    [star31Path addLineToPoint: CGPointMake(215.28, 140.04)];
    [star31Path addLineToPoint: CGPointMake(215.47, 146.9)];
    [star31Path addLineToPoint: CGPointMake(209, 144.6)];
    [star31Path addLineToPoint: CGPointMake(202.53, 146.9)];
    [star31Path addLineToPoint: CGPointMake(202.72, 140.04)];
    [star31Path addLineToPoint: CGPointMake(198.54, 134.6)];
    [star31Path addLineToPoint: CGPointMake(205.12, 132.66)];
    [star31Path closePath];
    [color11 setFill];
    [star31Path fill];
    [shadow2Color setStroke];
    star31Path.lineWidth = 1;
    [star31Path stroke];


    //// Star 32 Drawing
    UIBezierPath* star32Path = [UIBezierPath bezierPath];
    [star32Path moveToPoint: CGPointMake(75, 140)];
    [star32Path addLineToPoint: CGPointMake(79.58, 146.69)];
    [star32Path addLineToPoint: CGPointMake(87.36, 148.98)];
    [star32Path addLineToPoint: CGPointMake(82.42, 155.41)];
    [star32Path addLineToPoint: CGPointMake(82.64, 163.52)];
    [star32Path addLineToPoint: CGPointMake(75, 160.8)];
    [star32Path addLineToPoint: CGPointMake(67.36, 163.52)];
    [star32Path addLineToPoint: CGPointMake(67.58, 155.41)];
    [star32Path addLineToPoint: CGPointMake(62.64, 148.98)];
    [star32Path addLineToPoint: CGPointMake(70.42, 146.69)];
    [star32Path closePath];
    [color11 setFill];
    [star32Path fill];
    [shadow2Color setStroke];
    star32Path.lineWidth = 1;
    [star32Path stroke];


    //// Star 33 Drawing
    UIBezierPath* star33Path = [UIBezierPath bezierPath];
    [star33Path moveToPoint: CGPointMake(107, 59)];
    [star33Path addLineToPoint: CGPointMake(108.06, 60.54)];
    [star33Path addLineToPoint: CGPointMake(109.85, 61.07)];
    [star33Path addLineToPoint: CGPointMake(108.71, 62.56)];
    [star33Path addLineToPoint: CGPointMake(108.76, 64.43)];
    [star33Path addLineToPoint: CGPointMake(107, 63.8)];
    [star33Path addLineToPoint: CGPointMake(105.24, 64.43)];
    [star33Path addLineToPoint: CGPointMake(105.29, 62.56)];
    [star33Path addLineToPoint: CGPointMake(104.15, 61.07)];
    [star33Path addLineToPoint: CGPointMake(105.94, 60.54)];
    [star33Path closePath];
    [color11 setFill];
    [star33Path fill];
    [shadow2Color setStroke];
    star33Path.lineWidth = 1;
    [star33Path stroke];


    //// Star 34 Drawing
    UIBezierPath* star34Path = [UIBezierPath bezierPath];
    [star34Path moveToPoint: CGPointMake(116, 53)];
    [star34Path addLineToPoint: CGPointMake(117.06, 54.54)];
    [star34Path addLineToPoint: CGPointMake(118.85, 55.07)];
    [star34Path addLineToPoint: CGPointMake(117.71, 56.56)];
    [star34Path addLineToPoint: CGPointMake(117.76, 58.43)];
    [star34Path addLineToPoint: CGPointMake(116, 57.8)];
    [star34Path addLineToPoint: CGPointMake(114.24, 58.43)];
    [star34Path addLineToPoint: CGPointMake(114.29, 56.56)];
    [star34Path addLineToPoint: CGPointMake(113.15, 55.07)];
    [star34Path addLineToPoint: CGPointMake(114.94, 54.54)];
    [star34Path closePath];
    [color11 setFill];
    [star34Path fill];
    [shadow2Color setStroke];
    star34Path.lineWidth = 1;
    [star34Path stroke];


    //// Star Drawing
    UIBezierPath* starPath = [UIBezierPath bezierPath];
    [starPath moveToPoint: CGPointMake(229.5, 16.5)];
    [starPath addLineToPoint: CGPointMake(234.44, 23.7)];
    [starPath addLineToPoint: CGPointMake(242.81, 26.17)];
    [starPath addLineToPoint: CGPointMake(237.49, 33.1)];
    [starPath addLineToPoint: CGPointMake(237.73, 41.83)];
    [starPath addLineToPoint: CGPointMake(229.5, 38.9)];
    [starPath addLineToPoint: CGPointMake(221.27, 41.83)];
    [starPath addLineToPoint: CGPointMake(221.51, 33.1)];
    [starPath addLineToPoint: CGPointMake(216.19, 26.17)];
    [starPath addLineToPoint: CGPointMake(224.56, 23.7)];
    [starPath closePath];
    [color11 setFill];
    [starPath fill];
    [shadow2Color setStroke];
    starPath.lineWidth = 1;
    [starPath stroke];


    //// Group
    {
        //// Star 2 Drawing
        UIBezierPath* star2Path = [UIBezierPath bezierPath];
        [star2Path moveToPoint: CGPointMake(369.5, 72)];
        [star2Path addLineToPoint: CGPointMake(372.32, 76.12)];
        [star2Path addLineToPoint: CGPointMake(377.11, 77.53)];
        [star2Path addLineToPoint: CGPointMake(374.07, 81.48)];
        [star2Path addLineToPoint: CGPointMake(374.2, 86.47)];
        [star2Path addLineToPoint: CGPointMake(369.5, 84.8)];
        [star2Path addLineToPoint: CGPointMake(364.8, 86.47)];
        [star2Path addLineToPoint: CGPointMake(364.93, 81.48)];
        [star2Path addLineToPoint: CGPointMake(361.89, 77.53)];
        [star2Path addLineToPoint: CGPointMake(366.68, 76.12)];
        [star2Path closePath];
        [color11 setFill];
        [star2Path fill];
        [shadow2Color setStroke];
        star2Path.lineWidth = 1;
        [star2Path stroke];


        //// Star 3 Drawing
        UIBezierPath* star3Path = [UIBezierPath bezierPath];
        [star3Path moveToPoint: CGPointMake(349.5, 9)];
        [star3Path addLineToPoint: CGPointMake(352.67, 13.63)];
        [star3Path addLineToPoint: CGPointMake(358.06, 15.22)];
        [star3Path addLineToPoint: CGPointMake(354.64, 19.67)];
        [star3Path addLineToPoint: CGPointMake(354.79, 25.28)];
        [star3Path addLineToPoint: CGPointMake(349.5, 23.4)];
        [star3Path addLineToPoint: CGPointMake(344.21, 25.28)];
        [star3Path addLineToPoint: CGPointMake(344.36, 19.67)];
        [star3Path addLineToPoint: CGPointMake(340.94, 15.22)];
        [star3Path addLineToPoint: CGPointMake(346.33, 13.63)];
        [star3Path closePath];
        [color11 setFill];
        [star3Path fill];
        [shadow2Color setStroke];
        star3Path.lineWidth = 1;
        [star3Path stroke];


        //// Star 4 Drawing
        UIBezierPath* star4Path = [UIBezierPath bezierPath];
        [star4Path moveToPoint: CGPointMake(405, 10.5)];
        [star4Path addLineToPoint: CGPointMake(407.82, 14.62)];
        [star4Path addLineToPoint: CGPointMake(412.61, 16.03)];
        [star4Path addLineToPoint: CGPointMake(409.57, 19.98)];
        [star4Path addLineToPoint: CGPointMake(409.7, 24.97)];
        [star4Path addLineToPoint: CGPointMake(405, 23.3)];
        [star4Path addLineToPoint: CGPointMake(400.3, 24.97)];
        [star4Path addLineToPoint: CGPointMake(400.43, 19.98)];
        [star4Path addLineToPoint: CGPointMake(397.39, 16.03)];
        [star4Path addLineToPoint: CGPointMake(402.18, 14.62)];
        [star4Path closePath];
        [color11 setFill];
        [star4Path fill];
        [shadow2Color setStroke];
        star4Path.lineWidth = 1;
        [star4Path stroke];


        //// Star 5 Drawing
        UIBezierPath* star5Path = [UIBezierPath bezierPath];
        [star5Path moveToPoint: CGPointMake(383.5, 42)];
        [star5Path addLineToPoint: CGPointMake(385.26, 44.57)];
        [star5Path addLineToPoint: CGPointMake(388.26, 45.45)];
        [star5Path addLineToPoint: CGPointMake(386.35, 47.93)];
        [star5Path addLineToPoint: CGPointMake(386.44, 51.05)];
        [star5Path addLineToPoint: CGPointMake(383.5, 50)];
        [star5Path addLineToPoint: CGPointMake(380.56, 51.05)];
        [star5Path addLineToPoint: CGPointMake(380.65, 47.93)];
        [star5Path addLineToPoint: CGPointMake(378.74, 45.45)];
        [star5Path addLineToPoint: CGPointMake(381.74, 44.57)];
        [star5Path closePath];
        [color11 setFill];
        [star5Path fill];
        [shadow2Color setStroke];
        star5Path.lineWidth = 1;
        [star5Path stroke];


        //// Star 6 Drawing
        UIBezierPath* star6Path = [UIBezierPath bezierPath];
        [star6Path moveToPoint: CGPointMake(405, 99.5)];
        [star6Path addLineToPoint: CGPointMake(409.94, 106.7)];
        [star6Path addLineToPoint: CGPointMake(418.31, 109.17)];
        [star6Path addLineToPoint: CGPointMake(412.99, 116.1)];
        [star6Path addLineToPoint: CGPointMake(413.23, 124.83)];
        [star6Path addLineToPoint: CGPointMake(405, 121.9)];
        [star6Path addLineToPoint: CGPointMake(396.77, 124.83)];
        [star6Path addLineToPoint: CGPointMake(397.01, 116.1)];
        [star6Path addLineToPoint: CGPointMake(391.69, 109.17)];
        [star6Path addLineToPoint: CGPointMake(400.06, 106.7)];
        [star6Path closePath];
        [color11 setFill];
        [star6Path fill];
        [shadow2Color setStroke];
        star6Path.lineWidth = 1;
        [star6Path stroke];


        //// Star 7 Drawing
        UIBezierPath* star7Path = [UIBezierPath bezierPath];
        [star7Path moveToPoint: CGPointMake(353.5, 150)];
        [star7Path addLineToPoint: CGPointMake(357.73, 156.18)];
        [star7Path addLineToPoint: CGPointMake(364.91, 158.29)];
        [star7Path addLineToPoint: CGPointMake(360.35, 164.22)];
        [star7Path addLineToPoint: CGPointMake(360.55, 171.71)];
        [star7Path addLineToPoint: CGPointMake(353.5, 169.2)];
        [star7Path addLineToPoint: CGPointMake(346.45, 171.71)];
        [star7Path addLineToPoint: CGPointMake(346.65, 164.22)];
        [star7Path addLineToPoint: CGPointMake(342.09, 158.29)];
        [star7Path addLineToPoint: CGPointMake(349.27, 156.18)];
        [star7Path closePath];
        [color11 setFill];
        [star7Path fill];
        [shadow2Color setStroke];
        star7Path.lineWidth = 1;
        [star7Path stroke];
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(244.5, 23, 133, 135)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(311, 23), CGPointMake(311, 158), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309, 63.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296, 60.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296.5, 67.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(292, 56.5)];
        [oval58Path addCurveToPoint: CGPointMake(288.15, 74.03) controlPoint1: CGPointMake(293.89, 59.43) controlPoint2: CGPointMake(290.33, 66.89)];
        [oval58Path addCurveToPoint: CGPointMake(292, 89.5) controlPoint1: CGPointMake(286.03, 80.97) controlPoint2: CGPointMake(285.22, 87.62)];
        [oval58Path addCurveToPoint: CGPointMake(280, 118.5) controlPoint1: CGPointMake(307.41, 93.78) controlPoint2: CGPointMake(280, 107.66)];
        [oval58Path addCurveToPoint: CGPointMake(310.5, 157.5) controlPoint1: CGPointMake(280, 155.78) controlPoint2: CGPointMake(347.78, 157.5)];
        [oval58Path addCurveToPoint: CGPointMake(243, 90) controlPoint1: CGPointMake(273.22, 157.5) controlPoint2: CGPointMake(243, 127.28)];
        [oval58Path addCurveToPoint: CGPointMake(310.5, 22.5) controlPoint1: CGPointMake(243, 52.72) controlPoint2: CGPointMake(273.22, 22.5)];
        [oval58Path addCurveToPoint: CGPointMake(292, 56.5) controlPoint1: CGPointMake(327.25, 22.5) controlPoint2: CGPointMake(285.54, 46.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(282.35, 22.5), CGPointMake(282.35, 157.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 270.95, 65.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 284.06, 72.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 64.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(283, 67, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(278.5, 125)];
        [bezier21Path addCurveToPoint: CGPointMake(278.51, 119.11) controlPoint1: CGPointMake(282.37, 122.51) controlPoint2: CGPointMake(280.64, 117.5)];
        [bezier21Path addCurveToPoint: CGPointMake(260, 112) controlPoint1: CGPointMake(273.35, 123.02) controlPoint2: CGPointMake(260, 112)];
        [bezier21Path addCurveToPoint: CGPointMake(278.5, 125) controlPoint1: CGPointMake(260, 112) controlPoint2: CGPointMake(272.98, 128.55)];
        [bezier21Path closePath];
        [UIColor.whiteColor setFill];
        [bezier21Path fill];
        [color setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];


        //// Bezier 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 310.6, 118.87);
        CGContextRotateCTM(context, -9.13 * M_PI / 180);

        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(-14.49, -6.25)];
        [bezier22Path addCurveToPoint: CGPointMake(18.65, -6.25) controlPoint1: CGPointMake(-1.66, 10.32) controlPoint2: CGPointMake(18.65, -6.25)];
        [bezier22Path addLineToPoint: CGPointMake(1.69, 11.16)];
        [bezier22Path addLineToPoint: CGPointMake(-6.34, 7.76)];
        [bezier22Path addCurveToPoint: CGPointMake(-14.49, -6.25) controlPoint1: CGPointMake(-6.34, 7.76) controlPoint2: CGPointMake(-27.32, -22.81)];
        [bezier22Path closePath];
        [color2 setFill];
        [bezier22Path fill];
        [UIColor.blackColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309.5, 69.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 14
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 152 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 293, 44.07);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13, 10)];
        [color3 setFill];
        [oval152Path fill];
        [UIColor.blackColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];

        CGContextRestoreGState(context);


        //// Oval 153 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 377.6, 31.68);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval153Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 15.68)];
        [color3 setFill];
        [oval153Path fill];
        [UIColor.blackColor setStroke];
        oval153Path.lineWidth = 1;
        [oval153Path stroke];

        CGContextRestoreGState(context);


        //// Oval 154 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 301.53, 38.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval154Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 12.8)];
        [color3 setFill];
        [oval154Path fill];
        [UIColor.blackColor setStroke];
        oval154Path.lineWidth = 1;
        [oval154Path stroke];

        CGContextRestoreGState(context);


        //// Oval 155 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 322.61, 36.99);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval155Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 14)];
        [color3 setFill];
        [oval155Path fill];
        [UIColor.blackColor setStroke];
        oval155Path.lineWidth = 1;
        [oval155Path stroke];

        CGContextRestoreGState(context);


        //// Oval 156 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 323.61, 48.97);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval156Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval156Path fill];
        [UIColor.blackColor setStroke];
        oval156Path.lineWidth = 1;
        [oval156Path stroke];

        CGContextRestoreGState(context);


        //// Oval 157 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 392.36, 34.79);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval157Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 17.46)];
        [color3 setFill];
        [oval157Path fill];
        [UIColor.blackColor setStroke];
        oval157Path.lineWidth = 1;
        [oval157Path stroke];

        CGContextRestoreGState(context);


        //// Oval 158 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 366.1, 34.18);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval158Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 15.68)];
        [color3 setFill];
        [oval158Path fill];
        [UIColor.blackColor setStroke];
        oval158Path.lineWidth = 1;
        [oval158Path stroke];

        CGContextRestoreGState(context);


        //// Oval 159 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 376.25, 43.22);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval159Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21, 19)];
        [color3 setFill];
        [oval159Path fill];
        [UIColor.blackColor setStroke];
        oval159Path.lineWidth = 1;
        [oval159Path stroke];

        CGContextRestoreGState(context);


        //// Oval 160 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 399.3, 37.68);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval160Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16.44)];
        [color3 setFill];
        [oval160Path fill];
        [UIColor.blackColor setStroke];
        oval160Path.lineWidth = 1;
        [oval160Path stroke];

        CGContextRestoreGState(context);


        //// Oval 161 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 405.28, 41.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval161Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 18)];
        [color3 setFill];
        [oval161Path fill];
        [UIColor.blackColor setStroke];
        oval161Path.lineWidth = 1;
        [oval161Path stroke];

        CGContextRestoreGState(context);


        //// Oval 162 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 351.17, 35.64);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval162Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17, 14)];
        [color3 setFill];
        [oval162Path fill];
        [UIColor.blackColor setStroke];
        oval162Path.lineWidth = 1;
        [oval162Path stroke];

        CGContextRestoreGState(context);


        //// Oval 163 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 336.72, 37.36);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval163Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval163Path fill];
        [UIColor.blackColor setStroke];
        oval163Path.lineWidth = 1;
        [oval163Path stroke];

        CGContextRestoreGState(context);


        //// Oval 164 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 312.5, 41.58);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval164Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval164Path fill];
        [UIColor.blackColor setStroke];
        oval164Path.lineWidth = 1;
        [oval164Path stroke];

        CGContextRestoreGState(context);


        //// Oval 165 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 335.75, 45.63);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval165Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18, 14.41)];
        [color3 setFill];
        [oval165Path fill];
        [UIColor.blackColor setStroke];
        oval165Path.lineWidth = 1;
        [oval165Path stroke];

        CGContextRestoreGState(context);


        //// Oval 166 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 302, 48.07);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval166Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13, 10)];
        [color3 setFill];
        [oval166Path fill];
        [UIColor.blackColor setStroke];
        oval166Path.lineWidth = 1;
        [oval166Path stroke];

        CGContextRestoreGState(context);


        //// Oval 167 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 312.5, 48.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval167Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15, 12)];
        [color3 setFill];
        [oval167Path fill];
        [UIColor.blackColor setStroke];
        oval167Path.lineWidth = 1;
        [oval167Path stroke];

        CGContextRestoreGState(context);


        //// Oval 168 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 350.95, 42.21);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval168Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 18)];
        [color3 setFill];
        [oval168Path fill];
        [UIColor.blackColor setStroke];
        oval168Path.lineWidth = 1;
        [oval168Path stroke];

        CGContextRestoreGState(context);


        //// Oval 169 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 366.61, 46.89);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval169Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16, 16)];
        [color3 setFill];
        [oval169Path fill];
        [UIColor.blackColor setStroke];
        oval169Path.lineWidth = 1;
        [oval169Path stroke];

        CGContextRestoreGState(context);


        //// Oval 170 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 390.56, 45.04);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval170Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19, 18)];
        [color3 setFill];
        [oval170Path fill];
        [UIColor.blackColor setStroke];
        oval170Path.lineWidth = 1;
        [oval170Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 4 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 134.09, 145.82);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.64, 10.67)];
        [color3 setFill];
        [oval4Path fill];
        [UIColor.blackColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];

        CGContextRestoreGState(context);


        //// Oval 5 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 229.91, 132.53);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.39, 16.74)];
        [color3 setFill];
        [oval5Path fill];
        [UIColor.blackColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];

        CGContextRestoreGState(context);


        //// Oval 7 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 143.77, 140.28);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.14, 13.66)];
        [color3 setFill];
        [oval7Path fill];
        [UIColor.blackColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];

        CGContextRestoreGState(context);


        //// Oval 8 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.64, 138.23);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.14, 14.95)];
        [color3 setFill];
        [oval8Path fill];
        [UIColor.blackColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];

        CGContextRestoreGState(context);


        //// Oval 9 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.76, 151.1);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.89, 12.81)];
        [color3 setFill];
        [oval9Path fill];
        [UIColor.blackColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];

        CGContextRestoreGState(context);


        //// Oval 10 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 246.62, 135.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.11, 18.68)];
        [color3 setFill];
        [oval10Path fill];
        [UIColor.blackColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];

        CGContextRestoreGState(context);


        //// Oval 11 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 216.89, 135.22);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.39, 16.74)];
        [color3 setFill];
        [oval11Path fill];
        [UIColor.blackColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];

        CGContextRestoreGState(context);


        //// Oval 12 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 228.39, 144.95);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.63, 20.3)];
        [color3 setFill];
        [oval12Path fill];
        [UIColor.blackColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];

        CGContextRestoreGState(context);


        //// Oval 13 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 254.47, 138.96);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.99, 17.58)];
        [color3 setFill];
        [oval13Path fill];
        [UIColor.blackColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];

        CGContextRestoreGState(context);


        //// Oval 14 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 261.25, 143.37);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.11, 19.25)];
        [color3 setFill];
        [oval14Path fill];
        [UIColor.blackColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];

        CGContextRestoreGState(context);


        //// Oval 15 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 199.97, 136.78);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.14, 14.95)];
        [color3 setFill];
        [oval15Path fill];
        [UIColor.blackColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];

        CGContextRestoreGState(context);


        //// Oval 16 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.6, 138.62);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.89, 12.81)];
        [color3 setFill];
        [oval16Path fill];
        [UIColor.blackColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];

        CGContextRestoreGState(context);


        //// Oval 17 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.18, 143.16);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.89, 12.81)];
        [color3 setFill];
        [oval17Path fill];
        [UIColor.blackColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];

        CGContextRestoreGState(context);


        //// Oval 18 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 182.51, 147.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.26, 15.38)];
        [color3 setFill];
        [oval18Path fill];
        [UIColor.blackColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];

        CGContextRestoreGState(context);


        //// Oval 19 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 144.28, 150.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.64, 10.67)];
        [color3 setFill];
        [oval19Path fill];
        [UIColor.blackColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];

        CGContextRestoreGState(context);


        //// Oval 20 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 156.18, 150.15);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.89, 12.81)];
        [color3 setFill];
        [oval20Path fill];
        [UIColor.blackColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];

        CGContextRestoreGState(context);


        //// Oval 21 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 199.75, 143.85);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.37, 19.24)];
        [color3 setFill];
        [oval21Path fill];
        [UIColor.blackColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];

        CGContextRestoreGState(context);


        //// Oval 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 217.46, 148.87);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.99, 17.11)];
        [color3 setFill];
        [oval22Path fill];
        [UIColor.blackColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 23 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 244.59, 146.9);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 21.37, 19.24)];
        [color3 setFill];
        [oval23Path fill];
        [UIColor.blackColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 24 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 229.6, 111.18);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.44, 16.37)];
        [color3 setFill];
        [oval24Path fill];
        [UIColor.blackColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];

        CGContextRestoreGState(context);


        //// Oval 25 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 243.09, 117.4);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.37, 18.23)];
        [color3 setFill];
        [oval25Path fill];
        [UIColor.blackColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];

        CGContextRestoreGState(context);


        //// Oval 26 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 215.79, 117.06);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.47, 16.36)];
        [color3 setFill];
        [oval26Path fill];
        [UIColor.blackColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];

        CGContextRestoreGState(context);


        //// Oval 27 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 183.96, 125.52);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.42, 17.29)];
        [color3 setFill];
        [oval27Path fill];
        [UIColor.blackColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];

        CGContextRestoreGState(context);


        //// Oval 28 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 200.32, 126.59);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.47, 16.36)];
        [color3 setFill];
        [oval28Path fill];
        [UIColor.blackColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];

        CGContextRestoreGState(context);


        //// Oval 29 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 216.58, 130.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.39, 14.55)];
        [color3 setFill];
        [oval29Path fill];
        [UIColor.blackColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];

        CGContextRestoreGState(context);


        //// Oval 30 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 225.52, 126.76);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.59, 19.07)];
        [color3 setFill];
        [oval30Path fill];
        [UIColor.blackColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];

        CGContextRestoreGState(context);


        //// Oval 31 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 241.51, 129.19);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.47, 16.36)];
        [color3 setFill];
        [oval31Path fill];
        [UIColor.blackColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];

        CGContextRestoreGState(context);


        //// Oval 32 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 253.38, 120.01);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.35, 17.32)];
        [color3 setFill];
        [oval32Path fill];
        [UIColor.blackColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];

        CGContextRestoreGState(context);


        //// Oval 33 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 256.81, 126.16);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.4, 16.38)];
        [color3 setFill];
        [oval33Path fill];
        [UIColor.blackColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];

        CGContextRestoreGState(context);


        //// Oval 34 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 199.37, 119.73);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.5, 14.51)];
        [color3 setFill];
        [oval34Path fill];
        [UIColor.blackColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(384.5, 124.5, 19, 16)];
        [color10 setFill];
        [oval140Path fill];
        [UIColor.blackColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(389.5, 130.5, 23, 21)];
        [color10 setFill];
        [oval141Path fill];
        [UIColor.blackColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(403.5, 140.5, 18, 17)];
        [color10 setFill];
        [oval142Path fill];
        [UIColor.blackColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(366.5, 125.5, 21, 20)];
        [color10 setFill];
        [oval143Path fill];
        [UIColor.blackColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 138.5, 22, 21)];
        [color10 setFill];
        [oval144Path fill];
        [UIColor.blackColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(333, 130, 22, 21)];
        [color10 setFill];
        [oval145Path fill];
        [UIColor.blackColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348.5, 127.5, 22, 19)];
        [color10 setFill];
        [oval146Path fill];
        [UIColor.blackColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(370.5, 136.5, 24, 21)];
        [color10 setFill];
        [oval147Path fill];
        [UIColor.blackColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327.5, 139.5, 20, 20)];
        [color10 setFill];
        [oval148Path fill];
        [UIColor.blackColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(341, 134, 21, 18)];
        [color10 setFill];
        [oval149Path fill];
        [UIColor.blackColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(383.5, 140.5, 22, 20)];
        [color10 setFill];
        [oval150Path fill];
        [UIColor.blackColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360.5, 139.5, 20, 15)];
        [color10 setFill];
        [oval151Path fill];
        [UIColor.blackColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 75 Drawing
        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46, 135, 19, 16)];
        [color10 setFill];
        [oval75Path fill];
        [UIColor.blackColor setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(51, 141, 23, 21)];
        [color10 setFill];
        [oval78Path fill];
        [UIColor.blackColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(65, 151, 18, 17)];
        [color10 setFill];
        [oval86Path fill];
        [UIColor.blackColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(28, 136, 21, 20)];
        [color10 setFill];
        [oval87Path fill];
        [UIColor.blackColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(10, 149, 22, 21)];
        [color10 setFill];
        [oval88Path fill];
        [UIColor.blackColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.5, 140.5, 22, 21)];
        [color10 setFill];
        [oval89Path fill];
        [UIColor.blackColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 90 Drawing
        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(10, 138, 22, 19)];
        [color10 setFill];
        [oval90Path fill];
        [UIColor.blackColor setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];


        //// Oval 91 Drawing
        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(32, 147, 24, 21)];
        [color10 setFill];
        [oval91Path fill];
        [UIColor.blackColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-11, 150, 20, 20)];
        [color10 setFill];
        [oval92Path fill];
        [UIColor.blackColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(2.5, 144.5, 21, 18)];
        [color10 setFill];
        [oval93Path fill];
        [UIColor.blackColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 151, 22, 20)];
        [color10 setFill];
        [oval94Path fill];
        [UIColor.blackColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22, 150, 20, 15)];
        [color10 setFill];
        [oval95Path fill];
        [UIColor.blackColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50, 106.5, 25, 19)];
        [color10 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(25.5, 109, 26, 19)];
        [color10 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(11.5, 113.5, 21, 18)];
        [color10 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0.5, 117.5, 23, 21)];
        [color10 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(65.5, 115.5, 24, 24)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(84, 103, 27, 27)];
        [color10 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(38.5, 115.5, 26, 19)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(93.5, 117.5, 23, 22)];
        [color10 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76, 110, 23, 20)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22.5, 118.5, 24, 22)];
        [color10 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(51.5, 115.5, 25, 19)];
        [color10 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 96 Drawing
        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(333.5, 143, 19, 18)];
        [color10 setFill];
        [oval96Path fill];
        [UIColor.blackColor setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];


        //// Oval 97 Drawing
        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(347, 136.5, 19, 17)];
        [color10 setFill];
        [oval97Path fill];
        [UIColor.blackColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(333.5, 135, 19, 16)];
        [color10 setFill];
        [oval98Path fill];
        [UIColor.blackColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(315.5, 137.5, 20, 16)];
        [color10 setFill];
        [oval99Path fill];
        [UIColor.blackColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(298.5, 147, 15, 13)];
        [color10 setFill];
        [oval100Path fill];
        [UIColor.blackColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(305, 143.5, 18, 16)];
        [color10 setFill];
        [oval101Path fill];
        [UIColor.blackColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(319, 143, 20, 16)];
        [color10 setFill];
        [oval102Path fill];
        [UIColor.blackColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(352.5, 143, 20, 18)];
        [color10 setFill];
        [oval103Path fill];
        [UIColor.blackColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(340, 140.5, 20, 14)];
        [color10 setFill];
        [oval104Path fill];
        [UIColor.blackColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 120, 19, 19)];
        [color10 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(375.5, 112.5, 19, 18)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 111, 19, 17)];
        [color10 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(344, 113.5, 20, 17)];
        [color10 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327, 124, 15, 14)];
        [color10 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(333.5, 120.5, 18, 17)];
        [color10 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(347.5, 120, 20, 17)];
        [color10 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381, 120, 20, 19)];
        [color10 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(368.5, 116.5, 20, 15)];
        [color10 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 16
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(153, 59, 20, 16)];
        [color10 setFill];
        [oval123Path fill];
        [UIColor.blackColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(166.5, 53.5, 20, 15)];
        [color10 setFill];
        [oval124Path fill];
        [UIColor.blackColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(153, 52, 20, 15)];
        [color10 setFill];
        [oval125Path fill];
        [UIColor.blackColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(135, 53.5, 21, 15)];
        [color10 setFill];
        [oval126Path fill];
        [UIColor.blackColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        //// Oval 127 Drawing
        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(118, 63, 15, 11)];
        [color10 setFill];
        [oval127Path fill];
        [UIColor.blackColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(124.5, 59.5, 19, 14)];
        [color10 setFill];
        [oval128Path fill];
        [UIColor.blackColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(138.5, 59, 21, 15)];
        [color10 setFill];
        [oval129Path fill];
        [UIColor.blackColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(173, 59, 20, 16)];
        [color10 setFill];
        [oval130Path fill];
        [UIColor.blackColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(160.5, 57.5, 20, 12)];
        [color10 setFill];
        [oval131Path fill];
        [UIColor.blackColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(182, 48, 19, 21)];
        [color10 setFill];
        [oval114Path fill];
        [UIColor.blackColor setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 115 Drawing
        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(195.5, 40.5, 20, 20)];
        [color10 setFill];
        [oval115Path fill];
        [UIColor.blackColor setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(182, 39, 19, 18)];
        [color10 setFill];
        [oval116Path fill];
        [UIColor.blackColor setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(163, 41.5, 21, 19)];
        [color10 setFill];
        [oval117Path fill];
        [UIColor.blackColor setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(146, 53, 15, 15)];
        [color10 setFill];
        [oval118Path fill];
        [UIColor.blackColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(152.5, 48.5, 19, 19)];
        [color10 setFill];
        [oval119Path fill];
        [UIColor.blackColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(167.5, 48, 20, 19)];
        [color10 setFill];
        [oval120Path fill];
        [UIColor.blackColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(201, 48, 21, 21)];
        [color10 setFill];
        [oval121Path fill];
        [UIColor.blackColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(188.5, 45.5, 21, 16)];
        [color10 setFill];
        [oval122Path fill];
        [UIColor.blackColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(124.5, 48.5, 21, 20)];
        [color10 setFill];
        [oval105Path fill];
        [UIColor.blackColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(139, 41, 21, 19)];
        [color10 setFill];
        [oval106Path fill];
        [UIColor.blackColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(124.5, 39.5, 21, 18)];
        [color10 setFill];
        [oval107Path fill];
        [UIColor.blackColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        //// Oval 108 Drawing
        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 42, 22, 18)];
        [color10 setFill];
        [oval108Path fill];
        [UIColor.blackColor setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(87.5, 52.5, 16, 15)];
        [color10 setFill];
        [oval109Path fill];
        [UIColor.blackColor setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(94, 49, 20, 18)];
        [color10 setFill];
        [oval110Path fill];
        [UIColor.blackColor setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109, 48.5, 22, 18)];
        [color10 setFill];
        [oval111Path fill];
        [UIColor.blackColor setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(145.5, 48.5, 21, 20)];
        [color10 setFill];
        [oval112Path fill];
        [UIColor.blackColor setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(132, 46, 21, 15)];
        [color10 setFill];
        [oval113Path fill];
        [UIColor.blackColor setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 15
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 171 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 182.25, 121.14);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval171Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.05, 16.92)];
        [color3 setFill];
        [oval171Path fill];
        [UIColor.blackColor setStroke];
        oval171Path.lineWidth = 1;
        [oval171Path stroke];

        CGContextRestoreGState(context);


        //// Oval 172 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 195.36, 127.53);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval172Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.03, 18.83)];
        [color3 setFill];
        [oval172Path fill];
        [UIColor.blackColor setStroke];
        oval172Path.lineWidth = 1;
        [oval172Path stroke];

        CGContextRestoreGState(context);


        //// Oval 173 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 168.81, 127.17);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval173Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.06, 16.92)];
        [color3 setFill];
        [oval173Path fill];
        [UIColor.blackColor setStroke];
        oval173Path.lineWidth = 1;
        [oval173Path stroke];

        CGContextRestoreGState(context);


        //// Oval 174 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.84, 135.86);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval174Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.05, 17.87)];
        [color3 setFill];
        [oval174Path fill];
        [UIColor.blackColor setStroke];
        oval174Path.lineWidth = 1;
        [oval174Path stroke];

        CGContextRestoreGState(context);


        //// Oval 175 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 153.76, 136.96);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval175Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.06, 16.92)];
        [color3 setFill];
        [oval175Path fill];
        [UIColor.blackColor setStroke];
        oval175Path.lineWidth = 1;
        [oval175Path stroke];

        CGContextRestoreGState(context);


        //// Oval 176 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 169.59, 141.36);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval176Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.05, 15.04)];
        [color3 setFill];
        [oval176Path fill];
        [UIColor.blackColor setStroke];
        oval176Path.lineWidth = 1;
        [oval176Path stroke];

        CGContextRestoreGState(context);


        //// Oval 177 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 178.25, 137.11);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval177Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 23.08, 19.73)];
        [color3 setFill];
        [oval177Path fill];
        [UIColor.blackColor setStroke];
        oval177Path.lineWidth = 1;
        [oval177Path stroke];

        CGContextRestoreGState(context);


        //// Oval 178 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 193.83, 139.63);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval178Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.06, 16.92)];
        [color3 setFill];
        [oval178Path fill];
        [UIColor.blackColor setStroke];
        oval178Path.lineWidth = 1;
        [oval178Path stroke];

        CGContextRestoreGState(context);


        //// Oval 179 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 205.37, 130.22);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval179Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.03, 17.89)];
        [color3 setFill];
        [oval179Path fill];
        [UIColor.blackColor setStroke];
        oval179Path.lineWidth = 1;
        [oval179Path stroke];

        CGContextRestoreGState(context);


        //// Oval 180 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 208.71, 136.53);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval180Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.04, 16.93)];
        [color3 setFill];
        [oval180Path fill];
        [UIColor.blackColor setStroke];
        oval180Path.lineWidth = 1;
        [oval180Path stroke];

        CGContextRestoreGState(context);


        //// Oval 181 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 152.85, 129.91);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval181Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 19.08, 15.02)];
        [color3 setFill];
        [oval181Path fill];
        [UIColor.blackColor setStroke];
        oval181Path.lineWidth = 1;
        [oval181Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(114, 127.5, 19, 16)];
        [color10 setFill];
        [oval49Path fill];
        [UIColor.blackColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(119, 133.5, 23, 21)];
        [color10 setFill];
        [oval50Path fill];
        [UIColor.blackColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(133, 143.5, 18, 17)];
        [color10 setFill];
        [oval51Path fill];
        [UIColor.blackColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(96, 128.5, 21, 20)];
        [color10 setFill];
        [oval52Path fill];
        [UIColor.blackColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];


        //// Oval 53 Drawing
        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(78, 141.5, 22, 21)];
        [color10 setFill];
        [oval53Path fill];
        [UIColor.blackColor setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];


        //// Oval 68 Drawing
        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(62.5, 133, 22, 21)];
        [color10 setFill];
        [oval68Path fill];
        [UIColor.blackColor setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];


        //// Oval 69 Drawing
        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(78, 130.5, 22, 19)];
        [color10 setFill];
        [oval69Path fill];
        [UIColor.blackColor setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];


        //// Oval 70 Drawing
        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(100, 139.5, 24, 21)];
        [color10 setFill];
        [oval70Path fill];
        [UIColor.blackColor setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];


        //// Oval 71 Drawing
        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(57, 142.5, 20, 20)];
        [color10 setFill];
        [oval71Path fill];
        [UIColor.blackColor setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];


        //// Oval 72 Drawing
        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(70.5, 137, 21, 18)];
        [color10 setFill];
        [oval72Path fill];
        [UIColor.blackColor setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];


        //// Oval 73 Drawing
        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(113, 143.5, 22, 20)];
        [color10 setFill];
        [oval73Path fill];
        [UIColor.blackColor setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];


        //// Oval 74 Drawing
        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 142.5, 20, 15)];
        [color10 setFill];
        [oval74Path fill];
        [UIColor.blackColor setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 7
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(40, 123, 25, 19)];
        [color10 setFill];
        [oval36Path fill];
        [UIColor.blackColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15.5, 125.5, 26, 19)];
        [color10 setFill];
        [oval37Path fill];
        [UIColor.blackColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(1.5, 130, 21, 18)];
        [color10 setFill];
        [oval38Path fill];
        [UIColor.blackColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-9.5, 134, 23, 21)];
        [color10 setFill];
        [oval39Path fill];
        [UIColor.blackColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 132, 24, 24)];
        [color10 setFill];
        [oval40Path fill];
        [UIColor.blackColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        //// Oval 41 Drawing
        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74, 119.5, 27, 27)];
        [color10 setFill];
        [oval41Path fill];
        [UIColor.blackColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(28.5, 132, 26, 19)];
        [color10 setFill];
        [oval43Path fill];
        [UIColor.blackColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(83.5, 134, 23, 22)];
        [color10 setFill];
        [oval44Path fill];
        [UIColor.blackColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(66, 126.5, 23, 20)];
        [color10 setFill];
        [oval45Path fill];
        [UIColor.blackColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(12.5, 135, 24, 22)];
        [color10 setFill];
        [oval46Path fill];
        [UIColor.blackColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(41.5, 132, 25, 19)];
        [color10 setFill];
        [oval47Path fill];
        [UIColor.blackColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 197 Drawing
        UIBezierPath* oval197Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(157, 35, 19, 22)];
        [color10 setFill];
        [oval197Path fill];
        [UIColor.blackColor setStroke];
        oval197Path.lineWidth = 1;
        [oval197Path stroke];


        //// Oval 198 Drawing
        UIBezierPath* oval198Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(170.5, 26.5, 21, 21)];
        [color10 setFill];
        [oval198Path fill];
        [UIColor.blackColor setStroke];
        oval198Path.lineWidth = 1;
        [oval198Path stroke];


        //// Oval 199 Drawing
        UIBezierPath* oval199Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(157, 25, 19, 19)];
        [color10 setFill];
        [oval199Path fill];
        [UIColor.blackColor setStroke];
        oval199Path.lineWidth = 1;
        [oval199Path stroke];


        //// Oval 200 Drawing
        UIBezierPath* oval200Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(137, 27.5, 22, 20)];
        [color10 setFill];
        [oval200Path fill];
        [UIColor.blackColor setStroke];
        oval200Path.lineWidth = 1;
        [oval200Path stroke];


        //// Oval 201 Drawing
        UIBezierPath* oval201Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(120, 40, 15, 16)];
        [color10 setFill];
        [oval201Path fill];
        [UIColor.blackColor setStroke];
        oval201Path.lineWidth = 1;
        [oval201Path stroke];


        //// Oval 202 Drawing
        UIBezierPath* oval202Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(126.5, 35.5, 20, 20)];
        [color10 setFill];
        [oval202Path fill];
        [UIColor.blackColor setStroke];
        oval202Path.lineWidth = 1;
        [oval202Path stroke];


        //// Oval 203 Drawing
        UIBezierPath* oval203Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(142.5, 35, 20, 20)];
        [color10 setFill];
        [oval203Path fill];
        [UIColor.blackColor setStroke];
        oval203Path.lineWidth = 1;
        [oval203Path stroke];


        //// Oval 204 Drawing
        UIBezierPath* oval204Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(176, 35, 22, 22)];
        [color10 setFill];
        [oval204Path fill];
        [UIColor.blackColor setStroke];
        oval204Path.lineWidth = 1;
        [oval204Path stroke];


        //// Oval 205 Drawing
        UIBezierPath* oval205Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(163.5, 31.5, 22, 17)];
        [color10 setFill];
        [oval205Path fill];
        [UIColor.blackColor setStroke];
        oval205Path.lineWidth = 1;
        [oval205Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 20
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 206 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 12.22, 50.8);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval206Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 12.04, 7.69)];
        [color3 setFill];
        [oval206Path fill];
        [UIColor.blackColor setStroke];
        oval206Path.lineWidth = 1;
        [oval206Path stroke];

        CGContextRestoreGState(context);


        //// Oval 207 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 20.32, 46.78);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval207Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.75, 9.84)];
        [color3 setFill];
        [oval207Path fill];
        [UIColor.blackColor setStroke];
        oval207Path.lineWidth = 1;
        [oval207Path stroke];

        CGContextRestoreGState(context);


        //// Oval 208 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 40.2, 45.27);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval208Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.73, 10.79)];
        [color3 setFill];
        [oval208Path fill];
        [UIColor.blackColor setStroke];
        oval208Path.lineWidth = 1;
        [oval208Path stroke];

        CGContextRestoreGState(context);


        //// Oval 209 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 41.1, 54.71);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval209Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.89, 9.24)];
        [color3 setFill];
        [oval209Path fill];
        [UIColor.blackColor setStroke];
        oval209Path.lineWidth = 1;
        [oval209Path stroke];

        CGContextRestoreGState(context);


        //// Oval 210 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.21, 43.08);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval210Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.58, 12.09)];
        [color3 setFill];
        [oval210Path fill];
        [UIColor.blackColor setStroke];
        oval210Path.lineWidth = 1;
        [oval210Path stroke];

        CGContextRestoreGState(context);


        //// Oval 212 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 67.11, 44.2);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval212Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.73, 10.79)];
        [color3 setFill];
        [oval212Path fill];
        [UIColor.blackColor setStroke];
        oval212Path.lineWidth = 1;
        [oval212Path stroke];

        CGContextRestoreGState(context);


        //// Oval 213 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 53.45, 45.53);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval213Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.89, 9.24)];
        [color3 setFill];
        [oval213Path fill];
        [UIColor.blackColor setStroke];
        oval213Path.lineWidth = 1;
        [oval213Path stroke];

        CGContextRestoreGState(context);


        //// Oval 214 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 30.63, 48.87);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval214Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.89, 9.24)];
        [color3 setFill];
        [oval214Path fill];
        [UIColor.blackColor setStroke];
        oval214Path.lineWidth = 1;
        [oval214Path stroke];

        CGContextRestoreGState(context);


        //// Oval 215 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 52.58, 52.11);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval215Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.66, 11.1)];
        [color3 setFill];
        [oval215Path fill];
        [UIColor.blackColor setStroke];
        oval215Path.lineWidth = 1;
        [oval215Path stroke];

        CGContextRestoreGState(context);


        //// Oval 216 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 20.7, 53.97);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval216Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 12.04, 7.69)];
        [color3 setFill];
        [oval216Path fill];
        [UIColor.blackColor setStroke];
        oval216Path.lineWidth = 1;
        [oval216Path stroke];

        CGContextRestoreGState(context);


        //// Oval 217 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 30.63, 54.01);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval217Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.89, 9.24)];
        [color3 setFill];
        [oval217Path fill];
        [UIColor.blackColor setStroke];
        oval217Path.lineWidth = 1;
        [oval217Path stroke];

        CGContextRestoreGState(context);


        //// Oval 218 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 66.97, 49.43);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval218Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.54, 13.93)];
        [color3 setFill];
        [oval218Path fill];
        [UIColor.blackColor setStroke];
        oval218Path.lineWidth = 1;
        [oval218Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 17
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 132 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -7.96, 42.37);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 12.46, 9.29)];
        [color3 setFill];
        [oval132Path fill];
        [UIColor.blackColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];

        CGContextRestoreGState(context);


        //// Oval 134 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0.25, 37.55);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.3, 11.89)];
        [color3 setFill];
        [oval134Path fill];
        [UIColor.blackColor setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];

        CGContextRestoreGState(context);


        //// Oval 135 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 20.53, 35.77);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.29, 13.01)];
        [color3 setFill];
        [oval135Path fill];
        [UIColor.blackColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];

        CGContextRestoreGState(context);


        //// Oval 136 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 21.48, 46.94);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.38, 11.15)];
        [color3 setFill];
        [oval136Path fill];
        [UIColor.blackColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];

        CGContextRestoreGState(context);


        //// Oval 138 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 62.36, 33.16);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.21, 14.57)];
        [color3 setFill];
        [oval138Path fill];
        [UIColor.blackColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];

        CGContextRestoreGState(context);


        //// Oval 139 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 74.24, 43.22);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.29, 13.94)];
        [color3 setFill];
        [oval139Path fill];
        [UIColor.blackColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];

        CGContextRestoreGState(context);


        //// Oval 184 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 47.99, 34.51);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval184Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.29, 13.01)];
        [color3 setFill];
        [oval184Path fill];
        [UIColor.blackColor setStroke];
        oval184Path.lineWidth = 1;
        [oval184Path stroke];

        CGContextRestoreGState(context);


        //// Oval 185 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 34.09, 36.11);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval185Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.38, 11.15)];
        [color3 setFill];
        [oval185Path fill];
        [UIColor.blackColor setStroke];
        oval185Path.lineWidth = 1;
        [oval185Path stroke];

        CGContextRestoreGState(context);


        //// Oval 186 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 10.8, 40.05);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval186Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.38, 11.15)];
        [color3 setFill];
        [oval186Path fill];
        [UIColor.blackColor setStroke];
        oval186Path.lineWidth = 1;
        [oval186Path stroke];

        CGContextRestoreGState(context);


        //// Oval 187 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 33.16, 43.83);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval187Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.25, 13.39)];
        [color3 setFill];
        [oval187Path fill];
        [UIColor.blackColor setStroke];
        oval187Path.lineWidth = 1;
        [oval187Path stroke];

        CGContextRestoreGState(context);


        //// Oval 188 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0.69, 46.1);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval188Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 12.46, 9.29)];
        [color3 setFill];
        [oval188Path fill];
        [UIColor.blackColor setStroke];
        oval188Path.lineWidth = 1;
        [oval188Path stroke];

        CGContextRestoreGState(context);


        //// Oval 189 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 10.8, 46.12);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval189Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 14.38, 11.15)];
        [color3 setFill];
        [oval189Path fill];
        [UIColor.blackColor setStroke];
        oval189Path.lineWidth = 1;
        [oval189Path stroke];

        CGContextRestoreGState(context);


        //// Oval 190 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 47.79, 40.65);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval190Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.2, 16.74)];
        [color3 setFill];
        [oval190Path fill];
        [UIColor.blackColor setStroke];
        oval190Path.lineWidth = 1;
        [oval190Path stroke];

        CGContextRestoreGState(context);


        //// Oval 191 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 62.84, 45);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval191Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.32, 14.88)];
        [color3 setFill];
        [oval191Path fill];
        [UIColor.blackColor setStroke];
        oval191Path.lineWidth = 1;
        [oval191Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 21
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 235 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -6.46, 40.67);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval235Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.71, 10.26)];
        [color3 setFill];
        [oval235Path fill];
        [UIColor.blackColor setStroke];
        oval235Path.lineWidth = 1;
        [oval235Path stroke];

        CGContextRestoreGState(context);


        //// Oval 234 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 3.87, 28.87);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval234Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.04, 16.1)];
        [color3 setFill];
        [oval234Path fill];
        [UIColor.blackColor setStroke];
        oval234Path.lineWidth = 1;
        [oval234Path stroke];

        CGContextRestoreGState(context);


        //// Oval 220 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.85, 26.26);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval220Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.93, 14.37)];
        [color3 setFill];
        [oval220Path fill];
        [UIColor.blackColor setStroke];
        oval220Path.lineWidth = 1;
        [oval220Path stroke];

        CGContextRestoreGState(context);


        //// Oval 222 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 63.87, 24.37);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval222Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.04, 16.1)];
        [color3 setFill];
        [oval222Path fill];
        [UIColor.blackColor setStroke];
        oval222Path.lineWidth = 1;
        [oval222Path stroke];

        CGContextRestoreGState(context);


        //// Oval 224 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 53.07, 24.87);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval224Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.93, 14.37)];
        [color3 setFill];
        [oval224Path fill];
        [UIColor.blackColor setStroke];
        oval224Path.lineWidth = 1;
        [oval224Path stroke];

        CGContextRestoreGState(context);


        //// Oval 225 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 37.77, 26.64);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval225Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.82, 12.32)];
        [color3 setFill];
        [oval225Path fill];
        [UIColor.blackColor setStroke];
        oval225Path.lineWidth = 1;
        [oval225Path stroke];

        CGContextRestoreGState(context);


        //// Oval 226 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 12.15, 30.99);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval226Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.82, 12.32)];
        [color3 setFill];
        [oval226Path fill];
        [UIColor.blackColor setStroke];
        oval226Path.lineWidth = 1;
        [oval226Path stroke];

        CGContextRestoreGState(context);


        //// Oval 229 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 12.15, 37.69);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval229Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.82, 12.32)];
        [color3 setFill];
        [oval229Path fill];
        [UIColor.blackColor setStroke];
        oval229Path.lineWidth = 1;
        [oval229Path stroke];

        CGContextRestoreGState(context);


        //// Oval 230 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 54.84, 33.65);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval230Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 20.03, 18.49)];
        [color3 setFill];
        [oval230Path fill];
        [UIColor.blackColor setStroke];
        oval230Path.lineWidth = 1;
        [oval230Path stroke];

        CGContextRestoreGState(context);


        //// Oval 211 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.17, 26.73);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval211Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.93, 11.4)];
        [color3 setFill];
        [oval211Path fill];
        [UIColor.blackColor setStroke];
        oval211Path.lineWidth = 1;
        [oval211Path stroke];

        CGContextRestoreGState(context);


        //// Oval 219 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 90.67, 29.23);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval219Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.93, 11.4)];
        [color3 setFill];
        [oval219Path fill];
        [UIColor.blackColor setStroke];
        oval219Path.lineWidth = 1;
        [oval219Path stroke];

        CGContextRestoreGState(context);


        //// Oval 232 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 94.17, 37.73);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval232Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.93, 11.4)];
        [color3 setFill];
        [oval232Path fill];
        [UIColor.blackColor setStroke];
        oval232Path.lineWidth = 1;
        [oval232Path stroke];

        CGContextRestoreGState(context);


        //// Oval 223 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.94, 34.48);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval223Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.93, 15.4)];
        [color3 setFill];
        [oval223Path fill];
        [UIColor.blackColor setStroke];
        oval223Path.lineWidth = 1;
        [oval223Path stroke];

        CGContextRestoreGState(context);


        //// Oval 233 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 70.93, 35.88);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval233Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.87, 11.98)];
        [color3 setFill];
        [oval233Path fill];
        [UIColor.blackColor setStroke];
        oval233Path.lineWidth = 1;
        [oval233Path stroke];

        CGContextRestoreGState(context);


        //// Oval 236 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, -6.07, 30.29);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval236Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 15.71, 12.26)];
        [color3 setFill];
        [oval236Path fill];
        [UIColor.blackColor setStroke];
        oval236Path.lineWidth = 1;
        [oval236Path stroke];

        CGContextRestoreGState(context);


        //// Oval 228 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 1.04, 37.67);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval228Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 13.71, 10.26)];
        [color3 setFill];
        [oval228Path fill];
        [UIColor.blackColor setStroke];
        oval228Path.lineWidth = 1;
        [oval228Path stroke];

        CGContextRestoreGState(context);


        //// Oval 221 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 22.79, 37.73);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval221Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 17.82, 14.32)];
        [color3 setFill];
        [oval221Path fill];
        [UIColor.blackColor setStroke];
        oval221Path.lineWidth = 1;
        [oval221Path stroke];

        CGContextRestoreGState(context);


        //// Oval 227 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 36.75, 35.16);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval227Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 18.99, 14.79)];
        [color3 setFill];
        [oval227Path fill];
        [UIColor.blackColor setStroke];
        oval227Path.lineWidth = 1;
        [oval227Path stroke];

        CGContextRestoreGState(context);


        //// Oval 231 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 45.93, 37.88);
        CGContextRotateCTM(context, -6.8 * M_PI / 180);

        UIBezierPath* oval231Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 0, 16.87, 11.98)];
        [color3 setFill];
        [oval231Path fill];
        [UIColor.blackColor setStroke];
        oval231Path.lineWidth = 1;
        [oval231Path stroke];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGGradientRelease(nightSkySnowGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas13
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color2 = [UIColor colorWithRed: 0.733 green: 0.73 blue: 0.73 alpha: 1];
    UIColor* gradientColor = [UIColor colorWithRed: 0.29 green: 0.257 blue: 0.422 alpha: 1];
    UIColor* gradientColor2 = [UIColor colorWithRed: 0.032 green: 0.19 blue: 0.05 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* color11 = [UIColor colorWithRed: 0.917 green: 0.865 blue: 0.629 alpha: 0.976];
    UIColor* shadow2Color = [UIColor colorWithRed: 1 green: 0.799 blue: 0.229 alpha: 1];
    UIColor* moonGradientColor = [UIColor colorWithRed: 1 green: 0.945 blue: 0.698 alpha: 1];
    UIColor* moonGradientColor2 = [UIColor colorWithRed: 0.538 green: 0.507 blue: 0.337 alpha: 1];
    UIColor* darkSideMoonGradientColor = [UIColor colorWithRed: 0.723 green: 0.715 blue: 0.715 alpha: 1];
    UIColor* darkSideMoonGradientColor2 = [UIColor colorWithRed: 0.189 green: 0.184 blue: 0.184 alpha: 1];
    UIColor* moonFrontShadowColor = [UIColor colorWithRed: 1 green: 0.985 blue: 0.815 alpha: 1];
    UIColor* color9 = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 1];
    UIColor* fogColor = [UIColor colorWithRed: 0.306 green: 0.314 blue: 0.408 alpha: 0.472];

    //// Gradient Declarations
    CGFloat nightSkyGradientLocations[] = {0, 0.66, 1};
    CGGradientRef nightSkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor.CGColor, (id)[gradientColor blendedColorWithFraction: 0.5 ofColor: gradientColor2].CGColor, (id)gradientColor2.CGColor], nightSkyGradientLocations);
    CGFloat lightSideMoonGradientLocations[] = {0, 0.77, 1};
    CGGradientRef lightSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)moonGradientColor.CGColor, (id)[moonGradientColor blendedColorWithFraction: 0.5 ofColor: moonGradientColor2].CGColor, (id)moonGradientColor2.CGColor], lightSideMoonGradientLocations);
    CGFloat darkSideMoonGradientLocations[] = {0, 0.55, 1};
    CGGradientRef darkSideMoonGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)darkSideMoonGradientColor.CGColor, (id)[darkSideMoonGradientColor blendedColorWithFraction: 0.5 ofColor: darkSideMoonGradientColor2].CGColor, (id)darkSideMoonGradientColor2.CGColor], darkSideMoonGradientLocations);

    //// Shadow Declarations
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];
    NSShadow* moonFrontShadow = [[NSShadow alloc] init];
    [moonFrontShadow setShadowColor: [moonFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(moonFrontShadowColor.CGColor) * 0.14]];
    [moonFrontShadow setShadowOffset: CGSizeMake(28.1, 36.1)];
    [moonFrontShadow setShadowBlurRadius: 37];

    //// Rectangle 2 Drawing
    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectangle2Path addClip];
    CGContextDrawLinearGradient(context, nightSkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPath];
        [oval52Path moveToPoint: CGPointMake(222.57, 502.73)];
        [oval52Path addCurveToPoint: CGPointMake(123.58, 502.37) controlPoint1: CGPointMake(222.57, 480.38) controlPoint2: CGPointMake(185.6, 502.37)];
        [oval52Path addCurveToPoint: CGPointMake(29.51, 502.73) controlPoint1: CGPointMake(61.57, 502.37) controlPoint2: CGPointMake(29.51, 480.38)];
        [oval52Path addCurveToPoint: CGPointMake(19.66, 563.08) controlPoint1: CGPointMake(29.51, 516.49) controlPoint2: CGPointMake(-4.15, 544.08)];
        [oval52Path addCurveToPoint: CGPointMake(124.07, 574.44) controlPoint1: CGPointMake(34.53, 574.94) controlPoint2: CGPointMake(100.24, 574.44)];
        [oval52Path addCurveToPoint: CGPointMake(222.57, 502.73) controlPoint1: CGPointMake(186.09, 574.44) controlPoint2: CGPointMake(222.57, 525.08)];
        [oval52Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval52Path fill];
        CGContextRestoreGState(context);



        //// Oval 53 Drawing
        UIBezierPath* oval53Path = [UIBezierPath bezierPath];
        [oval53Path moveToPoint: CGPointMake(146.73, 491.57)];
        [oval53Path addCurveToPoint: CGPointMake(55.12, 468.65) controlPoint1: CGPointMake(146.73, 471.93) controlPoint2: CGPointMake(113.09, 468.65)];
        [oval53Path addCurveToPoint: CGPointMake(-33.74, 491.57) controlPoint1: CGPointMake(-2.85, 468.65) controlPoint2: CGPointMake(-33.74, 471.93)];
        [oval53Path addCurveToPoint: CGPointMake(26.56, 519.06) controlPoint1: CGPointMake(-33.74, 503.66) controlPoint2: CGPointMake(4.3, 502.37)];
        [oval53Path addCurveToPoint: CGPointMake(54.65, 554.56) controlPoint1: CGPointMake(40.45, 529.47) controlPoint2: CGPointMake(32.38, 554.56)];
        [oval53Path addCurveToPoint: CGPointMake(146.73, 491.57) controlPoint1: CGPointMake(112.62, 554.56) controlPoint2: CGPointMake(146.73, 511.2)];
        [oval53Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval53Path fill];
        CGContextRestoreGState(context);



        //// Oval 68 Drawing
        UIBezierPath* oval68Path = [UIBezierPath bezierPath];
        [oval68Path moveToPoint: CGPointMake(245.23, 597.87)];
        [oval68Path addCurveToPoint: CGPointMake(77.29, 537.16) controlPoint1: CGPointMake(245.23, 575.52) controlPoint2: CGPointMake(139.3, 537.16)];
        [oval68Path addCurveToPoint: CGPointMake(-16.78, 537.52) controlPoint1: CGPointMake(15.27, 537.16) controlPoint2: CGPointMake(-16.78, 515.17)];
        [oval68Path addCurveToPoint: CGPointMake(-26.63, 597.87) controlPoint1: CGPointMake(-16.78, 551.28) controlPoint2: CGPointMake(-50.45, 578.87)];
        [oval68Path addCurveToPoint: CGPointMake(77.78, 609.23) controlPoint1: CGPointMake(-11.77, 609.73) controlPoint2: CGPointMake(53.95, 609.23)];
        [oval68Path addCurveToPoint: CGPointMake(245.23, 597.87) controlPoint1: CGPointMake(139.79, 609.23) controlPoint2: CGPointMake(245.23, 620.22)];
        [oval68Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval68Path fill];
        CGContextRestoreGState(context);



        //// Oval 69 Drawing
        UIBezierPath* oval69Path = [UIBezierPath bezierPath];
        [oval69Path moveToPoint: CGPointMake(329.44, 537.1)];
        [oval69Path addCurveToPoint: CGPointMake(232.24, 536.76) controlPoint1: CGPointMake(329.44, 515.68) controlPoint2: CGPointMake(293.13, 536.76)];
        [oval69Path addCurveToPoint: CGPointMake(115.21, 555.47) controlPoint1: CGPointMake(171.34, 536.76) controlPoint2: CGPointMake(115.21, 534.05)];
        [oval69Path addCurveToPoint: CGPointMake(155.83, 578.61) controlPoint1: CGPointMake(115.21, 568.66) controlPoint2: CGPointMake(132.44, 560.4)];
        [oval69Path addCurveToPoint: CGPointMake(232.24, 592.9) controlPoint1: CGPointMake(170.42, 589.97) controlPoint2: CGPointMake(208.84, 592.9)];
        [oval69Path addCurveToPoint: CGPointMake(329.44, 537.1) controlPoint1: CGPointMake(293.13, 592.9) controlPoint2: CGPointMake(329.44, 558.52)];
        [oval69Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval69Path fill];
        CGContextRestoreGState(context);



        //// Oval 70 Drawing
        UIBezierPath* oval70Path = [UIBezierPath bezierPath];
        [oval70Path moveToPoint: CGPointMake(76.79, 606.39)];
        [oval70Path addCurveToPoint: CGPointMake(37.04, 585.35) controlPoint1: CGPointMake(76.79, 587.53) controlPoint2: CGPointMake(71.2, 585.35)];
        [oval70Path addCurveToPoint: CGPointMake(-18.75, 598.58) controlPoint1: CGPointMake(2.89, 585.35) controlPoint2: CGPointMake(-18.75, 579.72)];
        [oval70Path addCurveToPoint: CGPointMake(-5.81, 622.21) controlPoint1: CGPointMake(-18.75, 610.19) controlPoint2: CGPointMake(-18.93, 606.17)];
        [oval70Path addCurveToPoint: CGPointMake(37.04, 634.79) controlPoint1: CGPointMake(2.37, 632.21) controlPoint2: CGPointMake(23.92, 634.79)];
        [oval70Path addCurveToPoint: CGPointMake(76.79, 606.39) controlPoint1: CGPointMake(71.2, 634.79) controlPoint2: CGPointMake(76.79, 625.25)];
        [oval70Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval70Path fill];
        CGContextRestoreGState(context);



        //// Oval 71 Drawing
        UIBezierPath* oval71Path = [UIBezierPath bezierPath];
        [oval71Path moveToPoint: CGPointMake(424, 507.11)];
        [oval71Path addCurveToPoint: CGPointMake(372.78, 477.74) controlPoint1: CGPointMake(424, 480.78) controlPoint2: CGPointMake(416.79, 477.74)];
        [oval71Path addCurveToPoint: CGPointMake(300.88, 496.2) controlPoint1: CGPointMake(328.76, 477.74) controlPoint2: CGPointMake(300.88, 469.87)];
        [oval71Path addCurveToPoint: CGPointMake(317.55, 529.18) controlPoint1: CGPointMake(300.88, 512.42) controlPoint2: CGPointMake(300.64, 506.8)];
        [oval71Path addCurveToPoint: CGPointMake(372.78, 546.75) controlPoint1: CGPointMake(328.1, 543.15) controlPoint2: CGPointMake(355.86, 546.75)];
        [oval71Path addCurveToPoint: CGPointMake(424, 507.11) controlPoint1: CGPointMake(416.79, 546.75) controlPoint2: CGPointMake(424, 533.44)];
        [oval71Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval71Path fill];
        CGContextRestoreGState(context);



        //// Oval 72 Drawing
        UIBezierPath* oval72Path = [UIBezierPath bezierPath];
        [oval72Path moveToPoint: CGPointMake(418.58, 577.24)];
        [oval72Path addCurveToPoint: CGPointMake(372.29, 532.55) controlPoint1: CGPointMake(418.58, 554.11) controlPoint2: CGPointMake(412.08, 532.55)];
        [oval72Path addCurveToPoint: CGPointMake(302.35, 566.63) controlPoint1: CGPointMake(332.5, 532.55) controlPoint2: CGPointMake(302.35, 543.5)];
        [oval72Path addCurveToPoint: CGPointMake(221.59, 597.16) controlPoint1: CGPointMake(302.35, 580.87) controlPoint2: CGPointMake(206.3, 577.5)];
        [oval72Path addCurveToPoint: CGPointMake(372.28, 612.07) controlPoint1: CGPointMake(231.12, 609.43) controlPoint2: CGPointMake(356.99, 612.07)];
        [oval72Path addCurveToPoint: CGPointMake(418.58, 577.24) controlPoint1: CGPointMake(412.07, 612.07) controlPoint2: CGPointMake(418.58, 600.38)];
        [oval72Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval72Path fill];
        CGContextRestoreGState(context);



        //// Oval 73 Drawing
        UIBezierPath* oval73Path = [UIBezierPath bezierPath];
        [oval73Path moveToPoint: CGPointMake(182.19, 524.77)];
        [oval73Path addCurveToPoint: CGPointMake(228.48, 554.56) controlPoint1: CGPointMake(182.19, 547.9) controlPoint2: CGPointMake(188.69, 554.56)];
        [oval73Path addCurveToPoint: CGPointMake(315.16, 524.74) controlPoint1: CGPointMake(268.27, 554.56) controlPoint2: CGPointMake(315.16, 547.87)];
        [oval73Path addCurveToPoint: CGPointMake(379.18, 477.88) controlPoint1: CGPointMake(315.16, 510.5) controlPoint2: CGPointMake(394.47, 497.54)];
        [oval73Path addCurveToPoint: CGPointMake(228.48, 477.88) controlPoint1: CGPointMake(369.65, 465.61) controlPoint2: CGPointMake(243.77, 477.88)];
        [oval73Path addCurveToPoint: CGPointMake(182.19, 524.77) controlPoint1: CGPointMake(188.69, 477.88) controlPoint2: CGPointMake(182.19, 501.64)];
        [oval73Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval73Path fill];
        CGContextRestoreGState(context);



        //// Oval 74 Drawing
        UIBezierPath* oval74Path = [UIBezierPath bezierPath];
        [oval74Path moveToPoint: CGPointMake(260.88, 535.73)];
        [oval74Path addCurveToPoint: CGPointMake(260.88, 488.78) controlPoint1: CGPointMake(274.12, 527.75) controlPoint2: CGPointMake(260.88, 502.82)];
        [oval74Path addCurveToPoint: CGPointMake(179.33, 458) controlPoint1: CGPointMake(260.88, 459.12) controlPoint2: CGPointMake(225.54, 458)];
        [oval74Path addCurveToPoint: CGPointMake(103.86, 478.8) controlPoint1: CGPointMake(133.13, 458) controlPoint2: CGPointMake(103.86, 449.14)];
        [oval74Path addCurveToPoint: CGPointMake(103.86, 523.01) controlPoint1: CGPointMake(103.86, 497.06) controlPoint2: CGPointMake(86.11, 497.8)];
        [oval74Path addCurveToPoint: CGPointMake(179.33, 535.73) controlPoint1: CGPointMake(114.93, 538.75) controlPoint2: CGPointMake(161.58, 535.73)];
        [oval74Path addCurveToPoint: CGPointMake(260.88, 535.73) controlPoint1: CGPointMake(203.67, 535.73) controlPoint2: CGPointMake(246.15, 544.6)];
        [oval74Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval74Path fill];
        CGContextRestoreGState(context);



        //// Oval 75 Drawing
        UIBezierPath* oval75Path = [UIBezierPath bezierPath];
        [oval75Path moveToPoint: CGPointMake(383.62, 573.27)];
        [oval75Path addCurveToPoint: CGPointMake(337.31, 635.5) controlPoint1: CGPointMake(383.62, 629.08) controlPoint2: CGPointMake(377.1, 635.5)];
        [oval75Path addCurveToPoint: CGPointMake(272.81, 573.19) controlPoint1: CGPointMake(297.52, 635.5) controlPoint2: CGPointMake(308.26, 592.03)];
        [oval75Path addCurveToPoint: CGPointMake(272.81, 502.95) controlPoint1: CGPointMake(250.97, 561.58) controlPoint2: CGPointMake(257.52, 550.39)];
        [oval75Path addCurveToPoint: CGPointMake(337.31, 489.24) controlPoint1: CGPointMake(282.34, 473.34) controlPoint2: CGPointMake(322.02, 489.24)];
        [oval75Path addCurveToPoint: CGPointMake(383.62, 573.27) controlPoint1: CGPointMake(377.1, 489.24) controlPoint2: CGPointMake(383.62, 517.46)];
        [oval75Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval75Path fill];
        CGContextRestoreGState(context);



        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPath];
        [oval78Path moveToPoint: CGPointMake(200.9, 583.31)];
        [oval78Path addCurveToPoint: CGPointMake(188.1, 619.88) controlPoint1: CGPointMake(200.9, 607.6) controlPoint2: CGPointMake(222.25, 619.88)];
        [oval78Path addCurveToPoint: CGPointMake(115.21, 595.2) controlPoint1: CGPointMake(153.94, 619.88) controlPoint2: CGPointMake(115.21, 619.48)];
        [oval78Path addCurveToPoint: CGPointMake(135.89, 567.77) controlPoint1: CGPointMake(115.21, 580.24) controlPoint2: CGPointMake(122.77, 588.42)];
        [oval78Path addCurveToPoint: CGPointMake(161.15, 546.75) controlPoint1: CGPointMake(144.08, 554.89) controlPoint2: CGPointMake(148.03, 546.75)];
        [oval78Path addCurveToPoint: CGPointMake(200.9, 583.31) controlPoint1: CGPointMake(195.31, 546.75) controlPoint2: CGPointMake(200.9, 559.03)];
        [oval78Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        [fogColor setFill];
        [oval78Path fill];
        CGContextRestoreGState(context);



        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Star 21 Drawing
    UIBezierPath* star21Path = [UIBezierPath bezierPath];
    [star21Path moveToPoint: CGPointMake(85, 32)];
    [star21Path addLineToPoint: CGPointMake(87.82, 36.12)];
    [star21Path addLineToPoint: CGPointMake(92.61, 37.53)];
    [star21Path addLineToPoint: CGPointMake(89.57, 41.48)];
    [star21Path addLineToPoint: CGPointMake(89.7, 46.47)];
    [star21Path addLineToPoint: CGPointMake(85, 44.8)];
    [star21Path addLineToPoint: CGPointMake(80.3, 46.47)];
    [star21Path addLineToPoint: CGPointMake(80.43, 41.48)];
    [star21Path addLineToPoint: CGPointMake(77.39, 37.53)];
    [star21Path addLineToPoint: CGPointMake(82.18, 36.12)];
    [star21Path closePath];
    [color11 setFill];
    [star21Path fill];
    [shadow2Color setStroke];
    star21Path.lineWidth = 1;
    [star21Path stroke];


    //// Star 23 Drawing
    UIBezierPath* star23Path = [UIBezierPath bezierPath];
    [star23Path moveToPoint: CGPointMake(129.5, 51.5)];
    [star23Path addLineToPoint: CGPointMake(131.97, 55.1)];
    [star23Path addLineToPoint: CGPointMake(136.16, 56.34)];
    [star23Path addLineToPoint: CGPointMake(133.49, 59.8)];
    [star23Path addLineToPoint: CGPointMake(133.61, 64.16)];
    [star23Path addLineToPoint: CGPointMake(129.5, 62.7)];
    [star23Path addLineToPoint: CGPointMake(125.39, 64.16)];
    [star23Path addLineToPoint: CGPointMake(125.51, 59.8)];
    [star23Path addLineToPoint: CGPointMake(122.84, 56.34)];
    [star23Path addLineToPoint: CGPointMake(127.03, 55.1)];
    [star23Path closePath];
    [color11 setFill];
    [star23Path fill];
    [shadow2Color setStroke];
    star23Path.lineWidth = 1;
    [star23Path stroke];


    //// Star 24 Drawing
    UIBezierPath* star24Path = [UIBezierPath bezierPath];
    [star24Path moveToPoint: CGPointMake(129.5, 10.5)];
    [star24Path addLineToPoint: CGPointMake(132.32, 14.62)];
    [star24Path addLineToPoint: CGPointMake(137.11, 16.03)];
    [star24Path addLineToPoint: CGPointMake(134.07, 19.98)];
    [star24Path addLineToPoint: CGPointMake(134.2, 24.97)];
    [star24Path addLineToPoint: CGPointMake(129.5, 23.3)];
    [star24Path addLineToPoint: CGPointMake(124.8, 24.97)];
    [star24Path addLineToPoint: CGPointMake(124.93, 19.98)];
    [star24Path addLineToPoint: CGPointMake(121.89, 16.03)];
    [star24Path addLineToPoint: CGPointMake(126.68, 14.62)];
    [star24Path closePath];
    [color11 setFill];
    [star24Path fill];
    [shadow2Color setStroke];
    star24Path.lineWidth = 1;
    [star24Path stroke];


    //// Star 25 Drawing
    UIBezierPath* star25Path = [UIBezierPath bezierPath];
    [star25Path moveToPoint: CGPointMake(170.5, 13.5)];
    [star25Path addLineToPoint: CGPointMake(172.26, 16.07)];
    [star25Path addLineToPoint: CGPointMake(175.26, 16.95)];
    [star25Path addLineToPoint: CGPointMake(173.35, 19.43)];
    [star25Path addLineToPoint: CGPointMake(173.44, 22.55)];
    [star25Path addLineToPoint: CGPointMake(170.5, 21.5)];
    [star25Path addLineToPoint: CGPointMake(167.56, 22.55)];
    [star25Path addLineToPoint: CGPointMake(167.65, 19.43)];
    [star25Path addLineToPoint: CGPointMake(165.74, 16.95)];
    [star25Path addLineToPoint: CGPointMake(168.74, 16.07)];
    [star25Path closePath];
    [color11 setFill];
    [star25Path fill];
    [shadow2Color setStroke];
    star25Path.lineWidth = 1;
    [star25Path stroke];


    //// Star 26 Drawing
    UIBezierPath* star26Path = [UIBezierPath bezierPath];
    [star26Path moveToPoint: CGPointMake(183, 58)];
    [star26Path addLineToPoint: CGPointMake(186.88, 63.66)];
    [star26Path addLineToPoint: CGPointMake(193.46, 65.6)];
    [star26Path addLineToPoint: CGPointMake(189.28, 71.04)];
    [star26Path addLineToPoint: CGPointMake(189.47, 77.9)];
    [star26Path addLineToPoint: CGPointMake(183, 75.6)];
    [star26Path addLineToPoint: CGPointMake(176.53, 77.9)];
    [star26Path addLineToPoint: CGPointMake(176.72, 71.04)];
    [star26Path addLineToPoint: CGPointMake(172.54, 65.6)];
    [star26Path addLineToPoint: CGPointMake(179.12, 63.66)];
    [star26Path closePath];
    [color11 setFill];
    [star26Path fill];
    [shadow2Color setStroke];
    star26Path.lineWidth = 1;
    [star26Path stroke];


    //// Star 27 Drawing
    UIBezierPath* star27Path = [UIBezierPath bezierPath];
    [star27Path moveToPoint: CGPointMake(129.5, 92.5)];
    [star27Path addLineToPoint: CGPointMake(132.67, 97.13)];
    [star27Path addLineToPoint: CGPointMake(138.06, 98.72)];
    [star27Path addLineToPoint: CGPointMake(134.64, 103.17)];
    [star27Path addLineToPoint: CGPointMake(134.79, 108.78)];
    [star27Path addLineToPoint: CGPointMake(129.5, 106.9)];
    [star27Path addLineToPoint: CGPointMake(124.21, 108.78)];
    [star27Path addLineToPoint: CGPointMake(124.36, 103.17)];
    [star27Path addLineToPoint: CGPointMake(120.94, 98.72)];
    [star27Path addLineToPoint: CGPointMake(126.33, 97.13)];
    [star27Path closePath];
    [color11 setFill];
    [star27Path fill];
    [shadow2Color setStroke];
    star27Path.lineWidth = 1;
    [star27Path stroke];


    //// Star 28 Drawing
    UIBezierPath* star28Path = [UIBezierPath bezierPath];
    [star28Path moveToPoint: CGPointMake(54, 5)];
    [star28Path addLineToPoint: CGPointMake(57.17, 9.63)];
    [star28Path addLineToPoint: CGPointMake(62.56, 11.22)];
    [star28Path addLineToPoint: CGPointMake(59.14, 15.67)];
    [star28Path addLineToPoint: CGPointMake(59.29, 21.28)];
    [star28Path addLineToPoint: CGPointMake(54, 19.4)];
    [star28Path addLineToPoint: CGPointMake(48.71, 21.28)];
    [star28Path addLineToPoint: CGPointMake(48.86, 15.67)];
    [star28Path addLineToPoint: CGPointMake(45.44, 11.22)];
    [star28Path addLineToPoint: CGPointMake(50.83, 9.63)];
    [star28Path closePath];
    [color11 setFill];
    [star28Path fill];
    [shadow2Color setStroke];
    star28Path.lineWidth = 1;
    [star28Path stroke];


    //// Star 29 Drawing
    UIBezierPath* star29Path = [UIBezierPath bezierPath];
    [star29Path moveToPoint: CGPointMake(98, 65.5)];
    [star29Path addLineToPoint: CGPointMake(100.12, 68.59)];
    [star29Path addLineToPoint: CGPointMake(103.71, 69.65)];
    [star29Path addLineToPoint: CGPointMake(101.42, 72.61)];
    [star29Path addLineToPoint: CGPointMake(101.53, 76.35)];
    [star29Path addLineToPoint: CGPointMake(98, 75.1)];
    [star29Path addLineToPoint: CGPointMake(94.47, 76.35)];
    [star29Path addLineToPoint: CGPointMake(94.58, 72.61)];
    [star29Path addLineToPoint: CGPointMake(92.29, 69.65)];
    [star29Path addLineToPoint: CGPointMake(95.88, 68.59)];
    [star29Path closePath];
    [color11 setFill];
    [star29Path fill];
    [shadow2Color setStroke];
    star29Path.lineWidth = 1;
    [star29Path stroke];


    //// Star 30 Drawing
    UIBezierPath* star30Path = [UIBezierPath bezierPath];
    [star30Path moveToPoint: CGPointMake(48.5, 77)];
    [star30Path addLineToPoint: CGPointMake(51.67, 81.63)];
    [star30Path addLineToPoint: CGPointMake(57.06, 83.22)];
    [star30Path addLineToPoint: CGPointMake(53.64, 87.67)];
    [star30Path addLineToPoint: CGPointMake(53.79, 93.28)];
    [star30Path addLineToPoint: CGPointMake(48.5, 91.4)];
    [star30Path addLineToPoint: CGPointMake(43.21, 93.28)];
    [star30Path addLineToPoint: CGPointMake(43.36, 87.67)];
    [star30Path addLineToPoint: CGPointMake(39.94, 83.22)];
    [star30Path addLineToPoint: CGPointMake(45.33, 81.63)];
    [star30Path closePath];
    [color11 setFill];
    [star30Path fill];
    [shadow2Color setStroke];
    star30Path.lineWidth = 1;
    [star30Path stroke];


    //// Star 31 Drawing
    UIBezierPath* star31Path = [UIBezierPath bezierPath];
    [star31Path moveToPoint: CGPointMake(209, 127)];
    [star31Path addLineToPoint: CGPointMake(212.88, 132.66)];
    [star31Path addLineToPoint: CGPointMake(219.46, 134.6)];
    [star31Path addLineToPoint: CGPointMake(215.28, 140.04)];
    [star31Path addLineToPoint: CGPointMake(215.47, 146.9)];
    [star31Path addLineToPoint: CGPointMake(209, 144.6)];
    [star31Path addLineToPoint: CGPointMake(202.53, 146.9)];
    [star31Path addLineToPoint: CGPointMake(202.72, 140.04)];
    [star31Path addLineToPoint: CGPointMake(198.54, 134.6)];
    [star31Path addLineToPoint: CGPointMake(205.12, 132.66)];
    [star31Path closePath];
    [color11 setFill];
    [star31Path fill];
    [shadow2Color setStroke];
    star31Path.lineWidth = 1;
    [star31Path stroke];


    //// Star 32 Drawing
    UIBezierPath* star32Path = [UIBezierPath bezierPath];
    [star32Path moveToPoint: CGPointMake(75, 140)];
    [star32Path addLineToPoint: CGPointMake(79.58, 146.69)];
    [star32Path addLineToPoint: CGPointMake(87.36, 148.98)];
    [star32Path addLineToPoint: CGPointMake(82.42, 155.41)];
    [star32Path addLineToPoint: CGPointMake(82.64, 163.52)];
    [star32Path addLineToPoint: CGPointMake(75, 160.8)];
    [star32Path addLineToPoint: CGPointMake(67.36, 163.52)];
    [star32Path addLineToPoint: CGPointMake(67.58, 155.41)];
    [star32Path addLineToPoint: CGPointMake(62.64, 148.98)];
    [star32Path addLineToPoint: CGPointMake(70.42, 146.69)];
    [star32Path closePath];
    [color11 setFill];
    [star32Path fill];
    [shadow2Color setStroke];
    star32Path.lineWidth = 1;
    [star32Path stroke];


    //// Star 33 Drawing
    UIBezierPath* star33Path = [UIBezierPath bezierPath];
    [star33Path moveToPoint: CGPointMake(107, 59)];
    [star33Path addLineToPoint: CGPointMake(108.06, 60.54)];
    [star33Path addLineToPoint: CGPointMake(109.85, 61.07)];
    [star33Path addLineToPoint: CGPointMake(108.71, 62.56)];
    [star33Path addLineToPoint: CGPointMake(108.76, 64.43)];
    [star33Path addLineToPoint: CGPointMake(107, 63.8)];
    [star33Path addLineToPoint: CGPointMake(105.24, 64.43)];
    [star33Path addLineToPoint: CGPointMake(105.29, 62.56)];
    [star33Path addLineToPoint: CGPointMake(104.15, 61.07)];
    [star33Path addLineToPoint: CGPointMake(105.94, 60.54)];
    [star33Path closePath];
    [color11 setFill];
    [star33Path fill];
    [shadow2Color setStroke];
    star33Path.lineWidth = 1;
    [star33Path stroke];


    //// Star 34 Drawing
    UIBezierPath* star34Path = [UIBezierPath bezierPath];
    [star34Path moveToPoint: CGPointMake(116, 53)];
    [star34Path addLineToPoint: CGPointMake(117.06, 54.54)];
    [star34Path addLineToPoint: CGPointMake(118.85, 55.07)];
    [star34Path addLineToPoint: CGPointMake(117.71, 56.56)];
    [star34Path addLineToPoint: CGPointMake(117.76, 58.43)];
    [star34Path addLineToPoint: CGPointMake(116, 57.8)];
    [star34Path addLineToPoint: CGPointMake(114.24, 58.43)];
    [star34Path addLineToPoint: CGPointMake(114.29, 56.56)];
    [star34Path addLineToPoint: CGPointMake(113.15, 55.07)];
    [star34Path addLineToPoint: CGPointMake(114.94, 54.54)];
    [star34Path closePath];
    [color11 setFill];
    [star34Path fill];
    [shadow2Color setStroke];
    star34Path.lineWidth = 1;
    [star34Path stroke];


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76, 108.5, 19, 16)];
        [color10 setFill];
        [oval6Path fill];
        [UIColor.blackColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(58.5, 111, 19, 15)];
        [color10 setFill];
        [oval2Path fill];
        [UIColor.blackColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 114.5, 15, 15)];
        [color10 setFill];
        [ovalPath fill];
        [UIColor.blackColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(39.5, 117.5, 17, 17)];
        [color10 setFill];
        [oval42Path fill];
        [UIColor.blackColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(88.5, 116.5, 18, 19)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.blackColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(102, 106, 20, 22)];
        [color10 setFill];
        [oval65Path fill];
        [UIColor.blackColor setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(68.5, 116.5, 19, 15)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.blackColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109.5, 117.5, 17, 18)];
        [color10 setFill];
        [oval35Path fill];
        [UIColor.blackColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(96, 112, 18, 16)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.blackColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 118.5, 18, 18)];
        [color10 setFill];
        [oval48Path fill];
        [UIColor.blackColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(77.5, 116.5, 19, 15)];
        [color10 setFill];
        [oval3Path fill];
        [UIColor.blackColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Star Drawing
    UIBezierPath* starPath = [UIBezierPath bezierPath];
    [starPath moveToPoint: CGPointMake(229.5, 16.5)];
    [starPath addLineToPoint: CGPointMake(234.44, 23.7)];
    [starPath addLineToPoint: CGPointMake(242.81, 26.17)];
    [starPath addLineToPoint: CGPointMake(237.49, 33.1)];
    [starPath addLineToPoint: CGPointMake(237.73, 41.83)];
    [starPath addLineToPoint: CGPointMake(229.5, 38.9)];
    [starPath addLineToPoint: CGPointMake(221.27, 41.83)];
    [starPath addLineToPoint: CGPointMake(221.51, 33.1)];
    [starPath addLineToPoint: CGPointMake(216.19, 26.17)];
    [starPath addLineToPoint: CGPointMake(224.56, 23.7)];
    [starPath closePath];
    [color11 setFill];
    [starPath fill];
    [shadow2Color setStroke];
    starPath.lineWidth = 1;
    [starPath stroke];


    //// Group
    {
        //// Star 2 Drawing
        UIBezierPath* star2Path = [UIBezierPath bezierPath];
        [star2Path moveToPoint: CGPointMake(369.5, 72)];
        [star2Path addLineToPoint: CGPointMake(372.32, 76.12)];
        [star2Path addLineToPoint: CGPointMake(377.11, 77.53)];
        [star2Path addLineToPoint: CGPointMake(374.07, 81.48)];
        [star2Path addLineToPoint: CGPointMake(374.2, 86.47)];
        [star2Path addLineToPoint: CGPointMake(369.5, 84.8)];
        [star2Path addLineToPoint: CGPointMake(364.8, 86.47)];
        [star2Path addLineToPoint: CGPointMake(364.93, 81.48)];
        [star2Path addLineToPoint: CGPointMake(361.89, 77.53)];
        [star2Path addLineToPoint: CGPointMake(366.68, 76.12)];
        [star2Path closePath];
        [color11 setFill];
        [star2Path fill];
        [shadow2Color setStroke];
        star2Path.lineWidth = 1;
        [star2Path stroke];


        //// Star 3 Drawing
        UIBezierPath* star3Path = [UIBezierPath bezierPath];
        [star3Path moveToPoint: CGPointMake(349.5, 9)];
        [star3Path addLineToPoint: CGPointMake(352.67, 13.63)];
        [star3Path addLineToPoint: CGPointMake(358.06, 15.22)];
        [star3Path addLineToPoint: CGPointMake(354.64, 19.67)];
        [star3Path addLineToPoint: CGPointMake(354.79, 25.28)];
        [star3Path addLineToPoint: CGPointMake(349.5, 23.4)];
        [star3Path addLineToPoint: CGPointMake(344.21, 25.28)];
        [star3Path addLineToPoint: CGPointMake(344.36, 19.67)];
        [star3Path addLineToPoint: CGPointMake(340.94, 15.22)];
        [star3Path addLineToPoint: CGPointMake(346.33, 13.63)];
        [star3Path closePath];
        [color11 setFill];
        [star3Path fill];
        [shadow2Color setStroke];
        star3Path.lineWidth = 1;
        [star3Path stroke];


        //// Star 4 Drawing
        UIBezierPath* star4Path = [UIBezierPath bezierPath];
        [star4Path moveToPoint: CGPointMake(405, 10.5)];
        [star4Path addLineToPoint: CGPointMake(407.82, 14.62)];
        [star4Path addLineToPoint: CGPointMake(412.61, 16.03)];
        [star4Path addLineToPoint: CGPointMake(409.57, 19.98)];
        [star4Path addLineToPoint: CGPointMake(409.7, 24.97)];
        [star4Path addLineToPoint: CGPointMake(405, 23.3)];
        [star4Path addLineToPoint: CGPointMake(400.3, 24.97)];
        [star4Path addLineToPoint: CGPointMake(400.43, 19.98)];
        [star4Path addLineToPoint: CGPointMake(397.39, 16.03)];
        [star4Path addLineToPoint: CGPointMake(402.18, 14.62)];
        [star4Path closePath];
        [color11 setFill];
        [star4Path fill];
        [shadow2Color setStroke];
        star4Path.lineWidth = 1;
        [star4Path stroke];


        //// Star 5 Drawing
        UIBezierPath* star5Path = [UIBezierPath bezierPath];
        [star5Path moveToPoint: CGPointMake(383.5, 42)];
        [star5Path addLineToPoint: CGPointMake(385.26, 44.57)];
        [star5Path addLineToPoint: CGPointMake(388.26, 45.45)];
        [star5Path addLineToPoint: CGPointMake(386.35, 47.93)];
        [star5Path addLineToPoint: CGPointMake(386.44, 51.05)];
        [star5Path addLineToPoint: CGPointMake(383.5, 50)];
        [star5Path addLineToPoint: CGPointMake(380.56, 51.05)];
        [star5Path addLineToPoint: CGPointMake(380.65, 47.93)];
        [star5Path addLineToPoint: CGPointMake(378.74, 45.45)];
        [star5Path addLineToPoint: CGPointMake(381.74, 44.57)];
        [star5Path closePath];
        [color11 setFill];
        [star5Path fill];
        [shadow2Color setStroke];
        star5Path.lineWidth = 1;
        [star5Path stroke];


        //// Star 6 Drawing
        UIBezierPath* star6Path = [UIBezierPath bezierPath];
        [star6Path moveToPoint: CGPointMake(405, 99.5)];
        [star6Path addLineToPoint: CGPointMake(409.94, 106.7)];
        [star6Path addLineToPoint: CGPointMake(418.31, 109.17)];
        [star6Path addLineToPoint: CGPointMake(412.99, 116.1)];
        [star6Path addLineToPoint: CGPointMake(413.23, 124.83)];
        [star6Path addLineToPoint: CGPointMake(405, 121.9)];
        [star6Path addLineToPoint: CGPointMake(396.77, 124.83)];
        [star6Path addLineToPoint: CGPointMake(397.01, 116.1)];
        [star6Path addLineToPoint: CGPointMake(391.69, 109.17)];
        [star6Path addLineToPoint: CGPointMake(400.06, 106.7)];
        [star6Path closePath];
        [color11 setFill];
        [star6Path fill];
        [shadow2Color setStroke];
        star6Path.lineWidth = 1;
        [star6Path stroke];


        //// Star 7 Drawing
        UIBezierPath* star7Path = [UIBezierPath bezierPath];
        [star7Path moveToPoint: CGPointMake(353.5, 150)];
        [star7Path addLineToPoint: CGPointMake(357.73, 156.18)];
        [star7Path addLineToPoint: CGPointMake(364.91, 158.29)];
        [star7Path addLineToPoint: CGPointMake(360.35, 164.22)];
        [star7Path addLineToPoint: CGPointMake(360.55, 171.71)];
        [star7Path addLineToPoint: CGPointMake(353.5, 169.2)];
        [star7Path addLineToPoint: CGPointMake(346.45, 171.71)];
        [star7Path addLineToPoint: CGPointMake(346.65, 164.22)];
        [star7Path addLineToPoint: CGPointMake(342.09, 158.29)];
        [star7Path addLineToPoint: CGPointMake(349.27, 156.18)];
        [star7Path closePath];
        [color11 setFill];
        [star7Path fill];
        [shadow2Color setStroke];
        star7Path.lineWidth = 1;
        [star7Path stroke];
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(244.5, 23, 133, 135)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [oval54Path addClip];
        CGContextDrawLinearGradient(context, darkSideMoonGradient, CGPointMake(311, 23), CGPointMake(311, 158), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309, 63.5, 14, 20)];
        [UIColor.whiteColor setFill];
        [oval55Path fill];
        [color setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296, 60.5, 13.5, 23)];
        [UIColor.whiteColor setFill];
        [oval56Path fill];
        [color setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296.5, 67.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval57Path fill];
        [color setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier17Path fill];
        [color setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPath];
        [oval58Path moveToPoint: CGPointMake(292, 56.5)];
        [oval58Path addCurveToPoint: CGPointMake(288.15, 74.03) controlPoint1: CGPointMake(293.89, 59.43) controlPoint2: CGPointMake(290.33, 66.89)];
        [oval58Path addCurveToPoint: CGPointMake(292, 89.5) controlPoint1: CGPointMake(286.03, 80.97) controlPoint2: CGPointMake(285.22, 87.62)];
        [oval58Path addCurveToPoint: CGPointMake(280, 118.5) controlPoint1: CGPointMake(307.41, 93.78) controlPoint2: CGPointMake(280, 107.66)];
        [oval58Path addCurveToPoint: CGPointMake(310.5, 157.5) controlPoint1: CGPointMake(280, 155.78) controlPoint2: CGPointMake(347.78, 157.5)];
        [oval58Path addCurveToPoint: CGPointMake(243, 90) controlPoint1: CGPointMake(273.22, 157.5) controlPoint2: CGPointMake(243, 127.28)];
        [oval58Path addCurveToPoint: CGPointMake(310.5, 22.5) controlPoint1: CGPointMake(243, 52.72) controlPoint2: CGPointMake(273.22, 22.5)];
        [oval58Path addCurveToPoint: CGPointMake(292, 56.5) controlPoint1: CGPointMake(327.25, 22.5) controlPoint2: CGPointMake(285.54, 46.51)];
        [oval58Path closePath];
        CGContextSaveGState(context);
        [oval58Path addClip];
        CGContextDrawLinearGradient(context, lightSideMoonGradient, CGPointMake(282.35, 22.5), CGPointMake(282.35, 157.5), 0);
        CGContextRestoreGState(context);
        [color setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 270.95, 65.99);
        CGContextRotateCTM(context, 11.2 * M_PI / 180);

        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-5.75, -4.02, 11.5, 8.04)];
        [UIColor.whiteColor setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];

        CGContextRestoreGState(context);


        //// Oval 63 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 284.06, 72.1);
        CGContextRotateCTM(context, 10.56 * M_PI / 180);

        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.56, -6.24, 8.23, 6.85)];
        [UIColor.whiteColor setFill];
        [oval63Path fill];
        [UIColor.darkGrayColor setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];

        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [color11 setFill];
        [bezier18Path fill];
        [UIColor.darkGrayColor setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 64.5, 4, 4)];
        [color setFill];
        [oval64Path fill];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(283, 67, 3.5, 4)];
        [color setFill];
        [oval66Path fill];


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(278.5, 125)];
        [bezier21Path addCurveToPoint: CGPointMake(278.51, 119.11) controlPoint1: CGPointMake(282.37, 122.51) controlPoint2: CGPointMake(280.64, 117.5)];
        [bezier21Path addCurveToPoint: CGPointMake(260, 112) controlPoint1: CGPointMake(273.35, 123.02) controlPoint2: CGPointMake(260, 112)];
        [bezier21Path addCurveToPoint: CGPointMake(278.5, 125) controlPoint1: CGPointMake(260, 112) controlPoint2: CGPointMake(272.98, 128.55)];
        [bezier21Path closePath];
        [UIColor.whiteColor setFill];
        [bezier21Path fill];
        [color setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];


        //// Bezier 22 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 310.6, 118.87);
        CGContextRotateCTM(context, -9.13 * M_PI / 180);

        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(-14.49, -6.25)];
        [bezier22Path addCurveToPoint: CGPointMake(18.65, -6.25) controlPoint1: CGPointMake(-1.66, 10.32) controlPoint2: CGPointMake(18.65, -6.25)];
        [bezier22Path addLineToPoint: CGPointMake(1.69, 11.16)];
        [bezier22Path addLineToPoint: CGPointMake(-6.34, 7.76)];
        [bezier22Path addCurveToPoint: CGPointMake(-14.49, -6.25) controlPoint1: CGPointMake(-6.34, 7.76) controlPoint2: CGPointMake(-27.32, -22.81)];
        [bezier22Path closePath];
        [color2 setFill];
        [bezier22Path fill];
        [UIColor.blackColor setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];

        CGContextRestoreGState(context);


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309.5, 69.5, 3.5, 8.5)];
        [UIColor.blackColor setFill];
        [oval67Path fill];
        [color setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(376, 119, 19, 18)];
        [color10 setFill];
        [oval76Path fill];
        [UIColor.blackColor setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(389.5, 112.5, 19, 17)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.blackColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 79 Drawing
        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(376, 111, 19, 16)];
        [color10 setFill];
        [oval79Path fill];
        [UIColor.blackColor setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 113.5, 20, 16)];
        [color10 setFill];
        [oval80Path fill];
        [UIColor.blackColor setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(341, 123, 15, 13)];
        [color10 setFill];
        [oval81Path fill];
        [UIColor.blackColor setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(347.5, 119.5, 18, 16)];
        [color10 setFill];
        [oval82Path fill];
        [UIColor.blackColor setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(361.5, 119, 20, 16)];
        [color10 setFill];
        [oval83Path fill];
        [UIColor.blackColor setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(395, 119, 20, 18)];
        [color10 setFill];
        [oval84Path fill];
        [UIColor.blackColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(382.5, 116.5, 20, 14)];
        [color10 setFill];
        [oval85Path fill];
        [UIColor.blackColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Oval 4 Drawing
    UIBezierPath* oval4Path = [UIBezierPath bezierPath];
    [oval4Path moveToPoint: CGPointMake(219.76, 652.76)];
    [oval4Path addCurveToPoint: CGPointMake(121.85, 653.32) controlPoint1: CGPointMake(219.76, 688.49) controlPoint2: CGPointMake(183.19, 653.32)];
    [oval4Path addCurveToPoint: CGPointMake(28.81, 652.76) controlPoint1: CGPointMake(60.51, 653.32) controlPoint2: CGPointMake(28.81, 688.49)];
    [oval4Path addCurveToPoint: CGPointMake(19.07, 556.28) controlPoint1: CGPointMake(28.81, 630.75) controlPoint2: CGPointMake(-4.49, 586.65)];
    [oval4Path addCurveToPoint: CGPointMake(122.34, 538.12) controlPoint1: CGPointMake(33.77, 537.32) controlPoint2: CGPointMake(98.77, 538.12)];
    [oval4Path addCurveToPoint: CGPointMake(219.76, 652.76) controlPoint1: CGPointMake(183.68, 538.12) controlPoint2: CGPointMake(219.76, 617.02)];
    [oval4Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval4Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval4Path.lineWidth = 1;
    [oval4Path stroke];
    CGContextRestoreGState(context);


    //// Oval 5 Drawing
    UIBezierPath* oval5Path = [UIBezierPath bezierPath];
    [oval5Path moveToPoint: CGPointMake(144.75, 670.6)];
    [oval5Path addCurveToPoint: CGPointMake(54.14, 707.24) controlPoint1: CGPointMake(144.75, 701.98) controlPoint2: CGPointMake(111.48, 707.24)];
    [oval5Path addCurveToPoint: CGPointMake(-33.75, 670.6) controlPoint1: CGPointMake(-3.2, 707.24) controlPoint2: CGPointMake(-33.75, 701.98)];
    [oval5Path addCurveToPoint: CGPointMake(25.89, 626.65) controlPoint1: CGPointMake(-33.75, 651.27) controlPoint2: CGPointMake(3.87, 653.33)];
    [oval5Path addCurveToPoint: CGPointMake(53.68, 569.9) controlPoint1: CGPointMake(39.63, 610) controlPoint2: CGPointMake(31.64, 569.9)];
    [oval5Path addCurveToPoint: CGPointMake(144.75, 670.6) controlPoint1: CGPointMake(111.01, 569.9) controlPoint2: CGPointMake(144.75, 639.21)];
    [oval5Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval5Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval5Path.lineWidth = 1;
    [oval5Path stroke];
    CGContextRestoreGState(context);


    //// Oval 7 Drawing
    UIBezierPath* oval7Path = [UIBezierPath bezierPath];
    [oval7Path moveToPoint: CGPointMake(242.17, 500.66)];
    [oval7Path addCurveToPoint: CGPointMake(76.06, 597.71) controlPoint1: CGPointMake(242.17, 536.39) controlPoint2: CGPointMake(137.4, 597.71)];
    [oval7Path addCurveToPoint: CGPointMake(-16.98, 597.14) controlPoint1: CGPointMake(14.72, 597.71) controlPoint2: CGPointMake(-16.98, 632.87)];
    [oval7Path addCurveToPoint: CGPointMake(-26.72, 500.66) controlPoint1: CGPointMake(-16.98, 575.14) controlPoint2: CGPointMake(-50.28, 531.03)];
    [oval7Path addCurveToPoint: CGPointMake(76.55, 482.5) controlPoint1: CGPointMake(-12.02, 481.7) controlPoint2: CGPointMake(52.98, 482.5)];
    [oval7Path addCurveToPoint: CGPointMake(242.17, 500.66) controlPoint1: CGPointMake(137.89, 482.5) controlPoint2: CGPointMake(242.17, 464.93)];
    [oval7Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval7Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval7Path.lineWidth = 1;
    [oval7Path stroke];
    CGContextRestoreGState(context);


    //// Oval 8 Drawing
    UIBezierPath* oval8Path = [UIBezierPath bezierPath];
    [oval8Path moveToPoint: CGPointMake(325.47, 597.81)];
    [oval8Path addCurveToPoint: CGPointMake(229.33, 598.35) controlPoint1: CGPointMake(325.47, 632.05) controlPoint2: CGPointMake(289.56, 598.35)];
    [oval8Path addCurveToPoint: CGPointMake(113.57, 568.43) controlPoint1: CGPointMake(169.09, 598.35) controlPoint2: CGPointMake(113.57, 602.68)];
    [oval8Path addCurveToPoint: CGPointMake(153.75, 531.45) controlPoint1: CGPointMake(113.57, 547.35) controlPoint2: CGPointMake(130.62, 560.56)];
    [oval8Path addCurveToPoint: CGPointMake(229.33, 508.6) controlPoint1: CGPointMake(168.19, 513.28) controlPoint2: CGPointMake(206.18, 508.6)];
    [oval8Path addCurveToPoint: CGPointMake(325.47, 597.81) controlPoint1: CGPointMake(289.56, 508.6) controlPoint2: CGPointMake(325.47, 563.56)];
    [oval8Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval8Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval8Path.lineWidth = 1;
    [oval8Path stroke];
    CGContextRestoreGState(context);


    //// Oval 10 Drawing
    UIBezierPath* oval10Path = [UIBezierPath bezierPath];
    [oval10Path moveToPoint: CGPointMake(419, 645.76)];
    [oval10Path addCurveToPoint: CGPointMake(368.34, 692.69) controlPoint1: CGPointMake(419, 687.85) controlPoint2: CGPointMake(411.87, 692.69)];
    [oval10Path addCurveToPoint: CGPointMake(297.22, 663.18) controlPoint1: CGPointMake(324.8, 692.69) controlPoint2: CGPointMake(297.22, 705.28)];
    [oval10Path addCurveToPoint: CGPointMake(313.71, 610.46) controlPoint1: CGPointMake(297.22, 637.27) controlPoint2: CGPointMake(296.99, 646.24)];
    [oval10Path addCurveToPoint: CGPointMake(368.34, 582.38) controlPoint1: CGPointMake(324.14, 588.13) controlPoint2: CGPointMake(351.61, 582.38)];
    [oval10Path addCurveToPoint: CGPointMake(419, 645.76) controlPoint1: CGPointMake(411.87, 582.38) controlPoint2: CGPointMake(419, 603.66)];
    [oval10Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval10Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval10Path.lineWidth = 1;
    [oval10Path stroke];
    CGContextRestoreGState(context);


    //// Oval 11 Drawing
    UIBezierPath* oval11Path = [UIBezierPath bezierPath];
    [oval11Path moveToPoint: CGPointMake(413.64, 533.63)];
    [oval11Path addCurveToPoint: CGPointMake(367.85, 605.08) controlPoint1: CGPointMake(413.64, 570.61) controlPoint2: CGPointMake(407.21, 605.08)];
    [oval11Path addCurveToPoint: CGPointMake(298.68, 550.6) controlPoint1: CGPointMake(328.49, 605.08) controlPoint2: CGPointMake(298.68, 587.58)];
    [oval11Path addCurveToPoint: CGPointMake(218.79, 501.79) controlPoint1: CGPointMake(298.68, 527.83) controlPoint2: CGPointMake(203.67, 533.23)];
    [oval11Path addCurveToPoint: CGPointMake(367.84, 477.96) controlPoint1: CGPointMake(228.22, 482.18) controlPoint2: CGPointMake(352.72, 477.96)];
    [oval11Path addCurveToPoint: CGPointMake(413.64, 533.63) controlPoint1: CGPointMake(407.2, 477.96) controlPoint2: CGPointMake(413.64, 496.65)];
    [oval11Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval11Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval11Path.lineWidth = 1;
    [oval11Path stroke];
    CGContextRestoreGState(context);


    //// Oval 12 Drawing
    UIBezierPath* oval12Path = [UIBezierPath bezierPath];
    [oval12Path moveToPoint: CGPointMake(179.82, 617.52)];
    [oval12Path addCurveToPoint: CGPointMake(225.61, 569.9) controlPoint1: CGPointMake(179.82, 580.54) controlPoint2: CGPointMake(186.25, 569.9)];
    [oval12Path addCurveToPoint: CGPointMake(311.34, 617.57) controlPoint1: CGPointMake(264.97, 569.9) controlPoint2: CGPointMake(311.34, 580.59)];
    [oval12Path addCurveToPoint: CGPointMake(374.67, 692.48) controlPoint1: CGPointMake(311.34, 640.34) controlPoint2: CGPointMake(389.79, 661.05)];
    [oval12Path addCurveToPoint: CGPointMake(225.61, 692.48) controlPoint1: CGPointMake(365.24, 712.1) controlPoint2: CGPointMake(240.73, 692.48)];
    [oval12Path addCurveToPoint: CGPointMake(179.82, 617.52) controlPoint1: CGPointMake(186.25, 692.48) controlPoint2: CGPointMake(179.82, 654.49)];
    [oval12Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval12Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval12Path.lineWidth = 1;
    [oval12Path stroke];
    CGContextRestoreGState(context);


    //// Oval 13 Drawing
    UIBezierPath* oval13Path = [UIBezierPath bezierPath];
    [oval13Path moveToPoint: CGPointMake(257.66, 600)];
    [oval13Path addCurveToPoint: CGPointMake(257.66, 675.05) controlPoint1: CGPointMake(270.76, 612.75) controlPoint2: CGPointMake(257.66, 652.61)];
    [oval13Path addCurveToPoint: CGPointMake(177, 724.25) controlPoint1: CGPointMake(257.66, 722.46) controlPoint2: CGPointMake(222.7, 724.25)];
    [oval13Path addCurveToPoint: CGPointMake(102.34, 691.01) controlPoint1: CGPointMake(131.3, 724.25) controlPoint2: CGPointMake(102.34, 738.43)];
    [oval13Path addCurveToPoint: CGPointMake(102.34, 620.33) controlPoint1: CGPointMake(102.34, 661.82) controlPoint2: CGPointMake(84.79, 660.63)];
    [oval13Path addCurveToPoint: CGPointMake(177, 600) controlPoint1: CGPointMake(113.3, 595.18) controlPoint2: CGPointMake(159.44, 600)];
    [oval13Path addCurveToPoint: CGPointMake(257.66, 600) controlPoint1: CGPointMake(201.07, 600) controlPoint2: CGPointMake(243.09, 585.82)];
    [oval13Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval13Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval13Path.lineWidth = 1;
    [oval13Path stroke];
    CGContextRestoreGState(context);


    //// Oval 15 Drawing
    UIBezierPath* oval15Path = [UIBezierPath bezierPath];
    [oval15Path moveToPoint: CGPointMake(198.33, 523.93)];
    [oval15Path addCurveToPoint: CGPointMake(185.67, 465.47) controlPoint1: CGPointMake(198.33, 485.1) controlPoint2: CGPointMake(219.45, 465.47)];
    [oval15Path addCurveToPoint: CGPointMake(113.57, 504.93) controlPoint1: CGPointMake(151.88, 465.47) controlPoint2: CGPointMake(113.57, 466.1)];
    [oval15Path addCurveToPoint: CGPointMake(134.03, 548.77) controlPoint1: CGPointMake(113.57, 528.84) controlPoint2: CGPointMake(121.05, 515.77)];
    [oval15Path addCurveToPoint: CGPointMake(159.02, 582.38) controlPoint1: CGPointMake(142.13, 569.37) controlPoint2: CGPointMake(146.03, 582.38)];
    [oval15Path addCurveToPoint: CGPointMake(198.33, 523.93) controlPoint1: CGPointMake(192.8, 582.38) controlPoint2: CGPointMake(198.33, 562.75)];
    [oval15Path closePath];
    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
    [fogColor setFill];
    [oval15Path fill];
    CGContextRestoreGState(context);

    CGContextSaveGState(context);
    CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
    [color9 setStroke];
    oval15Path.lineWidth = 1;
    [oval15Path stroke];
    CGContextRestoreGState(context);


    //// Oval 27 Drawing
    UIBezierPath* oval27Path = [UIBezierPath bezierPath];
    [oval27Path moveToPoint: CGPointMake(177.25, 713.97)];
    [oval27Path addCurveToPoint: CGPointMake(272.22, 714.38) controlPoint1: CGPointMake(177.25, 739.63) controlPoint2: CGPointMake(212.73, 714.38)];
    [oval27Path addCurveToPoint: CGPointMake(362.47, 713.97) controlPoint1: CGPointMake(331.72, 714.38) controlPoint2: CGPointMake(362.47, 739.63)];
    [oval27Path addCurveToPoint: CGPointMake(371.92, 644.7) controlPoint1: CGPointMake(362.47, 698.18) controlPoint2: CGPointMake(394.77, 666.51)];
    [oval27Path addCurveToPoint: CGPointMake(271.75, 631.65) controlPoint1: CGPointMake(357.66, 631.08) controlPoint2: CGPointMake(294.61, 631.65)];
    [oval27Path addCurveToPoint: CGPointMake(177.25, 713.97) controlPoint1: CGPointMake(212.25, 631.65) controlPoint2: CGPointMake(177.25, 688.32)];
    [oval27Path closePath];
    [fogColor setFill];
    [oval27Path fill];

    ////// Oval 27 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval27Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval27Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 28 Drawing
    UIBezierPath* oval28Path = [UIBezierPath bezierPath];
    [oval28Path moveToPoint: CGPointMake(257.58, 721.89)];
    [oval28Path addCurveToPoint: CGPointMake(345.46, 748.21) controlPoint1: CGPointMake(257.58, 744.43) controlPoint2: CGPointMake(289.85, 748.21)];
    [oval28Path addCurveToPoint: CGPointMake(430.72, 721.89) controlPoint1: CGPointMake(401.08, 748.21) controlPoint2: CGPointMake(430.72, 744.43)];
    [oval28Path addCurveToPoint: CGPointMake(372.87, 690.34) controlPoint1: CGPointMake(430.72, 708.02) controlPoint2: CGPointMake(394.23, 709.5)];
    [oval28Path addCurveToPoint: CGPointMake(345.91, 649.59) controlPoint1: CGPointMake(359.54, 678.38) controlPoint2: CGPointMake(367.28, 649.59)];
    [oval28Path addCurveToPoint: CGPointMake(257.58, 721.89) controlPoint1: CGPointMake(290.3, 649.59) controlPoint2: CGPointMake(257.58, 699.36)];
    [oval28Path closePath];
    [fogColor setFill];
    [oval28Path fill];

    ////// Oval 28 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval28Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval28Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 29 Drawing
    UIBezierPath* oval29Path = [UIBezierPath bezierPath];
    [oval29Path moveToPoint: CGPointMake(161.52, 613.32)];
    [oval29Path addCurveToPoint: CGPointMake(322.64, 697.19) controlPoint1: CGPointMake(161.52, 644.2) controlPoint2: CGPointMake(263.14, 697.19)];
    [oval29Path addCurveToPoint: CGPointMake(412.89, 696.7) controlPoint1: CGPointMake(382.14, 697.19) controlPoint2: CGPointMake(412.89, 727.57)];
    [oval29Path addCurveToPoint: CGPointMake(422.34, 613.32) controlPoint1: CGPointMake(412.89, 677.68) controlPoint2: CGPointMake(445.19, 639.57)];
    [oval29Path addCurveToPoint: CGPointMake(322.17, 597.63) controlPoint1: CGPointMake(408.08, 596.94) controlPoint2: CGPointMake(345.03, 597.63)];
    [oval29Path addCurveToPoint: CGPointMake(161.52, 613.32) controlPoint1: CGPointMake(262.67, 597.63) controlPoint2: CGPointMake(161.52, 582.45)];
    [oval29Path closePath];
    [fogColor setFill];
    [oval29Path fill];

    ////// Oval 29 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval29Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval29Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 30 Drawing
    UIBezierPath* oval30Path = [UIBezierPath bezierPath];
    [oval30Path moveToPoint: CGPointMake(74.72, 671.28)];
    [oval30Path addCurveToPoint: CGPointMake(167.98, 671.79) controlPoint1: CGPointMake(74.72, 703.08) controlPoint2: CGPointMake(109.55, 671.79)];
    [oval30Path addCurveToPoint: CGPointMake(280.26, 644.01) controlPoint1: CGPointMake(226.4, 671.79) controlPoint2: CGPointMake(280.26, 675.81)];
    [oval30Path addCurveToPoint: CGPointMake(241.28, 609.67) controlPoint1: CGPointMake(280.26, 624.43) controlPoint2: CGPointMake(263.72, 636.7)];
    [oval30Path addCurveToPoint: CGPointMake(167.98, 588.46) controlPoint1: CGPointMake(227.28, 592.8) controlPoint2: CGPointMake(190.43, 588.46)];
    [oval30Path addCurveToPoint: CGPointMake(74.72, 671.28) controlPoint1: CGPointMake(109.55, 588.46) controlPoint2: CGPointMake(74.72, 639.49)];
    [oval30Path closePath];
    [fogColor setFill];
    [oval30Path fill];

    ////// Oval 30 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval30Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval30Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 31 Drawing
    UIBezierPath* oval31Path = [UIBezierPath bezierPath];
    [oval31Path moveToPoint: CGPointMake(319, 601.5)];
    [oval31Path addCurveToPoint: CGPointMake(357.14, 625.64) controlPoint1: CGPointMake(319, 623.15) controlPoint2: CGPointMake(324.37, 625.64)];
    [oval31Path addCurveToPoint: CGPointMake(410.67, 610.46) controlPoint1: CGPointMake(389.91, 625.64) controlPoint2: CGPointMake(410.67, 632.12)];
    [oval31Path addCurveToPoint: CGPointMake(398.26, 583.34) controlPoint1: CGPointMake(410.67, 597.13) controlPoint2: CGPointMake(410.84, 601.75)];
    [oval31Path addCurveToPoint: CGPointMake(357.14, 568.9) controlPoint1: CGPointMake(390.4, 571.85) controlPoint2: CGPointMake(369.73, 568.9)];
    [oval31Path addCurveToPoint: CGPointMake(319, 601.5) controlPoint1: CGPointMake(324.37, 568.9) controlPoint2: CGPointMake(319, 579.84)];
    [oval31Path closePath];
    [fogColor setFill];
    [oval31Path fill];

    ////// Oval 31 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval31Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval31Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 32 Drawing
    UIBezierPath* oval32Path = [UIBezierPath bezierPath];
    [oval32Path moveToPoint: CGPointMake(-16, 708.95)];
    [oval32Path addCurveToPoint: CGPointMake(33.14, 742.65) controlPoint1: CGPointMake(-16, 739.17) controlPoint2: CGPointMake(-9.09, 742.65)];
    [oval32Path addCurveToPoint: CGPointMake(102.12, 721.46) controlPoint1: CGPointMake(75.37, 742.65) controlPoint2: CGPointMake(102.12, 751.69)];
    [oval32Path addCurveToPoint: CGPointMake(86.13, 683.6) controlPoint1: CGPointMake(102.12, 702.85) controlPoint2: CGPointMake(102.35, 709.3)];
    [oval32Path addCurveToPoint: CGPointMake(33.14, 663.44) controlPoint1: CGPointMake(76.01, 667.57) controlPoint2: CGPointMake(49.37, 663.44)];
    [oval32Path addCurveToPoint: CGPointMake(-16, 708.95) controlPoint1: CGPointMake(-9.09, 663.44) controlPoint2: CGPointMake(-16, 678.72)];
    [oval32Path closePath];
    [fogColor setFill];
    [oval32Path fill];

    ////// Oval 32 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval32Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval32Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 33 Drawing
    UIBezierPath* oval33Path = [UIBezierPath bezierPath];
    [oval33Path moveToPoint: CGPointMake(-10.8, 628.43)];
    [oval33Path addCurveToPoint: CGPointMake(33.61, 679.74) controlPoint1: CGPointMake(-10.8, 654.98) controlPoint2: CGPointMake(-4.56, 679.74)];
    [oval33Path addCurveToPoint: CGPointMake(100.71, 640.62) controlPoint1: CGPointMake(71.79, 679.74) controlPoint2: CGPointMake(100.71, 667.17)];
    [oval33Path addCurveToPoint: CGPointMake(178.2, 605.57) controlPoint1: CGPointMake(100.71, 624.27) controlPoint2: CGPointMake(192.86, 628.14)];
    [oval33Path addCurveToPoint: CGPointMake(33.62, 588.46) controlPoint1: CGPointMake(169.05, 591.49) controlPoint2: CGPointMake(48.29, 588.46)];
    [oval33Path addCurveToPoint: CGPointMake(-10.8, 628.43) controlPoint1: CGPointMake(-4.55, 588.46) controlPoint2: CGPointMake(-10.8, 601.88)];
    [oval33Path closePath];
    [fogColor setFill];
    [oval33Path fill];

    ////// Oval 33 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval33Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval33Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 34 Drawing
    UIBezierPath* oval34Path = [UIBezierPath bezierPath];
    [oval34Path moveToPoint: CGPointMake(216, 688.67)];
    [oval34Path addCurveToPoint: CGPointMake(171.58, 654.48) controlPoint1: CGPointMake(216, 662.12) controlPoint2: CGPointMake(209.76, 654.48)];
    [oval34Path addCurveToPoint: CGPointMake(88.42, 688.71) controlPoint1: CGPointMake(133.41, 654.48) controlPoint2: CGPointMake(88.42, 662.16)];
    [oval34Path addCurveToPoint: CGPointMake(27, 742.5) controlPoint1: CGPointMake(88.42, 705.06) controlPoint2: CGPointMake(12.34, 719.93)];
    [oval34Path addCurveToPoint: CGPointMake(171.58, 742.5) controlPoint1: CGPointMake(36.15, 756.59) controlPoint2: CGPointMake(156.91, 742.5)];
    [oval34Path addCurveToPoint: CGPointMake(216, 688.67) controlPoint1: CGPointMake(209.76, 742.5) controlPoint2: CGPointMake(216, 715.22)];
    [oval34Path closePath];
    [fogColor setFill];
    [oval34Path fill];

    ////// Oval 34 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval34Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval34Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 36 Drawing
    UIBezierPath* oval36Path = [UIBezierPath bezierPath];
    [oval36Path moveToPoint: CGPointMake(140.49, 676.09)];
    [oval36Path addCurveToPoint: CGPointMake(140.49, 729.98) controlPoint1: CGPointMake(127.79, 685.25) controlPoint2: CGPointMake(140.49, 713.87)];
    [oval36Path addCurveToPoint: CGPointMake(218.73, 765.31) controlPoint1: CGPointMake(140.49, 764.03) controlPoint2: CGPointMake(174.4, 765.31)];
    [oval36Path addCurveToPoint: CGPointMake(291.15, 741.45) controlPoint1: CGPointMake(263.06, 765.31) controlPoint2: CGPointMake(291.15, 775.49)];
    [oval36Path addCurveToPoint: CGPointMake(291.15, 690.69) controlPoint1: CGPointMake(291.15, 720.48) controlPoint2: CGPointMake(308.17, 719.63)];
    [oval36Path addCurveToPoint: CGPointMake(218.73, 676.09) controlPoint1: CGPointMake(280.52, 672.63) controlPoint2: CGPointMake(235.77, 676.09)];
    [oval36Path addCurveToPoint: CGPointMake(140.49, 676.09) controlPoint1: CGPointMake(195.39, 676.09) controlPoint2: CGPointMake(154.63, 665.91)];
    [oval36Path closePath];
    [fogColor setFill];
    [oval36Path fill];

    ////// Oval 36 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval36Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval36Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 37 Drawing
    UIBezierPath* oval37Path = [UIBezierPath bezierPath];
    [oval37Path moveToPoint: CGPointMake(18.96, 613.44)];
    [oval37Path addCurveToPoint: CGPointMake(63.39, 542) controlPoint1: CGPointMake(18.96, 549.37) controlPoint2: CGPointMake(25.21, 542)];
    [oval37Path addCurveToPoint: CGPointMake(125.28, 613.53) controlPoint1: CGPointMake(101.57, 542) controlPoint2: CGPointMake(91.26, 591.9)];
    [oval37Path addCurveToPoint: CGPointMake(125.28, 694.16) controlPoint1: CGPointMake(146.23, 626.85) controlPoint2: CGPointMake(139.94, 639.7)];
    [oval37Path addCurveToPoint: CGPointMake(63.39, 709.89) controlPoint1: CGPointMake(116.13, 728.15) controlPoint2: CGPointMake(78.06, 709.89)];
    [oval37Path addCurveToPoint: CGPointMake(18.96, 613.44) controlPoint1: CGPointMake(25.21, 709.89) controlPoint2: CGPointMake(18.96, 677.5)];
    [oval37Path closePath];
    [fogColor setFill];
    [oval37Path fill];

    ////// Oval 37 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval37Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval37Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Oval 38 Drawing
    UIBezierPath* oval38Path = [UIBezierPath bezierPath];
    [oval38Path moveToPoint: CGPointMake(198.04, 621.47)];
    [oval38Path addCurveToPoint: CGPointMake(210.33, 579.49) controlPoint1: CGPointMake(198.04, 593.59) controlPoint2: CGPointMake(177.56, 579.49)];
    [oval38Path addCurveToPoint: CGPointMake(280.26, 607.82) controlPoint1: CGPointMake(243.1, 579.49) controlPoint2: CGPointMake(280.26, 579.95)];
    [oval38Path addCurveToPoint: CGPointMake(260.41, 639.31) controlPoint1: CGPointMake(280.26, 624.99) controlPoint2: CGPointMake(273, 615.61)];
    [oval38Path addCurveToPoint: CGPointMake(236.18, 663.44) controlPoint1: CGPointMake(252.56, 654.1) controlPoint2: CGPointMake(248.77, 663.44)];
    [oval38Path addCurveToPoint: CGPointMake(198.04, 621.47) controlPoint1: CGPointMake(203.41, 663.44) controlPoint2: CGPointMake(198.04, 649.35)];
    [oval38Path closePath];
    [fogColor setFill];
    [oval38Path fill];

    ////// Oval 38 Inner Shadow
    CGContextSaveGState(context);
    UIRectClip(oval38Path.bounds);
    CGContextSetShadowWithColor(context, CGSizeZero, 0, NULL);

    CGContextSetAlpha(context, CGColorGetAlpha([moonFrontShadow.shadowColor CGColor]));
    CGContextBeginTransparencyLayer(context, NULL);
    {
        UIColor* opaqueShadow = [moonFrontShadow.shadowColor colorWithAlphaComponent: 1];
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [opaqueShadow CGColor]);
        CGContextSetBlendMode(context, kCGBlendModeSourceOut);
        CGContextBeginTransparencyLayer(context, NULL);

        [opaqueShadow setFill];
        [oval38Path fill];

        CGContextEndTransparencyLayer(context);
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);



    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPath];
        [oval16Path moveToPoint: CGPointMake(282.96, 702.51)];
        [oval16Path addCurveToPoint: CGPointMake(333.02, 667.38) controlPoint1: CGPointMake(282.96, 680.77) controlPoint2: CGPointMake(274.32, 667.38)];
        [oval16Path addCurveToPoint: CGPointMake(422.05, 667.72) controlPoint1: CGPointMake(391.72, 667.38) controlPoint2: CGPointMake(422.05, 645.98)];
        [oval16Path addCurveToPoint: CGPointMake(431.38, 726.43) controlPoint1: CGPointMake(422.05, 681.11) controlPoint2: CGPointMake(453.92, 707.95)];
        [oval16Path addCurveToPoint: CGPointMake(332.55, 737.48) controlPoint1: CGPointMake(417.31, 737.96) controlPoint2: CGPointMake(355.11, 737.48)];
        [oval16Path addCurveToPoint: CGPointMake(282.96, 702.51) controlPoint1: CGPointMake(273.85, 737.48) controlPoint2: CGPointMake(282.96, 724.25)];
        [oval16Path closePath];
        [fogColor setFill];
        [oval16Path fill];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPath];
        [oval17Path moveToPoint: CGPointMake(253.9, 593.07)];
        [oval17Path addCurveToPoint: CGPointMake(340.61, 570.77) controlPoint1: CGPointMake(253.9, 573.97) controlPoint2: CGPointMake(285.74, 570.77)];
        [oval17Path addCurveToPoint: CGPointMake(424.72, 593.07) controlPoint1: CGPointMake(395.48, 570.77) controlPoint2: CGPointMake(424.72, 573.97)];
        [oval17Path addCurveToPoint: CGPointMake(367.64, 619.81) controlPoint1: CGPointMake(424.72, 604.83) controlPoint2: CGPointMake(388.72, 603.57)];
        [oval17Path addCurveToPoint: CGPointMake(341.05, 654.34) controlPoint1: CGPointMake(354.49, 629.94) controlPoint2: CGPointMake(362.14, 654.34)];
        [oval17Path addCurveToPoint: CGPointMake(253.9, 593.07) controlPoint1: CGPointMake(286.18, 654.34) controlPoint2: CGPointMake(253.9, 612.17)];
        [oval17Path closePath];
        [fogColor setFill];
        [oval17Path fill];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPath];
        [oval20Path moveToPoint: CGPointMake(334.46, 715.93)];
        [oval20Path addCurveToPoint: CGPointMake(372.08, 695.47) controlPoint1: CGPointMake(334.46, 697.58) controlPoint2: CGPointMake(339.75, 695.47)];
        [oval20Path addCurveToPoint: CGPointMake(424.89, 708.33) controlPoint1: CGPointMake(404.41, 695.47) controlPoint2: CGPointMake(424.89, 689.98)];
        [oval20Path addCurveToPoint: CGPointMake(412.64, 731.31) controlPoint1: CGPointMake(424.89, 719.63) controlPoint2: CGPointMake(425.06, 715.72)];
        [oval20Path addCurveToPoint: CGPointMake(372.08, 743.56) controlPoint1: CGPointMake(404.9, 741.05) controlPoint2: CGPointMake(384.5, 743.56)];
        [oval20Path addCurveToPoint: CGPointMake(334.46, 715.93) controlPoint1: CGPointMake(339.75, 743.56) controlPoint2: CGPointMake(334.46, 734.28)];
        [oval20Path closePath];
        [fogColor setFill];
        [oval20Path fill];


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPath];
        [oval21Path moveToPoint: CGPointMake(-16, 604.04)];
        [oval21Path addCurveToPoint: CGPointMake(32.48, 575.48) controlPoint1: CGPointMake(-16, 578.42) controlPoint2: CGPointMake(-9.18, 575.48)];
        [oval21Path addCurveToPoint: CGPointMake(100.54, 593.43) controlPoint1: CGPointMake(74.15, 575.48) controlPoint2: CGPointMake(100.54, 567.82)];
        [oval21Path addCurveToPoint: CGPointMake(84.76, 625.52) controlPoint1: CGPointMake(100.54, 609.2) controlPoint2: CGPointMake(100.76, 603.74)];
        [oval21Path addCurveToPoint: CGPointMake(32.48, 642.6) controlPoint1: CGPointMake(74.77, 639.1) controlPoint2: CGPointMake(48.49, 642.6)];
        [oval21Path addCurveToPoint: CGPointMake(-16, 604.04) controlPoint1: CGPointMake(-9.18, 642.6) controlPoint2: CGPointMake(-16, 629.65)];
        [oval21Path closePath];
        [fogColor setFill];
        [oval21Path fill];


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPath];
        [oval22Path moveToPoint: CGPointMake(4.71, 711.82)];
        [oval22Path addCurveToPoint: CGPointMake(90.02, 665.77) controlPoint1: CGPointMake(4.71, 689.32) controlPoint2: CGPointMake(52.36, 665.77)];
        [oval22Path addCurveToPoint: CGPointMake(185.16, 687.16) controlPoint1: CGPointMake(127.69, 665.77) controlPoint2: CGPointMake(185.16, 664.66)];
        [oval22Path addCurveToPoint: CGPointMake(232.67, 728.62) controlPoint1: CGPointMake(185.16, 701.02) controlPoint2: CGPointMake(247.13, 709.5)];
        [oval22Path addCurveToPoint: CGPointMake(90.03, 743.13) controlPoint1: CGPointMake(223.64, 740.56) controlPoint2: CGPointMake(104.51, 743.13)];
        [oval22Path addCurveToPoint: CGPointMake(4.71, 711.82) controlPoint1: CGPointMake(52.37, 743.13) controlPoint2: CGPointMake(4.71, 734.32)];
        [oval22Path closePath];
        [fogColor setFill];
        [oval22Path fill];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPath];
        [oval23Path moveToPoint: CGPointMake(212.88, 621.22)];
        [oval23Path addCurveToPoint: CGPointMake(169.06, 650.2) controlPoint1: CGPointMake(212.88, 643.72) controlPoint2: CGPointMake(206.73, 650.2)];
        [oval23Path addCurveToPoint: CGPointMake(87.02, 621.19) controlPoint1: CGPointMake(131.4, 650.2) controlPoint2: CGPointMake(87.02, 643.69)];
        [oval23Path addCurveToPoint: CGPointMake(26.42, 575.6) controlPoint1: CGPointMake(87.02, 607.34) controlPoint2: CGPointMake(11.96, 594.73)];
        [oval23Path addCurveToPoint: CGPointMake(169.06, 575.6) controlPoint1: CGPointMake(35.45, 563.67) controlPoint2: CGPointMake(154.59, 575.6)];
        [oval23Path addCurveToPoint: CGPointMake(212.88, 621.22) controlPoint1: CGPointMake(206.73, 575.6) controlPoint2: CGPointMake(212.88, 598.72)];
        [oval23Path closePath];
        [fogColor setFill];
        [oval23Path fill];


        //// Oval 25 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.26, 693.67);
        CGContextRotateCTM(context, -94.02 * M_PI / 180);

        UIBezierPath* oval25Path = [UIBezierPath bezierPath];
        [oval25Path moveToPoint: CGPointMake(-53.39, 14.27)];
        [oval25Path addCurveToPoint: CGPointMake(-13.78, 82.41) controlPoint1: CGPointMake(-53.39, 75.38) controlPoint2: CGPointMake(-47.82, 82.41)];
        [oval25Path addCurveToPoint: CGPointMake(41.39, 14.18) controlPoint1: CGPointMake(20.25, 82.41) controlPoint2: CGPointMake(11.06, 34.81)];
        [oval25Path addCurveToPoint: CGPointMake(41.39, -62.74) controlPoint1: CGPointMake(60.06, 1.47) controlPoint2: CGPointMake(54.46, -10.79)];
        [oval25Path addCurveToPoint: CGPointMake(-13.78, -77.74) controlPoint1: CGPointMake(33.23, -95.16) controlPoint2: CGPointMake(-0.7, -77.74)];
        [oval25Path addCurveToPoint: CGPointMake(-53.39, 14.27) controlPoint1: CGPointMake(-47.82, -77.74) controlPoint2: CGPointMake(-53.39, -46.85)];
        [oval25Path closePath];
        [fogColor setFill];
        [oval25Path fill];

        CGContextRestoreGState(context);


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPath];
        [oval26Path moveToPoint: CGPointMake(198.43, 680.5)];
        [oval26Path addCurveToPoint: CGPointMake(216.9, 736) controlPoint1: CGPointMake(198.43, 717.36) controlPoint2: CGPointMake(167.64, 736)];
        [oval26Path addCurveToPoint: CGPointMake(322, 698.54) controlPoint1: CGPointMake(266.15, 736) controlPoint2: CGPointMake(322, 735.4)];
        [oval26Path addCurveToPoint: CGPointMake(292.17, 656.91) controlPoint1: CGPointMake(322, 675.84) controlPoint2: CGPointMake(311.09, 688.25)];
        [oval26Path addCurveToPoint: CGPointMake(255.75, 625) controlPoint1: CGPointMake(280.37, 637.36) controlPoint2: CGPointMake(274.67, 625)];
        [oval26Path addCurveToPoint: CGPointMake(198.43, 680.5) controlPoint1: CGPointMake(206.5, 625) controlPoint2: CGPointMake(198.43, 643.64)];
        [oval26Path closePath];
        [fogColor setFill];
        [oval26Path fill];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPath];
        [oval24Path moveToPoint: CGPointMake(148.66, 732.7)];
        [oval24Path addCurveToPoint: CGPointMake(148.66, 688.88) controlPoint1: CGPointMake(134.74, 725.26) controlPoint2: CGPointMake(148.66, 701.98)];
        [oval24Path addCurveToPoint: CGPointMake(234.38, 660.16) controlPoint1: CGPointMake(148.66, 661.2) controlPoint2: CGPointMake(185.81, 660.16)];
        [oval24Path addCurveToPoint: CGPointMake(313.71, 679.56) controlPoint1: CGPointMake(282.94, 660.16) controlPoint2: CGPointMake(313.71, 651.88)];
        [oval24Path addCurveToPoint: CGPointMake(313.71, 720.83) controlPoint1: CGPointMake(313.71, 696.61) controlPoint2: CGPointMake(332.36, 697.3)];
        [oval24Path addCurveToPoint: CGPointMake(234.38, 732.7) controlPoint1: CGPointMake(302.07, 735.51) controlPoint2: CGPointMake(253.04, 732.7)];
        [oval24Path addCurveToPoint: CGPointMake(148.66, 732.7) controlPoint1: CGPointMake(208.8, 732.7) controlPoint2: CGPointMake(164.14, 740.98)];
        [oval24Path closePath];
        [fogColor setFill];
        [oval24Path fill];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(nightSkyGradient);
    CGGradientRelease(lightSideMoonGradient);
    CGGradientRelease(darkSideMoonGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas2
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* skyGradientColor2 = [UIColor colorWithRed: 0.325 green: 0.537 blue: 0.184 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* shadow3Color = [UIColor colorWithRed: 1 green: 0.838 blue: 0.351 alpha: 1];
    UIColor* shadow4Color = [UIColor colorWithRed: 1 green: 0.832 blue: 0.139 alpha: 1];
    UIColor* sunFrontShadowColor = [UIColor colorWithRed: 1 green: 0.93 blue: 0.503 alpha: 1];
    UIColor* daySkyGradientColor = [UIColor colorWithRed: 0.21 green: 0.622 blue: 1 alpha: 1];

    //// Gradient Declarations
    CGFloat daySkyGradientLocations[] = {0, 0.75, 1};
    CGGradientRef daySkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)daySkyGradientColor.CGColor, (id)[daySkyGradientColor blendedColorWithFraction: 0.5 ofColor: skyGradientColor2].CGColor, (id)skyGradientColor2.CGColor], daySkyGradientLocations);
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);

    //// Shadow Declarations
    NSShadow* sunFrontShadow = [[NSShadow alloc] init];
    [sunFrontShadow setShadowColor: [sunFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(sunFrontShadowColor.CGColor) * 0.7]];
    [sunFrontShadow setShadowOffset: CGSizeMake(24.1, 37.1)];
    [sunFrontShadow setShadowBlurRadius: 10];
    NSShadow* shadow3 = [[NSShadow alloc] init];
    [shadow3 setShadowColor: [shadow3Color colorWithAlphaComponent: CGColorGetAlpha(shadow3Color.CGColor) * 0.63]];
    [shadow3 setShadowOffset: CGSizeMake(-86.1, -16.1)];
    [shadow3 setShadowBlurRadius: 8];
    NSShadow* shadow4 = [[NSShadow alloc] init];
    [shadow4 setShadowColor: [shadow4Color colorWithAlphaComponent: CGColorGetAlpha(shadow4Color.CGColor) * 0.57]];
    [shadow4 setShadowOffset: CGSizeMake(52.1, -78.1)];
    [shadow4 setShadowBlurRadius: 8];

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
    CGContextSaveGState(context);
    [rectanglePath addClip];
    CGContextDrawLinearGradient(context, daySkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
    CGContextRestoreGState(context);


    //// Group 4
    {
        //// Group
        {
            //// Group 3
            {
                CGContextSaveGState(context);
                CGContextSetShadowWithColor(context, shadow3.shadowOffset, shadow3.shadowBlurRadius, [shadow3.shadowColor CGColor]);
                CGContextBeginTransparencyLayer(context, NULL);


                //// Group 2
                {
                    CGContextSaveGState(context);
                    CGContextSetShadowWithColor(context, shadow4.shadowOffset, shadow4.shadowBlurRadius, [shadow4.shadowColor CGColor]);
                    CGContextBeginTransparencyLayer(context, NULL);


                    //// Bezier Drawing
                    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
                    [bezierPath moveToPoint: CGPointMake(101.76, 61.28)];
                    [bezierPath addLineToPoint: CGPointMake(109.14, 47.5)];
                    [bezierPath addLineToPoint: CGPointMake(109.14, 65.88)];
                    [bezierPath addLineToPoint: CGPointMake(131.28, 32.19)];
                    [bezierPath addLineToPoint: CGPointMake(122.42, 70.47)];
                    [bezierPath addLineToPoint: CGPointMake(144.56, 61.28)];
                    [bezierPath addLineToPoint: CGPointMake(131.28, 78.12)];
                    [bezierPath addLineToPoint: CGPointMake(178.5, 65.88)];
                    [bezierPath addLineToPoint: CGPointMake(138.66, 96.5)];
                    [bezierPath addLineToPoint: CGPointMake(151.94, 101.09)];
                    [bezierPath addLineToPoint: CGPointMake(138.66, 108.75)];
                    [bezierPath addLineToPoint: CGPointMake(166.69, 136.31)];
                    [bezierPath addLineToPoint: CGPointMake(131.28, 122.53)];
                    [bezierPath addLineToPoint: CGPointMake(131.5, 136.5)];
                    [bezierPath addLineToPoint: CGPointMake(122.42, 131.72)];
                    [bezierPath addLineToPoint: CGPointMake(131.5, 161.5)];
                    [bezierPath addLineToPoint: CGPointMake(109.14, 136.31)];
                    [bezierPath addLineToPoint: CGPointMake(101.5, 152.5)];
                    [bezierPath addLineToPoint: CGPointMake(95.86, 136.31)];
                    [bezierPath addLineToPoint: CGPointMake(84.5, 169.5)];
                    [bezierPath addLineToPoint: CGPointMake(84.05, 136.31)];
                    [bezierPath addLineToPoint: CGPointMake(70.77, 140.91)];
                    [bezierPath addLineToPoint: CGPointMake(73.72, 125.59)];
                    [bezierPath addLineToPoint: CGPointMake(41.26, 147.03)];
                    [bezierPath addLineToPoint: CGPointMake(66.34, 113.34)];
                    [bezierPath addLineToPoint: CGPointMake(48.64, 108.75)];
                    [bezierPath addLineToPoint: CGPointMake(66.34, 101.09)];
                    [bezierPath addLineToPoint: CGPointMake(26.5, 70.47)];
                    [bezierPath addLineToPoint: CGPointMake(66.34, 84.25)];
                    [bezierPath addLineToPoint: CGPointMake(57.49, 70.47)];
                    [bezierPath addLineToPoint: CGPointMake(70.77, 78.12)];
                    [bezierPath addLineToPoint: CGPointMake(48.64, 32.19)];
                    [bezierPath addLineToPoint: CGPointMake(84.05, 70.47)];
                    [bezierPath addLineToPoint: CGPointMake(84.05, 56.69)];
                    [bezierPath addLineToPoint: CGPointMake(84.05, 56.69)];
                    [bezierPath addLineToPoint: CGPointMake(89.96, 65.88)];
                    [bezierPath addLineToPoint: CGPointMake(89.96, 23)];
                    [bezierPath addLineToPoint: CGPointMake(101.76, 61.28)];
                    [bezierPath closePath];
                    CGContextSaveGState(context);
                    CGContextSetShadowWithColor(context, sunFrontShadow.shadowOffset, sunFrontShadow.shadowBlurRadius, [sunFrontShadow.shadowColor CGColor]);
                    CGContextBeginTransparencyLayer(context, NULL);
                    [bezierPath addClip];
                    CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(102.5, 23), CGPointMake(102.5, 169.5), 0);
                    CGContextEndTransparencyLayer(context);
                    CGContextRestoreGState(context);

                    [color7 setStroke];
                    bezierPath.lineWidth = 1;
                    [bezierPath stroke];


                    //// Oval 77 Drawing
                    CGContextSaveGState(context);
                    CGContextTranslateCTM(context, 102.18, 101.14);
                    CGContextRotateCTM(context, -0.02 * M_PI / 180);

                    UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
                    CGContextSaveGState(context);
                    [oval77Path addClip];
                    CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
                    CGContextRestoreGState(context);
                    [color7 setStroke];
                    oval77Path.lineWidth = 1;
                    [oval77Path stroke];

                    CGContextRestoreGState(context);


                    //// Oval 78 Drawing
                    UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 72.5, 58.5, 56)];
                    [color7 setStroke];
                    oval78Path.lineWidth = 1;
                    [oval78Path stroke];


                    //// Oval 79 Drawing
                    UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(77.5, 73, 40.5, 44.5)];
                    [color7 setStroke];
                    oval79Path.lineWidth = 1;
                    [oval79Path stroke];


                    //// Oval 80 Drawing
                    UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(88.5, 80.5, 29.5, 31)];
                    [color7 setStroke];
                    oval80Path.lineWidth = 1;
                    [oval80Path stroke];


                    //// Oval 81 Drawing
                    UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(92.5, 90, 18, 20)];
                    [color7 setStroke];
                    oval81Path.lineWidth = 1;
                    [oval81Path stroke];


                    //// Oval 82 Drawing
                    UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(92.5, 93, 11.5, 14)];
                    [color7 setStroke];
                    oval82Path.lineWidth = 1;
                    [oval82Path stroke];


                    //// Oval 83 Drawing
                    UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(95.5, 95, 5.5, 6)];
                    [color7 setStroke];
                    oval83Path.lineWidth = 1;
                    [oval83Path stroke];


                    CGContextEndTransparencyLayer(context);
                    CGContextRestoreGState(context);
                }


                CGContextEndTransparencyLayer(context);
                CGContextRestoreGState(context);
            }
        }
    }


    //// Cleanup
    CGGradientRelease(daySkyGradient);
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas3
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* skyGradientColor2 = [UIColor colorWithRed: 0.325 green: 0.537 blue: 0.184 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* sunFrontShadowColor = [UIColor colorWithRed: 1 green: 0.93 blue: 0.503 alpha: 1];
    UIColor* daySkyGradientColor = [UIColor colorWithRed: 0.21 green: 0.622 blue: 1 alpha: 1];

    //// Gradient Declarations
    CGFloat daySkyGradientLocations[] = {0, 0.75, 1};
    CGGradientRef daySkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)daySkyGradientColor.CGColor, (id)[daySkyGradientColor blendedColorWithFraction: 0.5 ofColor: skyGradientColor2].CGColor, (id)skyGradientColor2.CGColor], daySkyGradientLocations);
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* sunFrontShadow = [[NSShadow alloc] init];
    [sunFrontShadow setShadowColor: [sunFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(sunFrontShadowColor.CGColor) * 0.7]];
    [sunFrontShadow setShadowOffset: CGSizeMake(24.1, 37.1)];
    [sunFrontShadow setShadowBlurRadius: 10];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Group 4
    {
        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
        CGContextSaveGState(context);
        [rectangle2Path addClip];
        CGContextDrawLinearGradient(context, daySkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunFrontShadow.shadowOffset, sunFrontShadow.shadowBlurRadius, [sunFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(84.76, 51.28)];
        [bezier2Path addLineToPoint: CGPointMake(92.14, 37.5)];
        [bezier2Path addLineToPoint: CGPointMake(92.14, 55.88)];
        [bezier2Path addLineToPoint: CGPointMake(114.28, 22.19)];
        [bezier2Path addLineToPoint: CGPointMake(105.42, 60.47)];
        [bezier2Path addLineToPoint: CGPointMake(127.56, 51.28)];
        [bezier2Path addLineToPoint: CGPointMake(114.28, 68.12)];
        [bezier2Path addLineToPoint: CGPointMake(161.5, 55.88)];
        [bezier2Path addLineToPoint: CGPointMake(121.66, 86.5)];
        [bezier2Path addLineToPoint: CGPointMake(134.94, 91.09)];
        [bezier2Path addLineToPoint: CGPointMake(121.66, 98.75)];
        [bezier2Path addLineToPoint: CGPointMake(149.69, 126.31)];
        [bezier2Path addLineToPoint: CGPointMake(114.28, 112.53)];
        [bezier2Path addLineToPoint: CGPointMake(114.5, 126.5)];
        [bezier2Path addLineToPoint: CGPointMake(105.42, 121.72)];
        [bezier2Path addLineToPoint: CGPointMake(114.5, 151.5)];
        [bezier2Path addLineToPoint: CGPointMake(92.14, 126.31)];
        [bezier2Path addLineToPoint: CGPointMake(84.5, 142.5)];
        [bezier2Path addLineToPoint: CGPointMake(78.86, 126.31)];
        [bezier2Path addLineToPoint: CGPointMake(67.5, 159.5)];
        [bezier2Path addLineToPoint: CGPointMake(67.05, 126.31)];
        [bezier2Path addLineToPoint: CGPointMake(53.77, 130.91)];
        [bezier2Path addLineToPoint: CGPointMake(56.72, 115.59)];
        [bezier2Path addLineToPoint: CGPointMake(24.26, 137.03)];
        [bezier2Path addLineToPoint: CGPointMake(49.34, 103.34)];
        [bezier2Path addLineToPoint: CGPointMake(31.64, 98.75)];
        [bezier2Path addLineToPoint: CGPointMake(49.34, 91.09)];
        [bezier2Path addLineToPoint: CGPointMake(9.5, 60.47)];
        [bezier2Path addLineToPoint: CGPointMake(49.34, 74.25)];
        [bezier2Path addLineToPoint: CGPointMake(40.49, 60.47)];
        [bezier2Path addLineToPoint: CGPointMake(53.77, 68.12)];
        [bezier2Path addLineToPoint: CGPointMake(31.64, 22.19)];
        [bezier2Path addLineToPoint: CGPointMake(67.05, 60.47)];
        [bezier2Path addLineToPoint: CGPointMake(67.05, 46.69)];
        [bezier2Path addLineToPoint: CGPointMake(67.05, 46.69)];
        [bezier2Path addLineToPoint: CGPointMake(72.96, 55.88)];
        [bezier2Path addLineToPoint: CGPointMake(72.96, 13)];
        [bezier2Path addLineToPoint: CGPointMake(84.76, 51.28)];
        [bezier2Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [bezier2Path addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(85.5, 13), CGPointMake(85.5, 159.5), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color7 setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];


        //// Oval 6 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 85.18, 91.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval6Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];

        CGContextRestoreGState(context);


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50.5, 62.5, 58.5, 56)];
        [color7 setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(60.5, 63, 40.5, 44.5)];
        [color7 setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 70.5, 29.5, 31)];
        [color7 setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75.5, 80, 18, 20)];
        [color7 setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75.5, 83, 11.5, 14)];
        [color7 setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(78.5, 85, 5.5, 6)];
        [color7 setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 5
        {
            //// Oval 19 Drawing
            UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(380, 57, 28, 19)];
            [color10 setFill];
            [oval19Path fill];
            [UIColor.darkGrayColor setStroke];
            oval19Path.lineWidth = 1;
            [oval19Path stroke];


            //// Oval 24 Drawing
            UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(326.5, 61.5, 33, 22)];
            [color10 setFill];
            [oval24Path fill];
            [UIColor.darkGrayColor setStroke];
            oval24Path.lineWidth = 1;
            [oval24Path stroke];


            //// Oval 25 Drawing
            UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(344, 60.5, 34, 23)];
            [color10 setFill];
            [oval25Path fill];
            [UIColor.darkGrayColor setStroke];
            oval25Path.lineWidth = 1;
            [oval25Path stroke];


            //// Oval 26 Drawing
            UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(359.5, 59, 28, 19)];
            [color10 setFill];
            [oval26Path fill];
            [UIColor.darkGrayColor setStroke];
            oval26Path.lineWidth = 1;
            [oval26Path stroke];


            //// Oval 27 Drawing
            UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(403, 62.5, 26, 18)];
            [color10 setFill];
            [oval27Path fill];
            [UIColor.darkGrayColor setStroke];
            oval27Path.lineWidth = 1;
            [oval27Path stroke];


            //// Oval 28 Drawing
            UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(380, 64.5, 31, 21)];
            [color10 setFill];
            [oval28Path fill];
            [UIColor.darkGrayColor setStroke];
            oval28Path.lineWidth = 1;
            [oval28Path stroke];
        }


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(16.5, 135.5, 31, 25)];
        [color10 setFill];
        [oval5Path fill];
        [UIColor.darkGrayColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 135.5, 36, 27)];
        [color10 setFill];
        [oval17Path fill];
        [UIColor.darkGrayColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(100.5, 146.5, 29, 22)];
        [color10 setFill];
        [oval18Path fill];
        [UIColor.darkGrayColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 135.5, 36, 27)];
        [color10 setFill];
        [oval9Path fill];
        [UIColor.darkGrayColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(47.5, 135.5, 37, 27)];
        [color10 setFill];
        [oval8Path fill];
        [UIColor.darkGrayColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 143, 38, 28)];
        [color10 setFill];
        [ovalPath fill];
        [UIColor.darkGrayColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(19.5, 146.5, 38, 26)];
        [color10 setFill];
        [oval2Path fill];
        [UIColor.darkGrayColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(35, 147, 29, 22)];
        [color10 setFill];
        [oval3Path fill];
        [UIColor.darkGrayColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 151.5, 26, 20)];
        [color10 setFill];
        [oval7Path fill];
        [UIColor.darkGrayColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(57.5, 151.5, 31, 25)];
        [color10 setFill];
        [oval4Path fill];
        [UIColor.darkGrayColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(252, 95, 30, 21)];
        [color10 setFill];
        [oval42Path fill];
        [UIColor.darkGrayColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(193, 95, 34, 22)];
        [color10 setFill];
        [oval43Path fill];
        [UIColor.darkGrayColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 104, 28, 19)];
        [color10 setFill];
        [oval44Path fill];
        [UIColor.darkGrayColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(193, 95, 34, 22)];
        [color10 setFill];
        [oval45Path fill];
        [UIColor.darkGrayColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(218, 95, 34, 22)];
        [color10 setFill];
        [oval46Path fill];
        [UIColor.darkGrayColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(261.5, 101.5, 36, 24)];
        [color10 setFill];
        [oval47Path fill];
        [UIColor.darkGrayColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243, 104, 36, 24)];
        [color10 setFill];
        [oval48Path fill];
        [UIColor.darkGrayColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(236.5, 104.5, 27, 19)];
        [color10 setFill];
        [oval49Path fill];
        [UIColor.darkGrayColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(197, 109, 25, 15)];
        [color10 setFill];
        [oval50Path fill];
        [UIColor.darkGrayColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(214, 109, 29, 21)];
        [color10 setFill];
        [oval51Path fill];
        [UIColor.darkGrayColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362.5, 148.5, 34, 21)];
        [color10 setFill];
        [oval16Path fill];
        [UIColor.darkGrayColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(396.5, 159.5, 30, 16)];
        [color10 setFill];
        [oval20Path fill];
        [UIColor.darkGrayColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(381.5, 156.5, 30, 17)];
        [color10 setFill];
        [oval21Path fill];
        [UIColor.darkGrayColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346, 156.5, 29, 20)];
        [color10 setFill];
        [oval22Path fill];
        [UIColor.darkGrayColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(286, 156.5, 34, 21)];
        [color10 setFill];
        [oval23Path fill];
        [UIColor.darkGrayColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];


        //// Oval 29 Drawing
        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(268, 165.5, 28, 18)];
        [color10 setFill];
        [oval29Path fill];
        [UIColor.darkGrayColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];


        //// Oval 30 Drawing
        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(286, 156.5, 34, 21)];
        [color10 setFill];
        [oval30Path fill];
        [UIColor.darkGrayColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 156.5, 35, 21)];
        [color10 setFill];
        [oval31Path fill];
        [UIColor.darkGrayColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(337, 165.5, 35, 22)];
        [color10 setFill];
        [oval32Path fill];
        [UIColor.darkGrayColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(290, 169.5, 25, 15)];
        [color10 setFill];
        [oval85Path fill];
        [UIColor.darkGrayColor setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(307, 169.5, 30, 20)];
        [color10 setFill];
        [oval86Path fill];
        [UIColor.darkGrayColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(329.5, 166, 27, 18)];
        [color10 setFill];
        [oval84Path fill];
        [UIColor.darkGrayColor setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(375.5, 167.5, 28, 15)];
        [color10 setFill];
        [oval33Path fill];
        [UIColor.darkGrayColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(346.5, 162.5, 35, 23)];
        [color10 setFill];
        [oval34Path fill];
        [UIColor.darkGrayColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(daySkyGradient);
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas5
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* skyGradientColor2 = [UIColor colorWithRed: 0.325 green: 0.537 blue: 0.184 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* sunFrontShadowColor = [UIColor colorWithRed: 1 green: 0.93 blue: 0.503 alpha: 1];
    UIColor* daySkyGradientColor = [UIColor colorWithRed: 0.21 green: 0.622 blue: 1 alpha: 1];

    //// Gradient Declarations
    CGFloat daySkyGradientLocations[] = {0, 0.75, 1};
    CGGradientRef daySkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)daySkyGradientColor.CGColor, (id)[daySkyGradientColor blendedColorWithFraction: 0.5 ofColor: skyGradientColor2].CGColor, (id)skyGradientColor2.CGColor], daySkyGradientLocations);
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* sunFrontShadow = [[NSShadow alloc] init];
    [sunFrontShadow setShadowColor: [sunFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(sunFrontShadowColor.CGColor) * 0.7]];
    [sunFrontShadow setShadowOffset: CGSizeMake(24.1, 37.1)];
    [sunFrontShadow setShadowBlurRadius: 10];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Group 7
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, daySkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
        CGContextRestoreGState(context);
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunFrontShadow.shadowOffset, sunFrontShadow.shadowBlurRadius, [sunFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(88.76, 50.28)];
        [bezierPath addLineToPoint: CGPointMake(96.14, 36.5)];
        [bezierPath addLineToPoint: CGPointMake(96.14, 54.88)];
        [bezierPath addLineToPoint: CGPointMake(118.28, 21.19)];
        [bezierPath addLineToPoint: CGPointMake(109.42, 59.47)];
        [bezierPath addLineToPoint: CGPointMake(131.56, 50.28)];
        [bezierPath addLineToPoint: CGPointMake(118.28, 67.12)];
        [bezierPath addLineToPoint: CGPointMake(165.5, 54.88)];
        [bezierPath addLineToPoint: CGPointMake(125.66, 85.5)];
        [bezierPath addLineToPoint: CGPointMake(138.94, 90.09)];
        [bezierPath addLineToPoint: CGPointMake(125.66, 97.75)];
        [bezierPath addLineToPoint: CGPointMake(153.69, 125.31)];
        [bezierPath addLineToPoint: CGPointMake(118.28, 111.53)];
        [bezierPath addLineToPoint: CGPointMake(118.5, 125.5)];
        [bezierPath addLineToPoint: CGPointMake(109.42, 120.72)];
        [bezierPath addLineToPoint: CGPointMake(118.5, 150.5)];
        [bezierPath addLineToPoint: CGPointMake(96.14, 125.31)];
        [bezierPath addLineToPoint: CGPointMake(88.5, 141.5)];
        [bezierPath addLineToPoint: CGPointMake(82.86, 125.31)];
        [bezierPath addLineToPoint: CGPointMake(71.5, 158.5)];
        [bezierPath addLineToPoint: CGPointMake(71.05, 125.31)];
        [bezierPath addLineToPoint: CGPointMake(57.77, 129.91)];
        [bezierPath addLineToPoint: CGPointMake(60.72, 114.59)];
        [bezierPath addLineToPoint: CGPointMake(28.26, 136.03)];
        [bezierPath addLineToPoint: CGPointMake(53.34, 102.34)];
        [bezierPath addLineToPoint: CGPointMake(35.64, 97.75)];
        [bezierPath addLineToPoint: CGPointMake(53.34, 90.09)];
        [bezierPath addLineToPoint: CGPointMake(13.5, 59.47)];
        [bezierPath addLineToPoint: CGPointMake(53.34, 73.25)];
        [bezierPath addLineToPoint: CGPointMake(44.49, 59.47)];
        [bezierPath addLineToPoint: CGPointMake(57.77, 67.12)];
        [bezierPath addLineToPoint: CGPointMake(35.64, 21.19)];
        [bezierPath addLineToPoint: CGPointMake(71.05, 59.47)];
        [bezierPath addLineToPoint: CGPointMake(71.05, 45.69)];
        [bezierPath addLineToPoint: CGPointMake(71.05, 45.69)];
        [bezierPath addLineToPoint: CGPointMake(76.96, 54.88)];
        [bezierPath addLineToPoint: CGPointMake(76.96, 12)];
        [bezierPath addLineToPoint: CGPointMake(88.76, 50.28)];
        [bezierPath closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [bezierPath addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(89.5, 12), CGPointMake(89.5, 158.5), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [color7 setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval 79 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 89.18, 90.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval79Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];

        CGContextRestoreGState(context);


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54.5, 61.5, 58.5, 56)];
        [color7 setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 62, 40.5, 44.5)];
        [color7 setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75.5, 69.5, 29.5, 31)];
        [color7 setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(79.5, 79, 18, 20)];
        [color7 setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(79.5, 82, 11.5, 14)];
        [color7 setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(82.5, 84, 5.5, 6)];
        [color7 setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 20
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 21
        {
            //// Oval 86 Drawing
            UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(213, 67.5, 31, 17)];
            [color10 setFill];
            [oval86Path fill];
            [UIColor.darkGrayColor setStroke];
            oval86Path.lineWidth = 1;
            [oval86Path stroke];


            //// Oval 87 Drawing
            UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(155.5, 64.5, 36, 20)];
            [color10 setFill];
            [oval87Path fill];
            [UIColor.darkGrayColor setStroke];
            oval87Path.lineWidth = 1;
            [oval87Path stroke];


            //// Oval 88 Drawing
            UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 70, 36, 21)];
            [color10 setFill];
            [oval88Path fill];
            [UIColor.darkGrayColor setStroke];
            oval88Path.lineWidth = 1;
            [oval88Path stroke];


            //// Oval 89 Drawing
            UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(191.5, 69.5, 30, 17)];
            [color10 setFill];
            [oval89Path fill];
            [UIColor.darkGrayColor setStroke];
            oval89Path.lineWidth = 1;
            [oval89Path stroke];


            //// Oval 90 Drawing
            UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(238, 72, 28, 16)];
            [color10 setFill];
            [oval90Path fill];
            [UIColor.darkGrayColor setStroke];
            oval90Path.lineWidth = 1;
            [oval90Path stroke];


            //// Oval 91 Drawing
            UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(213, 74, 33, 19)];
            [color10 setFill];
            [oval91Path fill];
            [UIColor.darkGrayColor setStroke];
            oval91Path.lineWidth = 1;
            [oval91Path stroke];
        }


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 22
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 23
        {
            //// Oval 92 Drawing
            UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(232, 53, 28, 19)];
            [color10 setFill];
            [oval92Path fill];
            [UIColor.darkGrayColor setStroke];
            oval92Path.lineWidth = 1;
            [oval92Path stroke];


            //// Oval 93 Drawing
            UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(178.5, 57.5, 33, 22)];
            [color10 setFill];
            [oval93Path fill];
            [UIColor.darkGrayColor setStroke];
            oval93Path.lineWidth = 1;
            [oval93Path stroke];


            //// Oval 94 Drawing
            UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(196, 56.5, 34, 23)];
            [color10 setFill];
            [oval94Path fill];
            [UIColor.darkGrayColor setStroke];
            oval94Path.lineWidth = 1;
            [oval94Path stroke];


            //// Oval 95 Drawing
            UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(211.5, 55, 28, 19)];
            [color10 setFill];
            [oval95Path fill];
            [UIColor.darkGrayColor setStroke];
            oval95Path.lineWidth = 1;
            [oval95Path stroke];


            //// Oval 96 Drawing
            UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(255, 58.5, 26, 18)];
            [color10 setFill];
            [oval96Path fill];
            [UIColor.darkGrayColor setStroke];
            oval96Path.lineWidth = 1;
            [oval96Path stroke];


            //// Oval 97 Drawing
            UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(232, 60.5, 31, 21)];
            [color10 setFill];
            [oval97Path fill];
            [UIColor.darkGrayColor setStroke];
            oval97Path.lineWidth = 1;
            [oval97Path stroke];
        }


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 24
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Group 25
        {
            //// Oval 98 Drawing
            UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(290, 53.5, 32, 20)];
            [color10 setFill];
            [oval98Path fill];
            [UIColor.darkGrayColor setStroke];
            oval98Path.lineWidth = 1;
            [oval98Path stroke];


            //// Oval 99 Drawing
            UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(230.5, 58, 37, 24)];
            [color10 setFill];
            [oval99Path fill];
            [UIColor.darkGrayColor setStroke];
            oval99Path.lineWidth = 1;
            [oval99Path stroke];


            //// Oval 100 Drawing
            UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250, 57, 38, 25)];
            [color10 setFill];
            [oval100Path fill];
            [UIColor.darkGrayColor setStroke];
            oval100Path.lineWidth = 1;
            [oval100Path stroke];


            //// Oval 101 Drawing
            UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267.5, 55.5, 31, 20)];
            [color10 setFill];
            [oval101Path fill];
            [UIColor.darkGrayColor setStroke];
            oval101Path.lineWidth = 1;
            [oval101Path stroke];


            //// Oval 102 Drawing
            UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(316, 59, 29, 20)];
            [color10 setFill];
            [oval102Path fill];
            [UIColor.darkGrayColor setStroke];
            oval102Path.lineWidth = 1;
            [oval102Path stroke];


            //// Oval 103 Drawing
            UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(290, 62, 35, 22)];
            [color10 setFill];
            [oval103Path fill];
            [UIColor.darkGrayColor setStroke];
            oval103Path.lineWidth = 1;
            [oval103Path stroke];
        }


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 26
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(393, 106.5, 36, 22)];
        [color10 setFill];
        [oval104Path fill];
        [UIColor.darkGrayColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 107.5, 32, 19)];
        [color10 setFill];
        [oval105Path fill];
        [UIColor.darkGrayColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343.5, 98.5, 40, 25)];
        [color10 setFill];
        [oval106Path fill];
        [UIColor.darkGrayColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(364, 103, 36, 23)];
        [color10 setFill];
        [oval107Path fill];
        [UIColor.darkGrayColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 31
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(63.5, 174.5, 34, 28)];
        [color10 setFill];
        [oval142Path fill];
        [UIColor.darkGrayColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(93.5, 173.5, 28, 24)];
        [color10 setFill];
        [oval143Path fill];
        [UIColor.darkGrayColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(47.5, 158.5, 35, 28)];
        [color10 setFill];
        [oval144Path fill];
        [UIColor.darkGrayColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 173, 32, 26)];
        [color10 setFill];
        [oval145Path fill];
        [UIColor.darkGrayColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(16.5, 180.5, 36, 29)];
        [color10 setFill];
        [oval146Path fill];
        [UIColor.darkGrayColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 184.5, 25, 21)];
        [color10 setFill];
        [oval147Path fill];
        [UIColor.darkGrayColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(72.5, 167.5, 25, 19)];
        [color10 setFill];
        [oval148Path fill];
        [UIColor.darkGrayColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22.5, 160.5, 30, 26)];
        [color10 setFill];
        [oval149Path fill];
        [UIColor.darkGrayColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(32.5, 170.5, 32, 25)];
        [color10 setFill];
        [oval150Path fill];
        [UIColor.darkGrayColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(34.5, 183.5, 28, 23)];
        [color10 setFill];
        [oval151Path fill];
        [UIColor.darkGrayColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(52.5, 179.5, 30, 26)];
        [color10 setFill];
        [oval152Path fill];
        [UIColor.darkGrayColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(140.5, 87, 30, 21)];
        [color10 setFill];
        [ovalPath fill];
        [UIColor.darkGrayColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 87, 34, 23)];
        [color10 setFill];
        [oval2Path fill];
        [UIColor.darkGrayColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(62.5, 95, 28, 20)];
        [color10 setFill];
        [oval3Path fill];
        [UIColor.darkGrayColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 87, 34, 23)];
        [color10 setFill];
        [oval4Path fill];
        [UIColor.darkGrayColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 87, 35, 23)];
        [color10 setFill];
        [oval5Path fill];
        [UIColor.darkGrayColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(150, 93.5, 36, 24)];
        [color10 setFill];
        [oval6Path fill];
        [UIColor.darkGrayColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(131.5, 95, 36, 25)];
        [color10 setFill];
        [oval7Path fill];
        [UIColor.darkGrayColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(124, 96.5, 28, 19)];
        [color10 setFill];
        [oval8Path fill];
        [UIColor.darkGrayColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(84.5, 100, 25, 17)];
        [color10 setFill];
        [oval9Path fill];
        [UIColor.darkGrayColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(101.5, 101, 30, 21)];
        [color10 setFill];
        [oval10Path fill];
        [UIColor.darkGrayColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76.5, 93, 30, 21)];
        [color10 setFill];
        [oval11Path fill];
        [UIColor.darkGrayColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15.5, 93, 34, 23)];
        [color10 setFill];
        [oval12Path fill];
        [UIColor.darkGrayColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-2.5, 101, 28, 20)];
        [color10 setFill];
        [oval13Path fill];
        [UIColor.darkGrayColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15.5, 93, 34, 23)];
        [color10 setFill];
        [oval14Path fill];
        [UIColor.darkGrayColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(40.5, 93, 36, 23)];
        [color10 setFill];
        [oval15Path fill];
        [UIColor.darkGrayColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 99.5, 36, 24)];
        [color10 setFill];
        [oval16Path fill];
        [UIColor.darkGrayColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 101, 36, 25)];
        [color10 setFill];
        [oval17Path fill];
        [UIColor.darkGrayColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(59, 102.5, 29, 19)];
        [color10 setFill];
        [oval18Path fill];
        [UIColor.darkGrayColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(19.5, 106, 25, 17)];
        [color10 setFill];
        [oval19Path fill];
        [UIColor.darkGrayColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(36.5, 107, 31, 21)];
        [color10 setFill];
        [oval20Path fill];
        [UIColor.darkGrayColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 30
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(252, 165, 30, 21)];
        [color10 setFill];
        [oval132Path fill];
        [UIColor.darkGrayColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(192, 165, 34, 22)];
        [color10 setFill];
        [oval133Path fill];
        [UIColor.darkGrayColor setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(174, 174, 28, 18)];
        [color10 setFill];
        [oval134Path fill];
        [UIColor.darkGrayColor setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(192, 165, 34, 22)];
        [color10 setFill];
        [oval135Path fill];
        [UIColor.darkGrayColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(217, 165, 35, 22)];
        [color10 setFill];
        [oval136Path fill];
        [UIColor.darkGrayColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(261.5, 171.5, 36, 24)];
        [color10 setFill];
        [oval137Path fill];
        [UIColor.darkGrayColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243, 174, 36, 23)];
        [color10 setFill];
        [oval138Path fill];
        [UIColor.darkGrayColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(235.5, 174.5, 28, 18)];
        [color10 setFill];
        [oval139Path fill];
        [UIColor.darkGrayColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(196, 178, 25, 16)];
        [color10 setFill];
        [oval140Path fill];
        [UIColor.darkGrayColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(213, 178, 30, 21)];
        [color10 setFill];
        [oval141Path fill];
        [UIColor.darkGrayColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 29
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(372.5, 169.5, 28, 22)];
        [color10 setFill];
        [oval128Path fill];
        [UIColor.darkGrayColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(320.5, 171, 25, 19)];
        [color10 setFill];
        [oval129Path fill];
        [UIColor.darkGrayColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(356.5, 170, 28, 22)];
        [color10 setFill];
        [oval130Path fill];
        [UIColor.darkGrayColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(340, 168.5, 32, 21)];
        [color10 setFill];
        [oval131Path fill];
        [UIColor.darkGrayColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 28
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 76.5, 30, 21)];
        [color10 setFill];
        [oval118Path fill];
        [UIColor.darkGrayColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(26, 76.5, 34, 23)];
        [color10 setFill];
        [oval119Path fill];
        [UIColor.darkGrayColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(8, 84.5, 28, 20)];
        [color10 setFill];
        [oval120Path fill];
        [UIColor.darkGrayColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(26, 76.5, 34, 23)];
        [color10 setFill];
        [oval121Path fill];
        [UIColor.darkGrayColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(51, 76.5, 35, 23)];
        [color10 setFill];
        [oval122Path fill];
        [UIColor.darkGrayColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(95.5, 83, 36, 24)];
        [color10 setFill];
        [oval123Path fill];
        [UIColor.darkGrayColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(77, 84.5, 36, 25)];
        [color10 setFill];
        [oval124Path fill];
        [UIColor.darkGrayColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69.5, 86, 28, 19)];
        [color10 setFill];
        [oval125Path fill];
        [UIColor.darkGrayColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(30, 89.5, 25, 17)];
        [color10 setFill];
        [oval126Path fill];
        [UIColor.darkGrayColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        //// Oval 127 Drawing
        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(47, 90.5, 30, 21)];
        [color10 setFill];
        [oval127Path fill];
        [UIColor.darkGrayColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(302, 154.5, 30, 20)];
        [color10 setFill];
        [oval21Path fill];
        [UIColor.darkGrayColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(242, 154.5, 34, 21)];
        [color10 setFill];
        [oval22Path fill];
        [UIColor.darkGrayColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(224, 162.5, 28, 18)];
        [color10 setFill];
        [oval23Path fill];
        [UIColor.darkGrayColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(242, 154.5, 34, 21)];
        [color10 setFill];
        [oval24Path fill];
        [UIColor.darkGrayColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267, 154.5, 35, 21)];
        [color10 setFill];
        [oval25Path fill];
        [UIColor.darkGrayColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311.5, 160, 36, 23)];
        [color10 setFill];
        [oval26Path fill];
        [UIColor.darkGrayColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(293, 162.5, 36, 22)];
        [color10 setFill];
        [oval27Path fill];
        [UIColor.darkGrayColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(285.5, 163, 28, 18)];
        [color10 setFill];
        [oval28Path fill];
        [UIColor.darkGrayColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 29 Drawing
        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(246, 166.5, 25, 15)];
        [color10 setFill];
        [oval29Path fill];
        [UIColor.darkGrayColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];


        //// Oval 30 Drawing
        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(263, 166.5, 30, 20)];
        [color10 setFill];
        [oval30Path fill];
        [UIColor.darkGrayColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 18
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(393, 90.5, 36, 24)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.darkGrayColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(364.5, 88.5, 36, 24)];
        [color10 setFill];
        [oval78Path fill];
        [UIColor.darkGrayColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(daySkyGradient);
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas12
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* skyGradientColor2 = [UIColor colorWithRed: 0.325 green: 0.537 blue: 0.184 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* color9 = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 1];
    UIColor* daySkyGradientColor = [UIColor colorWithRed: 0.21 green: 0.622 blue: 1 alpha: 1];
    UIColor* color4 = [UIColor colorWithRed: 0 green: 1 blue: 0.835 alpha: 0.623];

    //// Gradient Declarations
    CGFloat daySkyGradientLocations[] = {0, 0.75, 1};
    CGGradientRef daySkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)daySkyGradientColor.CGColor, (id)[daySkyGradientColor blendedColorWithFraction: 0.5 ofColor: skyGradientColor2].CGColor, (id)skyGradientColor2.CGColor], daySkyGradientLocations);
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Group 7
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(1, -1, 414, 736)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, daySkyGradient, CGPointMake(208, -1), CGPointMake(208, 735), 0);
        CGContextRestoreGState(context);
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 35.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(123.56, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(157.5, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 84.5)];
        [bezierPath addLineToPoint: CGPointMake(130.94, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(145.69, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 110.53)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 124.5)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 119.72)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 149.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(80.5, 140.5)];
        [bezierPath addLineToPoint: CGPointMake(74.86, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(63.5, 157.5)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 128.91)];
        [bezierPath addLineToPoint: CGPointMake(52.72, 113.59)];
        [bezierPath addLineToPoint: CGPointMake(20.26, 135.03)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 101.34)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(5.5, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 72.25)];
        [bezierPath addLineToPoint: CGPointMake(36.49, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 11)];
        [bezierPath addLineToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath closePath];
        CGContextSaveGState(context);
        [bezierPath addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(81.5, 11), CGPointMake(81.5, 157.5), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval 79 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.18, 89.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval79Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];

        CGContextRestoreGState(context);


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46.5, 60.5, 58.5, 56)];
        [color7 setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56.5, 61, 40.5, 44.5)];
        [color7 setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 68.5, 29.5, 31)];
        [color7 setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 78, 18, 20)];
        [color7 setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 81, 11.5, 14)];
        [color7 setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 83, 5.5, 6)];
        [color7 setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 90 Drawing
        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 116, 26, 15)];
        [color9 setFill];
        [oval90Path fill];
        [UIColor.darkGrayColor setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];


        //// Oval 96 Drawing
        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(344, 126.5, 25, 17)];
        [color9 setFill];
        [oval96Path fill];
        [UIColor.darkGrayColor setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 122, 36, 23)];
        [color9 setFill];
        [oval100Path fill];
        [UIColor.darkGrayColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(377, 129.5, 30, 19)];
        [color9 setFill];
        [oval98Path fill];
        [UIColor.darkGrayColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(355.5, 127.5, 30, 19)];
        [color9 setFill];
        [oval101Path fill];
        [UIColor.darkGrayColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(402, 124, 27, 19)];
        [color9 setFill];
        [oval102Path fill];
        [UIColor.darkGrayColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(377, 120, 33, 20)];
        [color9 setFill];
        [oval103Path fill];
        [UIColor.darkGrayColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(191.5, 106, 30, 20)];
        [color3 setFill];
        [ovalPath fill];
        [UIColor.darkGrayColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(131.5, 106, 34, 22)];
        [color3 setFill];
        [oval2Path fill];
        [UIColor.darkGrayColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(113.5, 114, 28, 18)];
        [color3 setFill];
        [oval3Path fill];
        [UIColor.darkGrayColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(131.5, 106, 34, 22)];
        [color3 setFill];
        [oval4Path fill];
        [UIColor.darkGrayColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(156.5, 106, 35, 22)];
        [color3 setFill];
        [oval5Path fill];
        [UIColor.darkGrayColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(201, 112.5, 36, 22)];
        [color3 setFill];
        [oval6Path fill];
        [UIColor.darkGrayColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(182.5, 114, 36, 23)];
        [color3 setFill];
        [oval7Path fill];
        [UIColor.darkGrayColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 114.5, 28, 18)];
        [color3 setFill];
        [oval8Path fill];
        [UIColor.darkGrayColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(135.5, 118, 25, 16)];
        [color3 setFill];
        [oval9Path fill];
        [UIColor.darkGrayColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(152.5, 119, 30, 20)];
        [color3 setFill];
        [oval10Path fill];
        [UIColor.darkGrayColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(115.5, 111, 30, 20)];
        [color3 setFill];
        [oval11Path fill];
        [UIColor.darkGrayColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 111, 34, 22)];
        [color3 setFill];
        [oval12Path fill];
        [UIColor.darkGrayColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(37.5, 119, 28, 18)];
        [color3 setFill];
        [oval13Path fill];
        [UIColor.darkGrayColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 111, 34, 22)];
        [color3 setFill];
        [oval14Path fill];
        [UIColor.darkGrayColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 111, 35, 22)];
        [color3 setFill];
        [oval15Path fill];
        [UIColor.darkGrayColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(125, 117.5, 36, 22)];
        [color3 setFill];
        [oval16Path fill];
        [UIColor.darkGrayColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(106.5, 119, 36, 23)];
        [color3 setFill];
        [oval17Path fill];
        [UIColor.darkGrayColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(99, 119.5, 28, 18)];
        [color3 setFill];
        [oval18Path fill];
        [UIColor.darkGrayColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(59.5, 123, 25, 16)];
        [color3 setFill];
        [oval19Path fill];
        [UIColor.darkGrayColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76.5, 124, 30, 20)];
        [color3 setFill];
        [oval20Path fill];
        [UIColor.darkGrayColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 28
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(130.5, 89.5, 25, 14.5)];
        [color10 setFill];
        [oval42Path fill];
        [UIColor.darkGrayColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 41 Drawing
        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109.5, 88.5, 26, 14)];
        [color10 setFill];
        [oval41Path fill];
        [UIColor.darkGrayColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(146, 94.5, 30, 20)];
        [color10 setFill];
        [oval118Path fill];
        [UIColor.darkGrayColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 94.5, 34, 22)];
        [color10 setFill];
        [oval119Path fill];
        [UIColor.darkGrayColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(68, 102.5, 28, 18)];
        [color10 setFill];
        [oval120Path fill];
        [UIColor.darkGrayColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 94.5, 34, 22)];
        [color10 setFill];
        [oval121Path fill];
        [UIColor.darkGrayColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(111, 94.5, 35, 22)];
        [color10 setFill];
        [oval122Path fill];
        [UIColor.darkGrayColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(155.5, 101, 36, 22)];
        [color10 setFill];
        [oval123Path fill];
        [UIColor.darkGrayColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(137, 102.5, 36, 23)];
        [color10 setFill];
        [oval124Path fill];
        [UIColor.darkGrayColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(129.5, 103, 28, 18)];
        [color10 setFill];
        [oval125Path fill];
        [UIColor.darkGrayColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 106.5, 25, 16)];
        [color10 setFill];
        [oval126Path fill];
        [UIColor.darkGrayColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        //// Oval 127 Drawing
        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(107, 107.5, 30, 20)];
        [color10 setFill];
        [oval127Path fill];
        [UIColor.darkGrayColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(302, 155.5, 30, 19)];
        [color3 setFill];
        [oval21Path fill];
        [UIColor.darkGrayColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267, 155.5, 35, 20)];
        [color3 setFill];
        [oval25Path fill];
        [UIColor.darkGrayColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311.5, 161, 36, 22)];
        [color3 setFill];
        [oval26Path fill];
        [UIColor.darkGrayColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(293, 163.5, 36, 21)];
        [color3 setFill];
        [oval27Path fill];
        [UIColor.darkGrayColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(285.5, 164, 28, 17)];
        [color3 setFill];
        [oval28Path fill];
        [UIColor.darkGrayColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343.5, 163.5, 26, 18)];
        [color3 setFill];
        [oval128Path fill];
        [UIColor.darkGrayColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(300.5, 171, 27, 19)];
        [color3 setFill];
        [oval129Path fill];
        [UIColor.darkGrayColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(335.5, 168, 30, 22)];
        [color3 setFill];
        [oval130Path fill];
        [UIColor.darkGrayColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(322, 169.5, 25.5, 20)];
        [color3 setFill];
        [oval131Path fill];
        [UIColor.darkGrayColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(256, 152.5, 34, 20)];
        [color3 setFill];
        [oval22Path fill];
        [UIColor.darkGrayColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(238, 160.5, 28, 17)];
        [color3 setFill];
        [oval23Path fill];
        [UIColor.darkGrayColor setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(256, 152.5, 34, 20)];
        [color3 setFill];
        [oval24Path fill];
        [UIColor.darkGrayColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 29 Drawing
        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 164.5, 25, 14)];
        [color3 setFill];
        [oval29Path fill];
        [UIColor.darkGrayColor setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];


        //// Oval 30 Drawing
        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(277, 164.5, 30, 19)];
        [color3 setFill];
        [oval30Path fill];
        [UIColor.darkGrayColor setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(266, 162, 30, 19)];
        [color3 setFill];
        [oval132Path fill];
        [UIColor.darkGrayColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(206, 162, 34, 20)];
        [color3 setFill];
        [oval133Path fill];
        [UIColor.darkGrayColor setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(188, 170, 28, 17)];
        [color3 setFill];
        [oval134Path fill];
        [UIColor.darkGrayColor setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(206, 162, 34, 20)];
        [color3 setFill];
        [oval135Path fill];
        [UIColor.darkGrayColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(231, 162, 35, 20)];
        [color3 setFill];
        [oval136Path fill];
        [UIColor.darkGrayColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(275.5, 167.5, 36, 22)];
        [color3 setFill];
        [oval137Path fill];
        [UIColor.darkGrayColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(257, 170, 36, 21)];
        [color3 setFill];
        [oval138Path fill];
        [UIColor.darkGrayColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(249.5, 170.5, 28, 17)];
        [color3 setFill];
        [oval139Path fill];
        [UIColor.darkGrayColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(210, 174, 25, 14)];
        [color3 setFill];
        [oval140Path fill];
        [UIColor.darkGrayColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(227, 174, 30, 19)];
        [color3 setFill];
        [oval141Path fill];
        [UIColor.darkGrayColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(214.5, 139.5, 30, 24)];
        [color10 setFill];
        [oval31Path fill];
        [UIColor.darkGrayColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(270.5, 139.5, 34, 26)];
        [color10 setFill];
        [oval32Path fill];
        [UIColor.darkGrayColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(294.5, 149.5, 28, 21)];
        [color10 setFill];
        [oval33Path fill];
        [UIColor.darkGrayColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(270.5, 139.5, 34, 26)];
        [color10 setFill];
        [oval34Path fill];
        [UIColor.darkGrayColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(244.5, 139.5, 35, 26)];
        [color10 setFill];
        [oval35Path fill];
        [UIColor.darkGrayColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(199, 147, 36, 27)];
        [color10 setFill];
        [oval36Path fill];
        [UIColor.darkGrayColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(217.5, 149.5, 36, 26)];
        [color10 setFill];
        [oval37Path fill];
        [UIColor.darkGrayColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(233, 150, 28, 21)];
        [color10 setFill];
        [oval38Path fill];
        [UIColor.darkGrayColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(275.5, 153.5, 25, 20)];
        [color10 setFill];
        [oval39Path fill];
        [UIColor.darkGrayColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253.5, 154.5, 30, 24)];
        [color10 setFill];
        [oval40Path fill];
        [UIColor.darkGrayColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15.5, 157, 30, 24)];
        [color9 setFill];
        [oval43Path fill];
        [UIColor.darkGrayColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 157, 34, 26)];
        [color9 setFill];
        [oval44Path fill];
        [UIColor.darkGrayColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(95.5, 167, 28, 21)];
        [color9 setFill];
        [oval45Path fill];
        [UIColor.darkGrayColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 157, 34, 26)];
        [color9 setFill];
        [oval46Path fill];
        [UIColor.darkGrayColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45.5, 157, 35, 26)];
        [color9 setFill];
        [oval47Path fill];
        [UIColor.darkGrayColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 164.5, 36, 27)];
        [color9 setFill];
        [oval48Path fill];
        [UIColor.darkGrayColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(18.5, 167, 36, 26)];
        [color9 setFill];
        [oval49Path fill];
        [UIColor.darkGrayColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(34, 167.5, 28, 21)];
        [color9 setFill];
        [oval50Path fill];
        [UIColor.darkGrayColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76.5, 171, 25, 20)];
        [color9 setFill];
        [oval51Path fill];
        [UIColor.darkGrayColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54.5, 172, 30, 24)];
        [color9 setFill];
        [oval52Path fill];
        [UIColor.darkGrayColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 103.5, 31, 17)];
        [color3 setFill];
        [oval86Path fill];
        [UIColor.darkGrayColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253.5, 103.5, 36, 20)];
        [color3 setFill];
        [oval87Path fill];
        [UIColor.darkGrayColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(273, 97, 36, 21)];
        [color3 setFill];
        [oval88Path fill];
        [UIColor.darkGrayColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(289.5, 101.5, 30, 17)];
        [color3 setFill];
        [oval89Path fill];
        [UIColor.darkGrayColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 91 Drawing
        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 95, 33, 19)];
        [color3 setFill];
        [oval91Path fill];
        [UIColor.darkGrayColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(330, 116, 28, 19)];
        [color3 setFill];
        [oval92Path fill];
        [UIColor.darkGrayColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(276.5, 108.5, 33, 22)];
        [color3 setFill];
        [oval93Path fill];
        [UIColor.darkGrayColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(294, 108.5, 34, 23)];
        [color3 setFill];
        [oval94Path fill];
        [UIColor.darkGrayColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309.5, 114, 28, 19)];
        [color3 setFill];
        [oval95Path fill];
        [UIColor.darkGrayColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        //// Oval 97 Drawing
        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(330, 106.5, 31, 21)];
        [color3 setFill];
        [oval97Path fill];
        [UIColor.darkGrayColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328.5, 106, 37, 24)];
        [color3 setFill];
        [oval99Path fill];
        [UIColor.darkGrayColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(349, 90.5, 29.5, 22)];
        [color10 setFill];
        [oval104Path fill];
        [UIColor.darkGrayColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295.5, 98.5, 32, 19)];
        [color10 setFill];
        [oval105Path fill];
        [UIColor.darkGrayColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311.5, 90.5, 38, 24)];
        [color10 setFill];
        [oval106Path fill];
        [UIColor.darkGrayColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327, 94, 36, 23)];
        [color10 setFill];
        [oval107Path fill];
        [UIColor.darkGrayColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(378, 94.5, 36, 24)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.darkGrayColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(354.5, 96.5, 36, 24)];
        [color10 setFill];
        [oval78Path fill];
        [UIColor.darkGrayColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 31
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(257.5, 75.5, 34, 28)];
        [color10 setFill];
        [oval142Path fill];
        [UIColor.darkGrayColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287.5, 74.5, 28, 24)];
        [color10 setFill];
        [oval143Path fill];
        [UIColor.darkGrayColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(241.5, 59.5, 35, 28)];
        [color10 setFill];
        [oval144Path fill];
        [UIColor.darkGrayColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(194, 74, 32, 26)];
        [color10 setFill];
        [oval145Path fill];
        [UIColor.darkGrayColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(210.5, 81.5, 36, 29)];
        [color10 setFill];
        [oval146Path fill];
        [UIColor.darkGrayColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(268.5, 85.5, 25, 21)];
        [color10 setFill];
        [oval147Path fill];
        [UIColor.darkGrayColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(266.5, 68.5, 25, 19)];
        [color10 setFill];
        [oval148Path fill];
        [UIColor.darkGrayColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(216.5, 61.5, 30, 26)];
        [color10 setFill];
        [oval149Path fill];
        [UIColor.darkGrayColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(226.5, 71.5, 32, 25)];
        [color10 setFill];
        [oval150Path fill];
        [UIColor.darkGrayColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(228.5, 84.5, 28, 23)];
        [color10 setFill];
        [oval151Path fill];
        [UIColor.darkGrayColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(246.5, 80.5, 30, 26)];
        [color10 setFill];
        [oval152Path fill];
        [UIColor.darkGrayColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69.5, 150, 28, 21)];
        [color10 setFill];
        [oval55Path fill];
        [UIColor.darkGrayColor setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0.5, 153.5, 34, 25)];
        [color10 setFill];
        [oval58Path fill];
        [UIColor.darkGrayColor setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(14.5, 147.5, 36, 26)];
        [color10 setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(41.5, 147.5, 28, 21)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.darkGrayColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50.5, 154, 25, 20)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.darkGrayColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(28.5, 155, 30, 24)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.darkGrayColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(39.5, 206.5)];
        [bezier2Path addCurveToPoint: CGPointMake(39.5, 276.5) controlPoint1: CGPointMake(38.5, 270.5) controlPoint2: CGPointMake(39.5, 276.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [bezier3Path moveToPoint: CGPointMake(82.5, 286.5)];
        [bezier3Path addCurveToPoint: CGPointMake(82.5, 356.5) controlPoint1: CGPointMake(81.5, 350.5) controlPoint2: CGPointMake(82.5, 356.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier3Path.lineWidth = 1;
        [bezier3Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [bezier4Path moveToPoint: CGPointMake(61.5, 412.5)];
        [bezier4Path addCurveToPoint: CGPointMake(61.5, 482.5) controlPoint1: CGPointMake(60.5, 476.5) controlPoint2: CGPointMake(61.5, 482.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier4Path.lineWidth = 1;
        [bezier4Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
        [bezier5Path moveToPoint: CGPointMake(129.5, 557.5)];
        [bezier5Path addCurveToPoint: CGPointMake(129.5, 627.5) controlPoint1: CGPointMake(128.5, 621.5) controlPoint2: CGPointMake(129.5, 627.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier5Path.lineWidth = 1;
        [bezier5Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
        [bezier6Path moveToPoint: CGPointMake(113.5, 136.5)];
        [bezier6Path addCurveToPoint: CGPointMake(113.5, 206.5) controlPoint1: CGPointMake(112.5, 200.5) controlPoint2: CGPointMake(113.5, 206.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier6Path.lineWidth = 1;
        [bezier6Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
        [bezier7Path moveToPoint: CGPointMake(330.5, 278.5)];
        [bezier7Path addCurveToPoint: CGPointMake(330.5, 348.5) controlPoint1: CGPointMake(329.5, 342.5) controlPoint2: CGPointMake(330.5, 348.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier7Path.lineWidth = 1;
        [bezier7Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
        [bezier8Path moveToPoint: CGPointMake(149.5, 226.5)];
        [bezier8Path addCurveToPoint: CGPointMake(149.5, 296.5) controlPoint1: CGPointMake(148.5, 290.5) controlPoint2: CGPointMake(149.5, 296.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier8Path.lineWidth = 1;
        [bezier8Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 9 Drawing
        UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
        [bezier9Path moveToPoint: CGPointMake(257.5, 356.5)];
        [bezier9Path addCurveToPoint: CGPointMake(257.5, 426.5) controlPoint1: CGPointMake(256.5, 420.5) controlPoint2: CGPointMake(257.5, 426.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier9Path.lineWidth = 1;
        [bezier9Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
        [bezier10Path moveToPoint: CGPointMake(257.5, 177.5)];
        [bezier10Path addCurveToPoint: CGPointMake(257.5, 247.5) controlPoint1: CGPointMake(256.5, 241.5) controlPoint2: CGPointMake(257.5, 247.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier10Path.lineWidth = 1;
        [bezier10Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 11 Drawing
        UIBezierPath* bezier11Path = [UIBezierPath bezierPath];
        [bezier11Path moveToPoint: CGPointMake(364.5, 136.5)];
        [bezier11Path addCurveToPoint: CGPointMake(364.5, 206.5) controlPoint1: CGPointMake(363.5, 200.5) controlPoint2: CGPointMake(364.5, 206.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier11Path.lineWidth = 1;
        [bezier11Path stroke];
        CGContextRestoreGState(context);
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 287.78, 510);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);



        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = [UIBezierPath bezierPath];
        [bezier12Path moveToPoint: CGPointMake(-258.57, -106.87)];
        [bezier12Path addCurveToPoint: CGPointMake(-258.57, -64.25) controlPoint1: CGPointMake(-260.04, -67.9) controlPoint2: CGPointMake(-258.57, -64.25)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier12Path.lineWidth = 1;
        [bezier12Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 13 Drawing
        UIBezierPath* bezier13Path = [UIBezierPath bezierPath];
        [bezier13Path moveToPoint: CGPointMake(-195.12, -58.16)];
        [bezier13Path addCurveToPoint: CGPointMake(-195.12, -15.53) controlPoint1: CGPointMake(-196.59, -19.18) controlPoint2: CGPointMake(-195.12, -15.53)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier13Path.lineWidth = 1;
        [bezier13Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = [UIBezierPath bezierPath];
        [bezier14Path moveToPoint: CGPointMake(-226.1, 18.57)];
        [bezier14Path addCurveToPoint: CGPointMake(-226.1, 61.2) controlPoint1: CGPointMake(-227.58, 57.55) controlPoint2: CGPointMake(-226.1, 61.2)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier14Path.lineWidth = 1;
        [bezier14Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 15 Drawing
        UIBezierPath* bezier15Path = [UIBezierPath bezierPath];
        [bezier15Path moveToPoint: CGPointMake(-125.77, 106.87)];
        [bezier15Path addCurveToPoint: CGPointMake(-125.77, 149.5) controlPoint1: CGPointMake(-127.24, 145.85) controlPoint2: CGPointMake(-125.77, 149.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier15Path.lineWidth = 1;
        [bezier15Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [bezier16Path moveToPoint: CGPointMake(-149.38, -149.5)];
        [bezier16Path addCurveToPoint: CGPointMake(-149.38, -106.87) controlPoint1: CGPointMake(-150.85, -110.53) controlPoint2: CGPointMake(-149.38, -106.87)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [bezier17Path moveToPoint: CGPointMake(15.88, 61.2)];
        [bezier17Path addCurveToPoint: CGPointMake(15.88, 103.83) controlPoint1: CGPointMake(14.41, 100.17) controlPoint2: CGPointMake(15.88, 103.83)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [bezier18Path moveToPoint: CGPointMake(-54.13, -52.68)];
        [bezier18Path addCurveToPoint: CGPointMake(-54.13, -10.05) controlPoint1: CGPointMake(-55.61, -13.71) controlPoint2: CGPointMake(-54.13, -10.05)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [bezier19Path moveToPoint: CGPointMake(-15.1, 2.74)];
        [bezier19Path addCurveToPoint: CGPointMake(-15.1, 45.37) controlPoint1: CGPointMake(-16.58, 41.71) controlPoint2: CGPointMake(-15.1, 45.37)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [bezier20Path moveToPoint: CGPointMake(63.2, -148.79)];
        [bezier20Path addCurveToPoint: CGPointMake(63.2, -106.16) controlPoint1: CGPointMake(61.72, -109.81) controlPoint2: CGPointMake(63.2, -106.16)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(126.22, -61.17)];
        [bezier21Path addCurveToPoint: CGPointMake(126.22, -18.55) controlPoint1: CGPointMake(124.75, -22.2) controlPoint2: CGPointMake(126.22, -18.55)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];
        CGContextRestoreGState(context);



        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(daySkyGradient);
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas14
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* skyGradientColor2 = [UIColor colorWithRed: 0.325 green: 0.537 blue: 0.184 alpha: 1];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color17 = [UIColor colorWithRed: 0.333 green: 0.333 blue: 0.333 alpha: 0.86];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* daySkyGradientColor = [UIColor colorWithRed: 0.21 green: 0.622 blue: 1 alpha: 1];
    UIColor* color4 = [UIColor colorWithRed: 0 green: 1 blue: 0.835 alpha: 0.623];
    UIColor* stromCloudOutline = [UIColor colorWithRed: 0.156 green: 0.155 blue: 0.155 alpha: 0.74];

    //// Gradient Declarations
    CGFloat daySkyGradientLocations[] = {0, 0.75, 1};
    CGGradientRef daySkyGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)daySkyGradientColor.CGColor, (id)[daySkyGradientColor blendedColorWithFraction: 0.5 ofColor: skyGradientColor2].CGColor, (id)skyGradientColor2.CGColor], daySkyGradientLocations);
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Group 7
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, daySkyGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
        CGContextRestoreGState(context);
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 35.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(123.56, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(157.5, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 84.5)];
        [bezierPath addLineToPoint: CGPointMake(130.94, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(145.69, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 110.53)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 124.5)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 119.72)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 149.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(80.5, 140.5)];
        [bezierPath addLineToPoint: CGPointMake(74.86, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(63.5, 157.5)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 128.91)];
        [bezierPath addLineToPoint: CGPointMake(52.72, 113.59)];
        [bezierPath addLineToPoint: CGPointMake(20.26, 135.03)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 101.34)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(5.5, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 72.25)];
        [bezierPath addLineToPoint: CGPointMake(36.49, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 11)];
        [bezierPath addLineToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath closePath];
        CGContextSaveGState(context);
        [bezierPath addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(81.5, 11), CGPointMake(81.5, 157.5), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval 79 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.18, 89.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval79Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];

        CGContextRestoreGState(context);


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46.5, 60.5, 58.5, 56)];
        [color7 setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56.5, 61, 40.5, 44.5)];
        [color7 setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 68.5, 29.5, 31)];
        [color7 setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 78, 18, 20)];
        [color7 setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 81, 11.5, 14)];
        [color7 setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 83, 5.5, 6)];
        [color7 setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 90 Drawing
        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 112, 26, 15)];
        [color17 setFill];
        [oval90Path fill];
        [stromCloudOutline setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];


        //// Oval 96 Drawing
        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(344, 122.5, 25, 17)];
        [color17 setFill];
        [oval96Path fill];
        [stromCloudOutline setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 118, 36, 23)];
        [color17 setFill];
        [oval100Path fill];
        [stromCloudOutline setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(377, 125.5, 30, 19)];
        [color17 setFill];
        [oval98Path fill];
        [stromCloudOutline setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(355.5, 123.5, 30, 19)];
        [color17 setFill];
        [oval101Path fill];
        [stromCloudOutline setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(402, 120, 27, 19)];
        [color17 setFill];
        [oval102Path fill];
        [stromCloudOutline setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(377, 116, 33, 20)];
        [color17 setFill];
        [oval103Path fill];
        [stromCloudOutline setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(191.5, 106, 30, 20)];
        [color3 setFill];
        [ovalPath fill];
        [UIColor.darkGrayColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(131.5, 106, 34, 22)];
        [color3 setFill];
        [oval2Path fill];
        [UIColor.darkGrayColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(113.5, 114, 28, 18)];
        [color3 setFill];
        [oval3Path fill];
        [UIColor.darkGrayColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(131.5, 106, 34, 22)];
        [color3 setFill];
        [oval4Path fill];
        [UIColor.darkGrayColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(156.5, 106, 35, 22)];
        [color3 setFill];
        [oval5Path fill];
        [UIColor.darkGrayColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(201, 112.5, 36, 22)];
        [color3 setFill];
        [oval6Path fill];
        [UIColor.darkGrayColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(182.5, 114, 36, 23)];
        [color3 setFill];
        [oval7Path fill];
        [UIColor.darkGrayColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 114.5, 28, 18)];
        [color3 setFill];
        [oval8Path fill];
        [UIColor.darkGrayColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(135.5, 118, 25, 16)];
        [color3 setFill];
        [oval9Path fill];
        [UIColor.darkGrayColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(152.5, 119, 30, 20)];
        [color3 setFill];
        [oval10Path fill];
        [UIColor.darkGrayColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(115.5, 113, 30, 20)];
        [color17 setFill];
        [oval11Path fill];
        [stromCloudOutline setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 113, 34, 22)];
        [color17 setFill];
        [oval12Path fill];
        [stromCloudOutline setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(37.5, 121, 28, 18)];
        [color17 setFill];
        [oval13Path fill];
        [stromCloudOutline setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(55.5, 113, 34, 22)];
        [color17 setFill];
        [oval14Path fill];
        [stromCloudOutline setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 113, 35, 22)];
        [color17 setFill];
        [oval15Path fill];
        [stromCloudOutline setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(125, 119.5, 36, 22)];
        [color17 setFill];
        [oval16Path fill];
        [stromCloudOutline setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(106.5, 121, 36, 23)];
        [color17 setFill];
        [oval17Path fill];
        [stromCloudOutline setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(99, 121.5, 28, 18)];
        [color17 setFill];
        [oval18Path fill];
        [stromCloudOutline setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(59.5, 125, 25, 16)];
        [color17 setFill];
        [oval19Path fill];
        [stromCloudOutline setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76.5, 126, 30, 20)];
        [color17 setFill];
        [oval20Path fill];
        [stromCloudOutline setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 28
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(130.5, 89.5, 25, 14.5)];
        [color3 setFill];
        [oval42Path fill];
        [stromCloudOutline setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 41 Drawing
        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109.5, 88.5, 26, 14)];
        [color3 setFill];
        [oval41Path fill];
        [stromCloudOutline setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(146, 94.5, 30, 20)];
        [color3 setFill];
        [oval118Path fill];
        [stromCloudOutline setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 94.5, 34, 22)];
        [color3 setFill];
        [oval119Path fill];
        [stromCloudOutline setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(68, 102.5, 28, 18)];
        [color3 setFill];
        [oval120Path fill];
        [stromCloudOutline setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 94.5, 34, 22)];
        [color3 setFill];
        [oval121Path fill];
        [stromCloudOutline setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(111, 94.5, 35, 22)];
        [color3 setFill];
        [oval122Path fill];
        [stromCloudOutline setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(155.5, 101, 36, 22)];
        [color3 setFill];
        [oval123Path fill];
        [stromCloudOutline setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(137, 102.5, 36, 23)];
        [color3 setFill];
        [oval124Path fill];
        [stromCloudOutline setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(129.5, 103, 28, 18)];
        [color3 setFill];
        [oval125Path fill];
        [stromCloudOutline setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90, 106.5, 25, 16)];
        [color3 setFill];
        [oval126Path fill];
        [stromCloudOutline setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        //// Oval 127 Drawing
        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(107, 107.5, 30, 20)];
        [color3 setFill];
        [oval127Path fill];
        [stromCloudOutline setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(256, 152.5, 34, 20)];
        [color17 setFill];
        [oval22Path fill];
        [stromCloudOutline setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(238, 160.5, 28, 17)];
        [color17 setFill];
        [oval23Path fill];
        [stromCloudOutline setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(256, 152.5, 34, 20)];
        [color17 setFill];
        [oval24Path fill];
        [stromCloudOutline setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 29 Drawing
        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(260, 164.5, 25, 14)];
        [color17 setFill];
        [oval29Path fill];
        [stromCloudOutline setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];


        //// Oval 30 Drawing
        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(277, 164.5, 30, 19)];
        [color17 setFill];
        [oval30Path fill];
        [stromCloudOutline setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(266, 162, 30, 19)];
        [color17 setFill];
        [oval132Path fill];
        [stromCloudOutline setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(206, 162, 34, 20)];
        [color17 setFill];
        [oval133Path fill];
        [stromCloudOutline setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(188, 170, 28, 17)];
        [color17 setFill];
        [oval134Path fill];
        [stromCloudOutline setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(206, 162, 34, 20)];
        [color17 setFill];
        [oval135Path fill];
        [stromCloudOutline setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(231, 162, 35, 20)];
        [color17 setFill];
        [oval136Path fill];
        [stromCloudOutline setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(275.5, 167.5, 36, 22)];
        [color17 setFill];
        [oval137Path fill];
        [stromCloudOutline setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(257, 170, 36, 21)];
        [color17 setFill];
        [oval138Path fill];
        [stromCloudOutline setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(249.5, 170.5, 28, 17)];
        [color17 setFill];
        [oval139Path fill];
        [stromCloudOutline setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(210, 174, 25, 14)];
        [color17 setFill];
        [oval140Path fill];
        [stromCloudOutline setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(227, 174, 30, 19)];
        [color17 setFill];
        [oval141Path fill];
        [stromCloudOutline setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15.5, 157, 30, 24)];
        [color17 setFill];
        [oval43Path fill];
        [stromCloudOutline setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 157, 34, 26)];
        [color17 setFill];
        [oval44Path fill];
        [stromCloudOutline setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(95.5, 167, 28, 21)];
        [color17 setFill];
        [oval45Path fill];
        [stromCloudOutline setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 157, 34, 26)];
        [color17 setFill];
        [oval46Path fill];
        [stromCloudOutline setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45.5, 157, 35, 26)];
        [color17 setFill];
        [oval47Path fill];
        [stromCloudOutline setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 164.5, 36, 27)];
        [color17 setFill];
        [oval48Path fill];
        [stromCloudOutline setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(18.5, 167, 36, 26)];
        [color17 setFill];
        [oval49Path fill];
        [stromCloudOutline setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(34, 167.5, 28, 21)];
        [color17 setFill];
        [oval50Path fill];
        [stromCloudOutline setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(76.5, 171, 25, 20)];
        [color17 setFill];
        [oval51Path fill];
        [stromCloudOutline setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54.5, 172, 30, 24)];
        [color17 setFill];
        [oval52Path fill];
        [stromCloudOutline setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(316, 110.5, 34, 18)];
        [color17 setFill];
        [oval86Path fill];
        [stromCloudOutline setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253.5, 110.5, 39, 21)];
        [color17 setFill];
        [oval87Path fill];
        [stromCloudOutline setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(275, 104, 39, 22)];
        [color17 setFill];
        [oval88Path fill];
        [stromCloudOutline setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(292.5, 108.5, 33, 18)];
        [color17 setFill];
        [oval89Path fill];
        [stromCloudOutline setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 91 Drawing
        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(316, 102, 36, 20)];
        [color17 setFill];
        [oval91Path fill];
        [stromCloudOutline setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(337, 124, 30, 20)];
        [color17 setFill];
        [oval92Path fill];
        [stromCloudOutline setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(278.5, 116.5, 36, 23)];
        [color17 setFill];
        [oval93Path fill];
        [stromCloudOutline setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(298, 116.5, 37, 24)];
        [color17 setFill];
        [oval94Path fill];
        [stromCloudOutline setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(314.5, 122, 31, 20)];
        [color17 setFill];
        [oval95Path fill];
        [stromCloudOutline setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        //// Oval 97 Drawing
        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(337, 114.5, 34, 22)];
        [color17 setFill];
        [oval97Path fill];
        [stromCloudOutline setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(335.5, 114, 40, 25)];
        [color17 setFill];
        [oval99Path fill];
        [stromCloudOutline setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 27
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 108 Drawing
        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 155.5, 30, 24)];
        [color17 setFill];
        [oval108Path fill];
        [stromCloudOutline setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(123.5, 155.5, 34, 26)];
        [color17 setFill];
        [oval109Path fill];
        [stromCloudOutline setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(147.5, 165.5, 28, 21)];
        [color17 setFill];
        [oval110Path fill];
        [stromCloudOutline setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(123.5, 155.5, 34, 26)];
        [color17 setFill];
        [oval111Path fill];
        [stromCloudOutline setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(97.5, 155.5, 35, 26)];
        [color17 setFill];
        [oval112Path fill];
        [stromCloudOutline setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(52, 163, 36, 27)];
        [color17 setFill];
        [oval113Path fill];
        [stromCloudOutline setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(70.5, 165.5, 36, 26)];
        [color17 setFill];
        [oval114Path fill];
        [stromCloudOutline setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 115 Drawing
        UIBezierPath* oval115Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(86, 166, 28, 21)];
        [color17 setFill];
        [oval115Path fill];
        [stromCloudOutline setStroke];
        oval115Path.lineWidth = 1;
        [oval115Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(128.5, 169.5, 25, 20)];
        [color17 setFill];
        [oval116Path fill];
        [stromCloudOutline setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(106.5, 170.5, 30, 24)];
        [color17 setFill];
        [oval117Path fill];
        [stromCloudOutline setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(40.5, 205.5)];
        [bezier2Path addCurveToPoint: CGPointMake(40.5, 275.5) controlPoint1: CGPointMake(39.5, 269.5) controlPoint2: CGPointMake(40.5, 275.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [bezier3Path moveToPoint: CGPointMake(83.5, 285.5)];
        [bezier3Path addCurveToPoint: CGPointMake(83.5, 355.5) controlPoint1: CGPointMake(82.5, 349.5) controlPoint2: CGPointMake(83.5, 355.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier3Path.lineWidth = 1;
        [bezier3Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [bezier4Path moveToPoint: CGPointMake(62.5, 411.5)];
        [bezier4Path addCurveToPoint: CGPointMake(62.5, 481.5) controlPoint1: CGPointMake(61.5, 475.5) controlPoint2: CGPointMake(62.5, 481.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier4Path.lineWidth = 1;
        [bezier4Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
        [bezier5Path moveToPoint: CGPointMake(130.5, 556.5)];
        [bezier5Path addCurveToPoint: CGPointMake(130.5, 626.5) controlPoint1: CGPointMake(129.5, 620.5) controlPoint2: CGPointMake(130.5, 626.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier5Path.lineWidth = 1;
        [bezier5Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
        [bezier6Path moveToPoint: CGPointMake(114.5, 135.5)];
        [bezier6Path addCurveToPoint: CGPointMake(114.5, 205.5) controlPoint1: CGPointMake(113.5, 199.5) controlPoint2: CGPointMake(114.5, 205.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier6Path.lineWidth = 1;
        [bezier6Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
        [bezier7Path moveToPoint: CGPointMake(331.5, 277.5)];
        [bezier7Path addCurveToPoint: CGPointMake(331.5, 347.5) controlPoint1: CGPointMake(330.5, 341.5) controlPoint2: CGPointMake(331.5, 347.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier7Path.lineWidth = 1;
        [bezier7Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
        [bezier8Path moveToPoint: CGPointMake(150.5, 225.5)];
        [bezier8Path addCurveToPoint: CGPointMake(150.5, 295.5) controlPoint1: CGPointMake(149.5, 289.5) controlPoint2: CGPointMake(150.5, 295.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier8Path.lineWidth = 1;
        [bezier8Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 9 Drawing
        UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
        [bezier9Path moveToPoint: CGPointMake(258.5, 355.5)];
        [bezier9Path addCurveToPoint: CGPointMake(258.5, 425.5) controlPoint1: CGPointMake(257.5, 419.5) controlPoint2: CGPointMake(258.5, 425.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier9Path.lineWidth = 1;
        [bezier9Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
        [bezier10Path moveToPoint: CGPointMake(258.5, 176.5)];
        [bezier10Path addCurveToPoint: CGPointMake(258.5, 246.5) controlPoint1: CGPointMake(257.5, 240.5) controlPoint2: CGPointMake(258.5, 246.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier10Path.lineWidth = 1;
        [bezier10Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 11 Drawing
        UIBezierPath* bezier11Path = [UIBezierPath bezierPath];
        [bezier11Path moveToPoint: CGPointMake(365.5, 135.5)];
        [bezier11Path addCurveToPoint: CGPointMake(365.5, 205.5) controlPoint1: CGPointMake(364.5, 199.5) controlPoint2: CGPointMake(365.5, 205.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier11Path.lineWidth = 1;
        [bezier11Path stroke];
        CGContextRestoreGState(context);
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 287.78, 510);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);



        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = [UIBezierPath bezierPath];
        [bezier12Path moveToPoint: CGPointMake(-258.57, -106.87)];
        [bezier12Path addCurveToPoint: CGPointMake(-258.57, -64.25) controlPoint1: CGPointMake(-260.04, -67.9) controlPoint2: CGPointMake(-258.57, -64.25)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier12Path.lineWidth = 1;
        [bezier12Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 13 Drawing
        UIBezierPath* bezier13Path = [UIBezierPath bezierPath];
        [bezier13Path moveToPoint: CGPointMake(-195.12, -58.16)];
        [bezier13Path addCurveToPoint: CGPointMake(-195.12, -15.53) controlPoint1: CGPointMake(-196.59, -19.18) controlPoint2: CGPointMake(-195.12, -15.53)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier13Path.lineWidth = 1;
        [bezier13Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = [UIBezierPath bezierPath];
        [bezier14Path moveToPoint: CGPointMake(-226.1, 18.57)];
        [bezier14Path addCurveToPoint: CGPointMake(-226.1, 61.2) controlPoint1: CGPointMake(-227.58, 57.55) controlPoint2: CGPointMake(-226.1, 61.2)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier14Path.lineWidth = 1;
        [bezier14Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 15 Drawing
        UIBezierPath* bezier15Path = [UIBezierPath bezierPath];
        [bezier15Path moveToPoint: CGPointMake(-125.77, 106.87)];
        [bezier15Path addCurveToPoint: CGPointMake(-125.77, 149.5) controlPoint1: CGPointMake(-127.24, 145.85) controlPoint2: CGPointMake(-125.77, 149.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier15Path.lineWidth = 1;
        [bezier15Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [bezier16Path moveToPoint: CGPointMake(-149.38, -149.5)];
        [bezier16Path addCurveToPoint: CGPointMake(-149.38, -106.87) controlPoint1: CGPointMake(-150.85, -110.53) controlPoint2: CGPointMake(-149.38, -106.87)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [bezier17Path moveToPoint: CGPointMake(15.88, 61.2)];
        [bezier17Path addCurveToPoint: CGPointMake(15.88, 103.83) controlPoint1: CGPointMake(14.41, 100.17) controlPoint2: CGPointMake(15.88, 103.83)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [bezier18Path moveToPoint: CGPointMake(-54.13, -52.68)];
        [bezier18Path addCurveToPoint: CGPointMake(-54.13, -10.05) controlPoint1: CGPointMake(-55.61, -13.71) controlPoint2: CGPointMake(-54.13, -10.05)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [bezier19Path moveToPoint: CGPointMake(-15.1, 2.74)];
        [bezier19Path addCurveToPoint: CGPointMake(-15.1, 45.37) controlPoint1: CGPointMake(-16.58, 41.71) controlPoint2: CGPointMake(-15.1, 45.37)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [bezier20Path moveToPoint: CGPointMake(63.2, -148.79)];
        [bezier20Path addCurveToPoint: CGPointMake(63.2, -106.16) controlPoint1: CGPointMake(61.72, -109.81) controlPoint2: CGPointMake(63.2, -106.16)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(126.22, -61.17)];
        [bezier21Path addCurveToPoint: CGPointMake(126.22, -18.55) controlPoint1: CGPointMake(124.75, -22.2) controlPoint2: CGPointMake(126.22, -18.55)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];
        CGContextRestoreGState(context);



        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 75 Drawing
        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(82.5, 159.5, 24, 17)];
        [color3 setFill];
        [oval75Path fill];
        [stromCloudOutline setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 157, 31, 23)];
        [color3 setFill];
        [oval55Path fill];
        [stromCloudOutline setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-6.5, 161.5, 38, 27)];
        [color3 setFill];
        [oval58Path fill];
        [stromCloudOutline setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(9.5, 154.5, 39, 28)];
        [color3 setFill];
        [oval59Path fill];
        [stromCloudOutline setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(38.5, 154.5, 31, 23)];
        [color3 setFill];
        [oval60Path fill];
        [stromCloudOutline setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 162, 28, 22)];
        [color3 setFill];
        [oval61Path fill];
        [stromCloudOutline setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24.5, 163, 33, 26)];
        [color3 setFill];
        [oval62Path fill];
        [stromCloudOutline setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 74 Drawing
        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 162, 28, 22)];
        [color3 setFill];
        [oval74Path fill];
        [stromCloudOutline setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 167.5, 24, 17)];
        [color3 setFill];
        [oval76Path fill];
        [stromCloudOutline setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 14
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 53 Drawing
        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(17, 72, 34, 28)];
        [color3 setFill];
        [oval53Path fill];
        [stromCloudOutline setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0, 75, 28, 24)];
        [color3 setFill];
        [oval54Path fill];
        [stromCloudOutline setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(39, 60, 35, 28)];
        [color3 setFill];
        [oval56Path fill];
        [stromCloudOutline setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(79, 74, 32, 26)];
        [color3 setFill];
        [oval57Path fill];
        [stromCloudOutline setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Oval 63 Drawing
        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22, 83, 25, 21)];
        [color3 setFill];
        [oval63Path fill];
        [stromCloudOutline setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];


        //// Oval 64 Drawing
        UIBezierPath* oval64Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24, 69, 25, 19)];
        [color3 setFill];
        [oval64Path fill];
        [stromCloudOutline setStroke];
        oval64Path.lineWidth = 1;
        [oval64Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69, 67, 30, 26)];
        [color3 setFill];
        [oval65Path fill];
        [stromCloudOutline setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(57, 75, 32, 25)];
        [color3 setFill];
        [oval66Path fill];
        [stromCloudOutline setStroke];
        oval66Path.lineWidth = 1;
        [oval66Path stroke];


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(39, 77, 30, 26)];
        [color3 setFill];
        [oval67Path fill];
        [stromCloudOutline setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 15
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 68 Drawing
        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(303.5, 93, 29.5, 26)];
        [color3 setFill];
        [oval68Path fill];
        [stromCloudOutline setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];


        //// Oval 69 Drawing
        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250, 102, 32, 22)];
        [color3 setFill];
        [oval69Path fill];
        [stromCloudOutline setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];


        //// Oval 70 Drawing
        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(266, 93, 38, 28)];
        [color3 setFill];
        [oval70Path fill];
        [stromCloudOutline setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];


        //// Oval 71 Drawing
        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(281.5, 97.5, 36, 26)];
        [color3 setFill];
        [oval71Path fill];
        [stromCloudOutline setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];


        //// Oval 72 Drawing
        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(332.5, 98, 36, 28)];
        [color3 setFill];
        [oval72Path fill];
        [stromCloudOutline setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];


        //// Oval 73 Drawing
        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309, 100, 36, 28)];
        [color3 setFill];
        [oval73Path fill];
        [stromCloudOutline setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 153 Drawing
        UIBezierPath* oval153Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(358, 85.5, 29.5, 26)];
        [color3 setFill];
        [oval153Path fill];
        [stromCloudOutline setStroke];
        oval153Path.lineWidth = 1;
        [oval153Path stroke];


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343, 85.5, 29.5, 26)];
        [color3 setFill];
        [oval104Path fill];
        [stromCloudOutline setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(295.5, 94.5, 32, 22)];
        [color3 setFill];
        [oval105Path fill];
        [stromCloudOutline setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311.5, 85.5, 38, 28)];
        [color3 setFill];
        [oval106Path fill];
        [stromCloudOutline setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327, 90, 36, 26)];
        [color3 setFill];
        [oval107Path fill];
        [stromCloudOutline setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(375, 94.5, 36, 24)];
        [color3 setFill];
        [oval77Path fill];
        [stromCloudOutline setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(354.5, 96.5, 36, 24)];
        [color3 setFill];
        [oval78Path fill];
        [stromCloudOutline setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 16
    {
        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(11.5, 264.5)];
        [bezier22Path addCurveToPoint: CGPointMake(11.5, 334.5) controlPoint1: CGPointMake(10.5, 328.5) controlPoint2: CGPointMake(11.5, 334.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 23 Drawing
        UIBezierPath* bezier23Path = [UIBezierPath bezierPath];
        [bezier23Path moveToPoint: CGPointMake(54.5, 344.5)];
        [bezier23Path addCurveToPoint: CGPointMake(54.5, 414.5) controlPoint1: CGPointMake(53.5, 408.5) controlPoint2: CGPointMake(54.5, 414.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier23Path.lineWidth = 1;
        [bezier23Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = [UIBezierPath bezierPath];
        [bezier24Path moveToPoint: CGPointMake(33.5, 470.5)];
        [bezier24Path addCurveToPoint: CGPointMake(33.5, 540.5) controlPoint1: CGPointMake(32.5, 534.5) controlPoint2: CGPointMake(33.5, 540.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier24Path.lineWidth = 1;
        [bezier24Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 25 Drawing
        UIBezierPath* bezier25Path = [UIBezierPath bezierPath];
        [bezier25Path moveToPoint: CGPointMake(101.5, 615.5)];
        [bezier25Path addCurveToPoint: CGPointMake(101.5, 685.5) controlPoint1: CGPointMake(100.5, 679.5) controlPoint2: CGPointMake(101.5, 685.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier25Path.lineWidth = 1;
        [bezier25Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = [UIBezierPath bezierPath];
        [bezier26Path moveToPoint: CGPointMake(85.5, 194.5)];
        [bezier26Path addCurveToPoint: CGPointMake(85.5, 264.5) controlPoint1: CGPointMake(84.5, 258.5) controlPoint2: CGPointMake(85.5, 264.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier26Path.lineWidth = 1;
        [bezier26Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 27 Drawing
        UIBezierPath* bezier27Path = [UIBezierPath bezierPath];
        [bezier27Path moveToPoint: CGPointMake(302.5, 336.5)];
        [bezier27Path addCurveToPoint: CGPointMake(302.5, 406.5) controlPoint1: CGPointMake(301.5, 400.5) controlPoint2: CGPointMake(302.5, 406.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier27Path.lineWidth = 1;
        [bezier27Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = [UIBezierPath bezierPath];
        [bezier28Path moveToPoint: CGPointMake(121.5, 284.5)];
        [bezier28Path addCurveToPoint: CGPointMake(121.5, 354.5) controlPoint1: CGPointMake(120.5, 348.5) controlPoint2: CGPointMake(121.5, 354.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier28Path.lineWidth = 1;
        [bezier28Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 29 Drawing
        UIBezierPath* bezier29Path = [UIBezierPath bezierPath];
        [bezier29Path moveToPoint: CGPointMake(229.5, 414.5)];
        [bezier29Path addCurveToPoint: CGPointMake(229.5, 484.5) controlPoint1: CGPointMake(228.5, 478.5) controlPoint2: CGPointMake(229.5, 484.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier29Path.lineWidth = 1;
        [bezier29Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 30 Drawing
        UIBezierPath* bezier30Path = [UIBezierPath bezierPath];
        [bezier30Path moveToPoint: CGPointMake(229.5, 235.5)];
        [bezier30Path addCurveToPoint: CGPointMake(229.5, 305.5) controlPoint1: CGPointMake(228.5, 299.5) controlPoint2: CGPointMake(229.5, 305.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier30Path.lineWidth = 1;
        [bezier30Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 31 Drawing
        UIBezierPath* bezier31Path = [UIBezierPath bezierPath];
        [bezier31Path moveToPoint: CGPointMake(336.5, 194.5)];
        [bezier31Path addCurveToPoint: CGPointMake(336.5, 264.5) controlPoint1: CGPointMake(335.5, 258.5) controlPoint2: CGPointMake(336.5, 264.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier31Path.lineWidth = 1;
        [bezier31Path stroke];
        CGContextRestoreGState(context);
    }


    //// Group 17
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 371.78, 376);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);



        //// Bezier 32 Drawing
        UIBezierPath* bezier32Path = [UIBezierPath bezierPath];
        [bezier32Path moveToPoint: CGPointMake(-258.73, -106.87)];
        [bezier32Path addCurveToPoint: CGPointMake(-258.73, -64.25) controlPoint1: CGPointMake(-259.84, -67.9) controlPoint2: CGPointMake(-258.73, -64.25)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier32Path.lineWidth = 1;
        [bezier32Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 33 Drawing
        UIBezierPath* bezier33Path = [UIBezierPath bezierPath];
        [bezier33Path moveToPoint: CGPointMake(-211.25, -58.16)];
        [bezier33Path addCurveToPoint: CGPointMake(-211.25, -15.53) controlPoint1: CGPointMake(-212.35, -19.18) controlPoint2: CGPointMake(-211.25, -15.53)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier33Path.lineWidth = 1;
        [bezier33Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = [UIBezierPath bezierPath];
        [bezier34Path moveToPoint: CGPointMake(-234.44, 18.57)];
        [bezier34Path addCurveToPoint: CGPointMake(-234.44, 61.2) controlPoint1: CGPointMake(-235.54, 57.55) controlPoint2: CGPointMake(-234.44, 61.2)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier34Path.lineWidth = 1;
        [bezier34Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 35 Drawing
        UIBezierPath* bezier35Path = [UIBezierPath bezierPath];
        [bezier35Path moveToPoint: CGPointMake(-159.35, 106.87)];
        [bezier35Path addCurveToPoint: CGPointMake(-159.35, 149.5) controlPoint1: CGPointMake(-160.46, 145.85) controlPoint2: CGPointMake(-159.35, 149.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier35Path.lineWidth = 1;
        [bezier35Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = [UIBezierPath bezierPath];
        [bezier36Path moveToPoint: CGPointMake(-177.02, -149.5)];
        [bezier36Path addCurveToPoint: CGPointMake(-177.02, -106.87) controlPoint1: CGPointMake(-178.12, -110.53) controlPoint2: CGPointMake(-177.02, -106.87)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier36Path.lineWidth = 1;
        [bezier36Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 37 Drawing
        UIBezierPath* bezier37Path = [UIBezierPath bezierPath];
        [bezier37Path moveToPoint: CGPointMake(-53.35, 61.2)];
        [bezier37Path addCurveToPoint: CGPointMake(-53.35, 103.83) controlPoint1: CGPointMake(-54.45, 100.17) controlPoint2: CGPointMake(-53.35, 103.83)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier37Path.lineWidth = 1;
        [bezier37Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = [UIBezierPath bezierPath];
        [bezier38Path moveToPoint: CGPointMake(-105.75, -52.68)];
        [bezier38Path addCurveToPoint: CGPointMake(-105.75, -10.05) controlPoint1: CGPointMake(-106.85, -13.71) controlPoint2: CGPointMake(-105.75, -10.05)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier38Path.lineWidth = 1;
        [bezier38Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 39 Drawing
        UIBezierPath* bezier39Path = [UIBezierPath bezierPath];
        [bezier39Path moveToPoint: CGPointMake(-76.54, 2.74)];
        [bezier39Path addCurveToPoint: CGPointMake(-76.54, 45.37) controlPoint1: CGPointMake(-77.64, 41.71) controlPoint2: CGPointMake(-76.54, 45.37)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier39Path.lineWidth = 1;
        [bezier39Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 40 Drawing
        UIBezierPath* bezier40Path = [UIBezierPath bezierPath];
        [bezier40Path moveToPoint: CGPointMake(-17.94, -148.79)];
        [bezier40Path addCurveToPoint: CGPointMake(-17.94, -106.16) controlPoint1: CGPointMake(-19.05, -109.81) controlPoint2: CGPointMake(-17.94, -106.16)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier40Path.lineWidth = 1;
        [bezier40Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 41 Drawing
        UIBezierPath* bezier41Path = [UIBezierPath bezierPath];
        [bezier41Path moveToPoint: CGPointMake(29.22, -61.17)];
        [bezier41Path addCurveToPoint: CGPointMake(29.22, -18.55) controlPoint1: CGPointMake(28.12, -22.2) controlPoint2: CGPointMake(29.22, -18.55)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier41Path.lineWidth = 1;
        [bezier41Path stroke];
        CGContextRestoreGState(context);



        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(302, 155.5, 30, 19)];
        [color17 setFill];
        [oval21Path fill];
        [stromCloudOutline setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267, 155.5, 35, 20)];
        [color17 setFill];
        [oval25Path fill];
        [stromCloudOutline setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311.5, 161, 36, 22)];
        [color17 setFill];
        [oval26Path fill];
        [stromCloudOutline setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(293, 163.5, 36, 21)];
        [color17 setFill];
        [oval27Path fill];
        [stromCloudOutline setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(285.5, 164, 28, 17)];
        [color17 setFill];
        [oval28Path fill];
        [stromCloudOutline setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343.5, 163.5, 26, 18)];
        [color17 setFill];
        [oval128Path fill];
        [stromCloudOutline setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(300.5, 171, 27, 19)];
        [color17 setFill];
        [oval129Path fill];
        [stromCloudOutline setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(335.5, 168, 30, 22)];
        [color17 setFill];
        [oval130Path fill];
        [stromCloudOutline setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(322, 169.5, 25.5, 20)];
        [color17 setFill];
        [oval131Path fill];
        [stromCloudOutline setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(216.5, 144.5, 30, 24)];
        [color3 setFill];
        [oval31Path fill];
        [stromCloudOutline setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(272.5, 144.5, 34, 26)];
        [color3 setFill];
        [oval32Path fill];
        [stromCloudOutline setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296.5, 154.5, 28, 21)];
        [color3 setFill];
        [oval33Path fill];
        [stromCloudOutline setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(272.5, 144.5, 34, 26)];
        [color3 setFill];
        [oval34Path fill];
        [stromCloudOutline setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(246.5, 144.5, 35, 26)];
        [color3 setFill];
        [oval35Path fill];
        [stromCloudOutline setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(201, 152, 36, 27)];
        [color3 setFill];
        [oval36Path fill];
        [stromCloudOutline setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(219.5, 154.5, 36, 26)];
        [color3 setFill];
        [oval37Path fill];
        [stromCloudOutline setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(235, 155, 28, 21)];
        [color3 setFill];
        [oval38Path fill];
        [stromCloudOutline setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(277.5, 158.5, 25, 20)];
        [color3 setFill];
        [oval39Path fill];
        [stromCloudOutline setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(255.5, 159.5, 30, 24)];
        [color3 setFill];
        [oval40Path fill];
        [stromCloudOutline setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 31
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(240.5, 59.5, 27, 22)];
        [color3 setFill];
        [oval143Path fill];
        [stromCloudOutline setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(174.5, 50.5, 29, 24)];
        [color3 setFill];
        [oval149Path fill];
        [stromCloudOutline setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(196.5, 50.5, 35, 25)];
        [color3 setFill];
        [oval144Path fill];
        [stromCloudOutline setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(223.5, 53.5, 24, 17)];
        [color3 setFill];
        [oval148Path fill];
        [stromCloudOutline setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(219.5, 63.5, 33, 25)];
        [color3 setFill];
        [oval142Path fill];
        [stromCloudOutline setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(162.5, 61.5, 31, 23)];
        [color3 setFill];
        [oval145Path fill];
        [stromCloudOutline setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(240.5, 68.5, 24, 19)];
        [color3 setFill];
        [oval147Path fill];
        [stromCloudOutline setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(184.5, 59.5, 31, 23)];
        [color3 setFill];
        [oval150Path fill];
        [stromCloudOutline setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(203.5, 64.5, 30, 23)];
        [color3 setFill];
        [oval152Path fill];
        [stromCloudOutline setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175.5, 70.5, 24, 17)];
        [color3 setFill];
        [oval151Path fill];
        [stromCloudOutline setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(190.5, 69.5, 26, 19)];
        [color3 setFill];
        [oval146Path fill];
        [stromCloudOutline setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(daySkyGradient);
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas15
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color17 = [UIColor colorWithRed: 0.333 green: 0.333 blue: 0.333 alpha: 0.86];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* color13 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.525];
    UIColor* lightningShadowColor = [UIColor colorWithRed: 1 green: 0.979 blue: 0.615 alpha: 1];
    UIColor* color4 = [UIColor colorWithRed: 0 green: 1 blue: 0.835 alpha: 0.623];
    UIColor* stromCloudOutline = [UIColor colorWithRed: 0.156 green: 0.155 blue: 0.155 alpha: 0.74];
    UIColor* dayLightningGradientColor = [UIColor colorWithRed: 0.993 green: 0.357 blue: 0 alpha: 0.853];
    UIColor* dayLightningGradientColor2 = [UIColor colorWithRed: 1 green: 0.952 blue: 0.162 alpha: 0.822];
    UIColor* dayTimeFogGradientColor = [UIColor colorWithRed: 0.206 green: 0.516 blue: 0.751 alpha: 1];
    UIColor* dayTimeFogGradientColor2 = [UIColor colorWithRed: 0.243 green: 0.407 blue: 0.056 alpha: 1];

    //// Gradient Declarations
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);
    CGFloat dayLightningGradientLocations[] = {0, 0.67, 1};
    CGGradientRef dayLightningGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)dayLightningGradientColor.CGColor, (id)[dayLightningGradientColor blendedColorWithFraction: 0.5 ofColor: dayLightningGradientColor2].CGColor, (id)dayLightningGradientColor2.CGColor], dayLightningGradientLocations);
    CGFloat dayTimeFogGradientLocations[] = {0, 0.77, 1};
    CGGradientRef dayTimeFogGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)dayTimeFogGradientColor.CGColor, (id)[dayTimeFogGradientColor blendedColorWithFraction: 0.5 ofColor: dayTimeFogGradientColor2].CGColor, (id)dayTimeFogGradientColor2.CGColor], dayTimeFogGradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];
    NSShadow* lightningShadow = [[NSShadow alloc] init];
    [lightningShadow setShadowColor: lightningShadowColor];
    [lightningShadow setShadowOffset: CGSizeMake(0.1, 16.1)];
    [lightningShadow setShadowBlurRadius: 11];

    //// Group 7
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, dayTimeFogGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
        CGContextRestoreGState(context);
    }


    //// Group 18
    {
        //// Bezier 42 Drawing
        UIBezierPath* bezier42Path = [UIBezierPath bezierPath];
        [UIColor.blackColor setStroke];
        bezier42Path.lineWidth = 1;
        [bezier42Path stroke];


        //// Group 22
        {
            //// Group 20
            {
                //// Group 21
                {
                    //// Bezier 43 Drawing
                    UIBezierPath* bezier43Path = [UIBezierPath bezierPath];
                    [bezier43Path moveToPoint: CGPointMake(389.89, 215.32)];
                    [bezier43Path addCurveToPoint: CGPointMake(374.92, 227.14) controlPoint1: CGPointMake(387.96, 215.66) controlPoint2: CGPointMake(376.13, 229.7)];
                    [bezier43Path addCurveToPoint: CGPointMake(374.92, 205.86) controlPoint1: CGPointMake(373.29, 223.72) controlPoint2: CGPointMake(377.23, 206.41)];
                    [bezier43Path addCurveToPoint: CGPointMake(368.06, 227.14) controlPoint1: CGPointMake(373.25, 205.46) controlPoint2: CGPointMake(369.72, 228.44)];
                    [bezier43Path addCurveToPoint: CGPointMake(363.69, 205.86) controlPoint1: CGPointMake(366.05, 225.59) controlPoint2: CGPointMake(365.64, 206.55)];
                    [bezier43Path addCurveToPoint: CGPointMake(359.32, 224.78) controlPoint1: CGPointMake(362.09, 205.3) controlPoint2: CGPointMake(360.76, 225.75)];
                    [bezier43Path addCurveToPoint: CGPointMake(359.32, 205.86) controlPoint1: CGPointMake(357.05, 223.26) controlPoint2: CGPointMake(361.66, 206.91)];
                    [bezier43Path addCurveToPoint: CGPointMake(346.84, 203.5) controlPoint1: CGPointMake(356.17, 204.45) controlPoint2: CGPointMake(349.19, 203.39)];
                    [bezier43Path addCurveToPoint: CGPointMake(351.21, 215.32) controlPoint1: CGPointMake(344.2, 203.62) controlPoint2: CGPointMake(353.38, 213.32)];
                    [bezier43Path addCurveToPoint: CGPointMake(354.33, 224.78) controlPoint1: CGPointMake(350.33, 216.14) controlPoint2: CGPointMake(353.93, 220.51)];
                    [bezier43Path addCurveToPoint: CGPointMake(351.21, 232.66) controlPoint1: CGPointMake(354.65, 228.2) controlPoint2: CGPointMake(351.8, 231.62)];
                    [bezier43Path addCurveToPoint: CGPointMake(346.84, 227.14) controlPoint1: CGPointMake(350.64, 233.67) controlPoint2: CGPointMake(350.59, 221.63)];
                    [bezier43Path addCurveToPoint: CGPointMake(337.49, 227.14) controlPoint1: CGPointMake(342.26, 233.91) controlPoint2: CGPointMake(337.83, 225.16)];
                    [bezier43Path addCurveToPoint: CGPointMake(346.84, 238.18) controlPoint1: CGPointMake(336.93, 230.34) controlPoint2: CGPointMake(346.95, 233.74)];
                    [bezier43Path addCurveToPoint: CGPointMake(346.84, 291.78) controlPoint1: CGPointMake(345.6, 291.78) controlPoint2: CGPointMake(346.84, 291.78)];
                    [bezier43Path addLineToPoint: CGPointMake(354.33, 283.1)];
                    [bezier43Path addLineToPoint: CGPointMake(346.84, 322.51)];
                    [bezier43Path addLineToPoint: CGPointMake(354.33, 322.51)];
                    [bezier43Path addLineToPoint: CGPointMake(346.84, 363.5)];
                    [bezier43Path addLineToPoint: CGPointMake(374.92, 309.12)];
                    [bezier43Path addLineToPoint: CGPointMake(363.69, 309.12)];
                    [bezier43Path addLineToPoint: CGPointMake(385.52, 259.46)];
                    [bezier43Path addLineToPoint: CGPointMake(368.06, 264.98)];
                    [bezier43Path addLineToPoint: CGPointMake(385.52, 227.14)];
                    [bezier43Path addCurveToPoint: CGPointMake(389.89, 215.32) controlPoint1: CGPointMake(385.52, 227.14) controlPoint2: CGPointMake(392.69, 214.83)];
                    [bezier43Path closePath];
                    CGContextSaveGState(context);
                    CGContextSetShadowWithColor(context, lightningShadow.shadowOffset, lightningShadow.shadowBlurRadius, [lightningShadow.shadowColor CGColor]);
                    CGContextBeginTransparencyLayer(context, NULL);
                    [bezier43Path addClip];
                    CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(364, 203.49), CGPointMake(364, 363.5), 0);
                    CGContextEndTransparencyLayer(context);
                    CGContextRestoreGState(context);

                    [UIColor.blackColor setStroke];
                    bezier43Path.lineWidth = 1;
                    [bezier43Path stroke];


                    //// Bezier 44 Drawing
                    UIBezierPath* bezier44Path = [UIBezierPath bezierPath];
                    [bezier44Path moveToPoint: CGPointMake(367.74, 271.68)];
                    [bezier44Path addLineToPoint: CGPointMake(353.39, 315.81)];
                    CGContextSaveGState(context);
                    [bezier44Path addClip];
                    CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(360.57, 271.68), CGPointMake(360.57, 315.81), 0);
                    CGContextRestoreGState(context);
                    [color13 setStroke];
                    bezier44Path.lineWidth = 2;
                    [bezier44Path stroke];


                    //// Bezier 45 Drawing
                    UIBezierPath* bezier45Path = [UIBezierPath bezierPath];
                    [bezier45Path moveToPoint: CGPointMake(363.38, 313.45)];
                    [bezier45Path addLineToPoint: CGPointMake(354.64, 340.25)];
                    CGContextSaveGState(context);
                    [bezier45Path addClip];
                    CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(359.01, 313.45), CGPointMake(359.01, 340.25), 0);
                    CGContextRestoreGState(context);
                    [color13 setStroke];
                    bezier45Path.lineWidth = 2;
                    [bezier45Path stroke];


                    //// Bezier 46 Drawing
                    UIBezierPath* bezier46Path = [UIBezierPath bezierPath];
                    [bezier46Path moveToPoint: CGPointMake(354.02, 276.41)];
                    [bezier46Path addLineToPoint: CGPointMake(367.74, 271.68)];
                    CGContextSaveGState(context);
                    [bezier46Path addClip];
                    CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(360.88, 271.68), CGPointMake(360.88, 276.41), 0);
                    CGContextRestoreGState(context);
                    [color13 setStroke];
                    bezier46Path.lineWidth = 2;
                    [bezier46Path stroke];


                    //// Bezier 47 Drawing
                    UIBezierPath* bezier47Path = [UIBezierPath bezierPath];
                    [bezier47Path moveToPoint: CGPointMake(353.39, 315.81)];
                    [bezier47Path addLineToPoint: CGPointMake(363.38, 313.45)];
                    CGContextSaveGState(context);
                    [bezier47Path addClip];
                    CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(358.39, 313.45), CGPointMake(358.39, 315.81), 0);
                    CGContextRestoreGState(context);
                    [color13 setStroke];
                    bezier47Path.lineWidth = 2;
                    [bezier47Path stroke];


                    //// Bezier 53 Drawing
                    UIBezierPath* bezier53Path = [UIBezierPath bezierPath];
                    [bezier53Path moveToPoint: CGPointMake(357.84, 241.61)];
                    [bezier53Path addLineToPoint: CGPointMake(354.02, 276.41)];
                    CGContextSaveGState(context);
                    [bezier53Path addClip];
                    CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(355.93, 241.61), CGPointMake(355.93, 276.41), 0);
                    CGContextRestoreGState(context);
                    [color13 setStroke];
                    bezier53Path.lineWidth = 2;
                    [bezier53Path stroke];
                }
            }
        }


        //// Group 23
        {
            //// Oval 167 Drawing
            UIBezierPath* oval167Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 236.5, 9, 19)];
            [UIColor.whiteColor setFill];
            [oval167Path fill];
            [color setStroke];
            oval167Path.lineWidth = 1;
            [oval167Path stroke];


            //// Oval 168 Drawing
            UIBezierPath* oval168Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(352, 233.5, 10.5, 22)];
            [UIColor.whiteColor setFill];
            [oval168Path fill];
            [color setStroke];
            oval168Path.lineWidth = 1;
            [oval168Path stroke];


            //// Oval 169 Drawing
            UIBezierPath* oval169Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(354.5, 246.5, 4.5, 11)];
            [UIColor.blackColor setFill];
            [oval169Path fill];
            [color setStroke];
            oval169Path.lineWidth = 1;
            [oval169Path stroke];


            //// Oval 170 Drawing
            UIBezierPath* oval170Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(363.5, 247.5, 3.5, 9.5)];
            [UIColor.blackColor setFill];
            [oval170Path fill];
            [color setStroke];
            oval170Path.lineWidth = 1;
            [oval170Path stroke];
        }


        //// Group 50
        {
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 355.25, 272.28);
            CGContextRotateCTM(context, -10.72 * M_PI / 180);



            //// Bezier 119 Drawing
            UIBezierPath* bezier119Path = [UIBezierPath bezierPath];
            [bezier119Path moveToPoint: CGPointMake(12.25, -8.78)];
            [bezier119Path addCurveToPoint: CGPointMake(9.47, -8.78) controlPoint1: CGPointMake(10.71, -10.15) controlPoint2: CGPointMake(9.47, -8.78)];
            bezier119Path.lineCapStyle = kCGLineCapRound;

            [UIColor.blackColor setStroke];
            bezier119Path.lineWidth = 1;
            [bezier119Path stroke];


            //// Bezier 120 Drawing
            UIBezierPath* bezier120Path = [UIBezierPath bezierPath];
            [bezier120Path moveToPoint: CGPointMake(9.47, -8.68)];
            [bezier120Path addCurveToPoint: CGPointMake(4.01, -10.23) controlPoint1: CGPointMake(6.83, -7.73) controlPoint2: CGPointMake(4.01, -10.23)];
            bezier120Path.lineCapStyle = kCGLineCapRound;

            [UIColor.blackColor setStroke];
            bezier120Path.lineWidth = 2;
            [bezier120Path stroke];


            //// Bezier 121 Drawing
            UIBezierPath* bezier121Path = [UIBezierPath bezierPath];
            [bezier121Path moveToPoint: CGPointMake(3.92, -10.06)];
            [bezier121Path addCurveToPoint: CGPointMake(-0.25, -9.38) controlPoint1: CGPointMake(2.29, -11.43) controlPoint2: CGPointMake(-0.25, -9.38)];
            bezier121Path.lineCapStyle = kCGLineCapRound;

            [UIColor.blackColor setStroke];
            bezier121Path.lineWidth = 3;
            [bezier121Path stroke];



            CGContextRestoreGState(context);
        }


        //// Bezier 54 Drawing
        UIBezierPath* bezier54Path = [UIBezierPath bezierPath];
        [bezier54Path moveToPoint: CGPointMake(369.54, 230.5)];
        [bezier54Path addLineToPoint: CGPointMake(373.24, 236.5)];
        [UIColor.blackColor setStroke];
        bezier54Path.lineWidth = 1;
        [bezier54Path stroke];


        //// Bezier 55 Drawing
        UIBezierPath* bezier55Path = [UIBezierPath bezierPath];
        [bezier55Path moveToPoint: CGPointMake(362.15, 227.5)];
        [bezier55Path addLineToPoint: CGPointMake(354.76, 231.5)];
        [UIColor.blackColor setStroke];
        bezier55Path.lineWidth = 1;
        [bezier55Path stroke];
    }


    //// Group 24
    {
        //// Bezier 48 Drawing
        UIBezierPath* bezier48Path = [UIBezierPath bezierPath];
        [UIColor.darkGrayColor setFill];
        [bezier48Path fill];
        [color setStroke];
        bezier48Path.lineWidth = 1;
        [bezier48Path stroke];


        //// Bezier 49 Drawing
        UIBezierPath* bezier49Path = [UIBezierPath bezierPath];
        [bezier49Path moveToPoint: CGPointMake(62.83, 212.47)];
        [bezier49Path addLineToPoint: CGPointMake(70.36, 224.02)];
        [bezier49Path addLineToPoint: CGPointMake(70.36, 207.75)];
        [bezier49Path addLineToPoint: CGPointMake(77.89, 202.5)];
        [bezier49Path addLineToPoint: CGPointMake(74.47, 221.39)];
        [bezier49Path addLineToPoint: CGPointMake(81.32, 212.47)];
        [bezier49Path addLineToPoint: CGPointMake(90.91, 221.39)];
        [bezier49Path addLineToPoint: CGPointMake(90.91, 202.5)];
        [bezier49Path addLineToPoint: CGPointMake(100.49, 219.82)];
        [bezier49Path addLineToPoint: CGPointMake(111.54, 206.01)];
        [bezier49Path addLineToPoint: CGPointMake(103.66, 225.69)];
        [bezier49Path addLineToPoint: CGPointMake(92.83, 305.11)];
        [bezier49Path addLineToPoint: CGPointMake(82, 296.67)];
        [bezier49Path addLineToPoint: CGPointMake(70.36, 362.04)];
        [bezier49Path addLineToPoint: CGPointMake(58.03, 346.3)];
        [bezier49Path addLineToPoint: CGPointMake(50.5, 403.5)];
        [bezier49Path addLineToPoint: CGPointMake(50.5, 325.83)];
        [bezier49Path addLineToPoint: CGPointMake(62.83, 338.42)];
        [bezier49Path addLineToPoint: CGPointMake(58.38, 270.67)];
        [bezier49Path addLineToPoint: CGPointMake(72.16, 279.81)];
        [bezier49Path addLineToPoint: CGPointMake(62.83, 221.39)];
        [bezier49Path addLineToPoint: CGPointMake(62.83, 212.47)];
        [bezier49Path closePath];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, lightningShadow.shadowOffset, lightningShadow.shadowBlurRadius, [lightningShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);
        [bezier49Path addClip];
        CGContextDrawLinearGradient(context, dayLightningGradient, CGPointMake(81.02, 202.5), CGPointMake(81.02, 403.5), 0);
        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);

        [UIColor.blackColor setStroke];
        bezier49Path.lineWidth = 1;
        [bezier49Path stroke];


        //// Group 25
        {
            //// Oval 171 Drawing
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 90.9, 240.82);
            CGContextRotateCTM(context, -2.66 * M_PI / 180);

            UIBezierPath* oval171Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-9.43, 2.24, 7.65, 17.56)];
            [UIColor.whiteColor setFill];
            [oval171Path fill];
            [color setStroke];
            oval171Path.lineWidth = 1;
            [oval171Path stroke];

            CGContextRestoreGState(context);


            //// Oval 172 Drawing
            UIBezierPath* oval172Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(85, 245, 5, 8)];
            [color setFill];
            [oval172Path fill];


            //// Oval 173 Drawing
            UIBezierPath* oval173Path = [UIBezierPath bezierPath];
            [oval173Path moveToPoint: CGPointMake(89.5, 268.5)];
            [oval173Path addCurveToPoint: CGPointMake(91.5, 272.5) controlPoint1: CGPointMake(90.53, 269.55) controlPoint2: CGPointMake(91.5, 270.8)];
            [oval173Path addCurveToPoint: CGPointMake(87.5, 270.5) controlPoint1: CGPointMake(91.5, 274.54) controlPoint2: CGPointMake(90.5, 271.29)];
            [oval173Path addCurveToPoint: CGPointMake(83.5, 272.5) controlPoint1: CGPointMake(86.43, 270.22) controlPoint2: CGPointMake(84.81, 272.5)];
            [oval173Path addCurveToPoint: CGPointMake(78.5, 270.5) controlPoint1: CGPointMake(80.99, 272.5) controlPoint2: CGPointMake(80.26, 270.03)];
            [oval173Path addCurveToPoint: CGPointMake(74, 273) controlPoint1: CGPointMake(76.78, 270.96) controlPoint2: CGPointMake(74, 274.37)];
            [oval173Path addCurveToPoint: CGPointMake(74.5, 267.5) controlPoint1: CGPointMake(74, 272.03) controlPoint2: CGPointMake(73.56, 268.35)];
            [oval173Path addCurveToPoint: CGPointMake(81.5, 270.5) controlPoint1: CGPointMake(75.5, 266.6) controlPoint2: CGPointMake(79.57, 270.22)];
            [oval173Path addCurveToPoint: CGPointMake(87.5, 267.5) controlPoint1: CGPointMake(82.93, 270.71) controlPoint2: CGPointMake(86.13, 267.5)];
            [oval173Path addCurveToPoint: CGPointMake(89.5, 268.5) controlPoint1: CGPointMake(89.41, 267.5) controlPoint2: CGPointMake(88.86, 267.85)];
            [oval173Path closePath];
            [UIColor.whiteColor setFill];
            [oval173Path fill];
            [color setStroke];
            oval173Path.lineWidth = 1;
            [oval173Path stroke];


            //// Oval 174 Drawing
            CGContextSaveGState(context);
            CGContextTranslateCTM(context, 78.99, 253.28);
            CGContextRotateCTM(context, -0.43 * M_PI / 180);

            UIBezierPath* oval174Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-4.39, -8.59, 8.78, 17.18)];
            [UIColor.whiteColor setFill];
            [oval174Path fill];
            [color setStroke];
            oval174Path.lineWidth = 1;
            [oval174Path stroke];

            CGContextRestoreGState(context);


            //// Oval 175 Drawing
            UIBezierPath* oval175Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(78, 245, 5, 9)];
            [color setFill];
            [oval175Path fill];
        }


        //// Group 26
        {
            //// Bezier 50 Drawing
            UIBezierPath* bezier50Path = [UIBezierPath bezierPath];
            [bezier50Path moveToPoint: CGPointMake(77.5, 240.5)];
            [bezier50Path addCurveToPoint: CGPointMake(89.5, 240.5) controlPoint1: CGPointMake(82.83, 234.5) controlPoint2: CGPointMake(89.5, 240.5)];
            [UIColor.blackColor setStroke];
            bezier50Path.lineWidth = 1;
            [bezier50Path stroke];


            //// Bezier 51 Drawing
            UIBezierPath* bezier51Path = [UIBezierPath bezierPath];
            [bezier51Path moveToPoint: CGPointMake(74.5, 239.17)];
            [bezier51Path addCurveToPoint: CGPointMake(92.5, 239.17) controlPoint1: CGPointMake(82.5, 228.67) controlPoint2: CGPointMake(92.5, 239.17)];
            [UIColor.blackColor setStroke];
            bezier51Path.lineWidth = 1;
            [bezier51Path stroke];
        }


        //// Bezier 52 Drawing
        UIBezierPath* bezier52Path = [UIBezierPath bezierPath];
        [bezier52Path moveToPoint: CGPointMake(84.96, 267.16)];
        [bezier52Path addLineToPoint: CGPointMake(82.99, 288.94)];
        [bezier52Path addLineToPoint: CGPointMake(71.17, 285.43)];
        [bezier52Path addLineToPoint: CGPointMake(66.25, 348.68)];
        [bezier52Path addLineToPoint: CGPointMake(55.42, 338.14)];
        [bezier52Path addLineToPoint: CGPointMake(53.45, 361.33)];
        [color13 setStroke];
        bezier52Path.lineWidth = 1;
        [bezier52Path stroke];
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 35.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(123.56, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(157.5, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 84.5)];
        [bezierPath addLineToPoint: CGPointMake(130.94, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(145.69, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 110.53)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 124.5)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 119.72)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 149.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(80.5, 140.5)];
        [bezierPath addLineToPoint: CGPointMake(74.86, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(63.5, 157.5)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 128.91)];
        [bezierPath addLineToPoint: CGPointMake(52.72, 113.59)];
        [bezierPath addLineToPoint: CGPointMake(20.26, 135.03)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 101.34)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(5.5, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 72.25)];
        [bezierPath addLineToPoint: CGPointMake(36.49, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 11)];
        [bezierPath addLineToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath closePath];
        CGContextSaveGState(context);
        [bezierPath addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(81.5, 11), CGPointMake(81.5, 157.5), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval 79 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.18, 89.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval79Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];

        CGContextRestoreGState(context);


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46.5, 60.5, 58.5, 56)];
        [color7 setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56.5, 61, 40.5, 44.5)];
        [color7 setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 68.5, 29.5, 31)];
        [color7 setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 78, 18, 20)];
        [color7 setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 81, 11.5, 14)];
        [color7 setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 83, 5.5, 6)];
        [color7 setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 90 Drawing
        UIBezierPath* oval90Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(328, 101, 26, 15)];
        [color17 setFill];
        [oval90Path fill];
        [stromCloudOutline setStroke];
        oval90Path.lineWidth = 1;
        [oval90Path stroke];


        //// Oval 96 Drawing
        UIBezierPath* oval96Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(344, 111.5, 25, 17)];
        [color17 setFill];
        [oval96Path fill];
        [stromCloudOutline setStroke];
        oval96Path.lineWidth = 1;
        [oval96Path stroke];


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(339, 107, 36, 23)];
        [color17 setFill];
        [oval100Path fill];
        [stromCloudOutline setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(377, 114.5, 30, 19)];
        [color17 setFill];
        [oval98Path fill];
        [stromCloudOutline setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(355.5, 112.5, 30, 19)];
        [color17 setFill];
        [oval101Path fill];
        [stromCloudOutline setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(402, 109, 27, 19)];
        [color17 setFill];
        [oval102Path fill];
        [stromCloudOutline setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(377, 105, 33, 20)];
        [color17 setFill];
        [oval103Path fill];
        [stromCloudOutline setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 1
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(191.5, 105, 30, 20)];
        [color17 setFill];
        [ovalPath fill];
        [stromCloudOutline setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(113.5, 114, 28, 18)];
        [color17 setFill];
        [oval3Path fill];
        [stromCloudOutline setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(131.5, 106, 34, 22)];
        [color17 setFill];
        [oval4Path fill];
        [stromCloudOutline setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(156.5, 106, 35, 22)];
        [color17 setFill];
        [oval5Path fill];
        [stromCloudOutline setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(201, 112.5, 36, 22)];
        [color17 setFill];
        [oval6Path fill];
        [stromCloudOutline setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(182.5, 114, 36, 23)];
        [color17 setFill];
        [oval7Path fill];
        [stromCloudOutline setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 114.5, 28, 18)];
        [color17 setFill];
        [oval8Path fill];
        [stromCloudOutline setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(152.5, 119, 30, 20)];
        [color17 setFill];
        [oval10Path fill];
        [stromCloudOutline setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(108.5, 101, 35, 22)];
        [color17 setFill];
        [oval11Path fill];
        [stromCloudOutline setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(40.5, 101, 39, 25)];
        [color17 setFill];
        [oval12Path fill];
        [stromCloudOutline setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(19.5, 110, 32, 20)];
        [color17 setFill];
        [oval13Path fill];
        [stromCloudOutline setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(40.5, 101, 39, 25)];
        [color17 setFill];
        [oval14Path fill];
        [stromCloudOutline setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(68.5, 101, 40, 25)];
        [color17 setFill];
        [oval15Path fill];
        [stromCloudOutline setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(120, 108.5, 41, 24)];
        [color17 setFill];
        [oval16Path fill];
        [stromCloudOutline setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(98.5, 110, 41, 26)];
        [color17 setFill];
        [oval17Path fill];
        [stromCloudOutline setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(44.5, 114, 29, 18)];
        [color17 setFill];
        [oval19Path fill];
        [stromCloudOutline setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 116, 34, 22)];
        [color17 setFill];
        [oval20Path fill];
        [stromCloudOutline setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 28
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 41 Drawing
        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22.5, 73.5, 34, 19)];
        [color3 setFill];
        [oval41Path fill];
        [stromCloudOutline setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(78, 82.5, 39, 27)];
        [color3 setFill];
        [oval118Path fill];
        [stromCloudOutline setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(0.5, 82.5, 33, 28)];
        [color3 setFill];
        [oval119Path fill];
        [stromCloudOutline setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-13.5, 92.5, 36, 25)];
        [color3 setFill];
        [oval120Path fill];
        [stromCloudOutline setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(11.5, 89.5, 45, 23)];
        [color3 setFill];
        [oval121Path fill];
        [stromCloudOutline setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(33, 82.5, 45, 30)];
        [color3 setFill];
        [oval122Path fill];
        [stromCloudOutline setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90.5, 90, 47, 32)];
        [color3 setFill];
        [oval123Path fill];
        [stromCloudOutline setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67, 92.5, 46, 32)];
        [color3 setFill];
        [oval124Path fill];
        [stromCloudOutline setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56.5, 93, 37, 25)];
        [color3 setFill];
        [oval125Path fill];
        [stromCloudOutline setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(255, 152.5, 34, 23)];
        [color17 setFill];
        [oval22Path fill];
        [stromCloudOutline setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 23 Drawing
        UIBezierPath* oval23Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(236, 161.5, 29, 20)];
        [color17 setFill];
        [oval23Path fill];
        [stromCloudOutline setStroke];
        oval23Path.lineWidth = 1;
        [oval23Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(255, 152.5, 34, 23)];
        [color17 setFill];
        [oval24Path fill];
        [stromCloudOutline setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 29 Drawing
        UIBezierPath* oval29Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(259, 166.5, 25, 16)];
        [color17 setFill];
        [oval29Path fill];
        [stromCloudOutline setStroke];
        oval29Path.lineWidth = 1;
        [oval29Path stroke];


        //// Oval 30 Drawing
        UIBezierPath* oval30Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(276, 166.5, 31, 22)];
        [color17 setFill];
        [oval30Path fill];
        [stromCloudOutline setStroke];
        oval30Path.lineWidth = 1;
        [oval30Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265, 164, 31, 22)];
        [color17 setFill];
        [oval132Path fill];
        [stromCloudOutline setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(203, 164, 35, 23)];
        [color17 setFill];
        [oval133Path fill];
        [stromCloudOutline setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(185, 173, 29, 20)];
        [color17 setFill];
        [oval134Path fill];
        [stromCloudOutline setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(203, 164, 35, 23)];
        [color17 setFill];
        [oval135Path fill];
        [stromCloudOutline setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(229, 164, 36, 23)];
        [color17 setFill];
        [oval136Path fill];
        [stromCloudOutline setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274.5, 170.5, 37, 25)];
        [color17 setFill];
        [oval137Path fill];
        [stromCloudOutline setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(256, 173, 37, 25)];
        [color17 setFill];
        [oval138Path fill];
        [stromCloudOutline setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(247.5, 173.5, 29, 20)];
        [color17 setFill];
        [oval139Path fill];
        [stromCloudOutline setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(208, 178, 25, 16)];
        [color17 setFill];
        [oval140Path fill];
        [stromCloudOutline setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(225, 178, 31, 22)];
        [color17 setFill];
        [oval141Path fill];
        [stromCloudOutline setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 27
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 108 Drawing
        UIBezierPath* oval108Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(62.5, 155.5, 32, 29)];
        [color17 setFill];
        [oval108Path fill];
        [stromCloudOutline setStroke];
        oval108Path.lineWidth = 1;
        [oval108Path stroke];


        //// Oval 109 Drawing
        UIBezierPath* oval109Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(122.5, 155.5, 37, 31)];
        [color17 setFill];
        [oval109Path fill];
        [stromCloudOutline setStroke];
        oval109Path.lineWidth = 1;
        [oval109Path stroke];


        //// Oval 110 Drawing
        UIBezierPath* oval110Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(148.5, 167.5, 31, 25)];
        [color17 setFill];
        [oval110Path fill];
        [stromCloudOutline setStroke];
        oval110Path.lineWidth = 1;
        [oval110Path stroke];


        //// Oval 111 Drawing
        UIBezierPath* oval111Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(122.5, 155.5, 37, 31)];
        [color17 setFill];
        [oval111Path fill];
        [stromCloudOutline setStroke];
        oval111Path.lineWidth = 1;
        [oval111Path stroke];


        //// Oval 112 Drawing
        UIBezierPath* oval112Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(94.5, 155.5, 39, 31)];
        [color17 setFill];
        [oval112Path fill];
        [stromCloudOutline setStroke];
        oval112Path.lineWidth = 1;
        [oval112Path stroke];


        //// Oval 113 Drawing
        UIBezierPath* oval113Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(45, 165, 39, 32)];
        [color17 setFill];
        [oval113Path fill];
        [stromCloudOutline setStroke];
        oval113Path.lineWidth = 1;
        [oval113Path stroke];


        //// Oval 114 Drawing
        UIBezierPath* oval114Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(65.5, 167.5, 39, 31)];
        [color17 setFill];
        [oval114Path fill];
        [stromCloudOutline setStroke];
        oval114Path.lineWidth = 1;
        [oval114Path stroke];


        //// Oval 116 Drawing
        UIBezierPath* oval116Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(127.5, 172.5, 28, 24)];
        [color17 setFill];
        [oval116Path fill];
        [stromCloudOutline setStroke];
        oval116Path.lineWidth = 1;
        [oval116Path stroke];


        //// Oval 117 Drawing
        UIBezierPath* oval117Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(104.5, 173.5, 33, 29)];
        [color17 setFill];
        [oval117Path fill];
        [stromCloudOutline setStroke];
        oval117Path.lineWidth = 1;
        [oval117Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
        [bezier2Path moveToPoint: CGPointMake(40.5, 205.5)];
        [bezier2Path addCurveToPoint: CGPointMake(40.5, 275.5) controlPoint1: CGPointMake(39.5, 269.5) controlPoint2: CGPointMake(40.5, 275.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = [UIBezierPath bezierPath];
        [bezier3Path moveToPoint: CGPointMake(83.5, 285.5)];
        [bezier3Path addCurveToPoint: CGPointMake(83.5, 355.5) controlPoint1: CGPointMake(82.5, 349.5) controlPoint2: CGPointMake(83.5, 355.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier3Path.lineWidth = 1;
        [bezier3Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = [UIBezierPath bezierPath];
        [bezier4Path moveToPoint: CGPointMake(62.5, 411.5)];
        [bezier4Path addCurveToPoint: CGPointMake(62.5, 481.5) controlPoint1: CGPointMake(61.5, 475.5) controlPoint2: CGPointMake(62.5, 481.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier4Path.lineWidth = 1;
        [bezier4Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 5 Drawing
        UIBezierPath* bezier5Path = [UIBezierPath bezierPath];
        [bezier5Path moveToPoint: CGPointMake(130.5, 556.5)];
        [bezier5Path addCurveToPoint: CGPointMake(130.5, 626.5) controlPoint1: CGPointMake(129.5, 620.5) controlPoint2: CGPointMake(130.5, 626.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier5Path.lineWidth = 1;
        [bezier5Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 6 Drawing
        UIBezierPath* bezier6Path = [UIBezierPath bezierPath];
        [bezier6Path moveToPoint: CGPointMake(114.5, 135.5)];
        [bezier6Path addCurveToPoint: CGPointMake(114.5, 205.5) controlPoint1: CGPointMake(113.5, 199.5) controlPoint2: CGPointMake(114.5, 205.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier6Path.lineWidth = 1;
        [bezier6Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 7 Drawing
        UIBezierPath* bezier7Path = [UIBezierPath bezierPath];
        [bezier7Path moveToPoint: CGPointMake(331.5, 277.5)];
        [bezier7Path addCurveToPoint: CGPointMake(331.5, 347.5) controlPoint1: CGPointMake(330.5, 341.5) controlPoint2: CGPointMake(331.5, 347.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier7Path.lineWidth = 1;
        [bezier7Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 8 Drawing
        UIBezierPath* bezier8Path = [UIBezierPath bezierPath];
        [bezier8Path moveToPoint: CGPointMake(150.5, 225.5)];
        [bezier8Path addCurveToPoint: CGPointMake(150.5, 295.5) controlPoint1: CGPointMake(149.5, 289.5) controlPoint2: CGPointMake(150.5, 295.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier8Path.lineWidth = 1;
        [bezier8Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 9 Drawing
        UIBezierPath* bezier9Path = [UIBezierPath bezierPath];
        [bezier9Path moveToPoint: CGPointMake(258.5, 355.5)];
        [bezier9Path addCurveToPoint: CGPointMake(258.5, 425.5) controlPoint1: CGPointMake(257.5, 419.5) controlPoint2: CGPointMake(258.5, 425.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier9Path.lineWidth = 1;
        [bezier9Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 10 Drawing
        UIBezierPath* bezier10Path = [UIBezierPath bezierPath];
        [bezier10Path moveToPoint: CGPointMake(258.5, 176.5)];
        [bezier10Path addCurveToPoint: CGPointMake(258.5, 246.5) controlPoint1: CGPointMake(257.5, 240.5) controlPoint2: CGPointMake(258.5, 246.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier10Path.lineWidth = 1;
        [bezier10Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 11 Drawing
        UIBezierPath* bezier11Path = [UIBezierPath bezierPath];
        [bezier11Path moveToPoint: CGPointMake(365.5, 135.5)];
        [bezier11Path addCurveToPoint: CGPointMake(365.5, 205.5) controlPoint1: CGPointMake(364.5, 199.5) controlPoint2: CGPointMake(365.5, 205.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier11Path.lineWidth = 1;
        [bezier11Path stroke];
        CGContextRestoreGState(context);
    }


    //// Group 13
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 287.78, 510);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);



        //// Bezier 12 Drawing
        UIBezierPath* bezier12Path = [UIBezierPath bezierPath];
        [bezier12Path moveToPoint: CGPointMake(-258.57, -106.87)];
        [bezier12Path addCurveToPoint: CGPointMake(-258.57, -64.25) controlPoint1: CGPointMake(-260.04, -67.9) controlPoint2: CGPointMake(-258.57, -64.25)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier12Path.lineWidth = 1;
        [bezier12Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 13 Drawing
        UIBezierPath* bezier13Path = [UIBezierPath bezierPath];
        [bezier13Path moveToPoint: CGPointMake(-195.12, -58.16)];
        [bezier13Path addCurveToPoint: CGPointMake(-195.12, -15.53) controlPoint1: CGPointMake(-196.59, -19.18) controlPoint2: CGPointMake(-195.12, -15.53)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier13Path.lineWidth = 1;
        [bezier13Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 14 Drawing
        UIBezierPath* bezier14Path = [UIBezierPath bezierPath];
        [bezier14Path moveToPoint: CGPointMake(-226.1, 18.57)];
        [bezier14Path addCurveToPoint: CGPointMake(-226.1, 61.2) controlPoint1: CGPointMake(-227.58, 57.55) controlPoint2: CGPointMake(-226.1, 61.2)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier14Path.lineWidth = 1;
        [bezier14Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 15 Drawing
        UIBezierPath* bezier15Path = [UIBezierPath bezierPath];
        [bezier15Path moveToPoint: CGPointMake(-125.77, 106.87)];
        [bezier15Path addCurveToPoint: CGPointMake(-125.77, 149.5) controlPoint1: CGPointMake(-127.24, 145.85) controlPoint2: CGPointMake(-125.77, 149.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier15Path.lineWidth = 1;
        [bezier15Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 16 Drawing
        UIBezierPath* bezier16Path = [UIBezierPath bezierPath];
        [bezier16Path moveToPoint: CGPointMake(-149.38, -149.5)];
        [bezier16Path addCurveToPoint: CGPointMake(-149.38, -106.87) controlPoint1: CGPointMake(-150.85, -110.53) controlPoint2: CGPointMake(-149.38, -106.87)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier16Path.lineWidth = 1;
        [bezier16Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 17 Drawing
        UIBezierPath* bezier17Path = [UIBezierPath bezierPath];
        [bezier17Path moveToPoint: CGPointMake(15.88, 61.2)];
        [bezier17Path addCurveToPoint: CGPointMake(15.88, 103.83) controlPoint1: CGPointMake(14.41, 100.17) controlPoint2: CGPointMake(15.88, 103.83)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier17Path.lineWidth = 1;
        [bezier17Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 18 Drawing
        UIBezierPath* bezier18Path = [UIBezierPath bezierPath];
        [bezier18Path moveToPoint: CGPointMake(-54.13, -52.68)];
        [bezier18Path addCurveToPoint: CGPointMake(-54.13, -10.05) controlPoint1: CGPointMake(-55.61, -13.71) controlPoint2: CGPointMake(-54.13, -10.05)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier18Path.lineWidth = 1;
        [bezier18Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 19 Drawing
        UIBezierPath* bezier19Path = [UIBezierPath bezierPath];
        [bezier19Path moveToPoint: CGPointMake(-15.1, 2.74)];
        [bezier19Path addCurveToPoint: CGPointMake(-15.1, 45.37) controlPoint1: CGPointMake(-16.58, 41.71) controlPoint2: CGPointMake(-15.1, 45.37)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier19Path.lineWidth = 1;
        [bezier19Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 20 Drawing
        UIBezierPath* bezier20Path = [UIBezierPath bezierPath];
        [bezier20Path moveToPoint: CGPointMake(63.2, -148.79)];
        [bezier20Path addCurveToPoint: CGPointMake(63.2, -106.16) controlPoint1: CGPointMake(61.72, -109.81) controlPoint2: CGPointMake(63.2, -106.16)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier20Path.lineWidth = 1;
        [bezier20Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 21 Drawing
        UIBezierPath* bezier21Path = [UIBezierPath bezierPath];
        [bezier21Path moveToPoint: CGPointMake(126.22, -61.17)];
        [bezier21Path addCurveToPoint: CGPointMake(126.22, -18.55) controlPoint1: CGPointMake(124.75, -22.2) controlPoint2: CGPointMake(126.22, -18.55)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier21Path.lineWidth = 1;
        [bezier21Path stroke];
        CGContextRestoreGState(context);



        CGContextRestoreGState(context);
    }


    //// Group 14
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 53 Drawing
        UIBezierPath* oval53Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90.5, 77.5, 38, 28)];
        [color17 setFill];
        [oval53Path fill];
        [stromCloudOutline setStroke];
        oval53Path.lineWidth = 1;
        [oval53Path stroke];


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 88, 32, 24)];
        [color17 setFill];
        [oval54Path fill];
        [stromCloudOutline setStroke];
        oval54Path.lineWidth = 1;
        [oval54Path stroke];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(119, 73, 39, 28)];
        [color17 setFill];
        [oval56Path fill];
        [stromCloudOutline setStroke];
        oval56Path.lineWidth = 1;
        [oval56Path stroke];


        //// Oval 57 Drawing
        UIBezierPath* oval57Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(164, 87, 36, 26)];
        [color17 setFill];
        [oval57Path fill];
        [stromCloudOutline setStroke];
        oval57Path.lineWidth = 1;
        [oval57Path stroke];


        //// Oval 63 Drawing
        UIBezierPath* oval63Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(100, 96, 28, 21)];
        [color17 setFill];
        [oval63Path fill];
        [stromCloudOutline setStroke];
        oval63Path.lineWidth = 1;
        [oval63Path stroke];


        //// Oval 65 Drawing
        UIBezierPath* oval65Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(153, 80, 33, 26)];
        [color17 setFill];
        [oval65Path fill];
        [stromCloudOutline setStroke];
        oval65Path.lineWidth = 1;
        [oval65Path stroke];


        //// Oval 66 Drawing
        UIBezierPath* oval66Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(139, 88, 36, 25)];
        [color17 setFill];
        [oval66Path fill];
        [stromCloudOutline setStroke];
        oval66Path.lineWidth = 1;
        [oval66Path stroke];


        //// Oval 67 Drawing
        UIBezierPath* oval67Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(119, 90, 34, 26)];
        [color17 setFill];
        [oval67Path fill];
        [stromCloudOutline setStroke];
        oval67Path.lineWidth = 1;
        [oval67Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 16
    {
        //// Bezier 22 Drawing
        UIBezierPath* bezier22Path = [UIBezierPath bezierPath];
        [bezier22Path moveToPoint: CGPointMake(11.5, 264.5)];
        [bezier22Path addCurveToPoint: CGPointMake(11.5, 334.5) controlPoint1: CGPointMake(10.5, 328.5) controlPoint2: CGPointMake(11.5, 334.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier22Path.lineWidth = 1;
        [bezier22Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 23 Drawing
        UIBezierPath* bezier23Path = [UIBezierPath bezierPath];
        [bezier23Path moveToPoint: CGPointMake(54.5, 344.5)];
        [bezier23Path addCurveToPoint: CGPointMake(54.5, 414.5) controlPoint1: CGPointMake(53.5, 408.5) controlPoint2: CGPointMake(54.5, 414.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier23Path.lineWidth = 1;
        [bezier23Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 24 Drawing
        UIBezierPath* bezier24Path = [UIBezierPath bezierPath];
        [bezier24Path moveToPoint: CGPointMake(33.5, 470.5)];
        [bezier24Path addCurveToPoint: CGPointMake(33.5, 540.5) controlPoint1: CGPointMake(32.5, 534.5) controlPoint2: CGPointMake(33.5, 540.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier24Path.lineWidth = 1;
        [bezier24Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 25 Drawing
        UIBezierPath* bezier25Path = [UIBezierPath bezierPath];
        [bezier25Path moveToPoint: CGPointMake(101.5, 615.5)];
        [bezier25Path addCurveToPoint: CGPointMake(101.5, 685.5) controlPoint1: CGPointMake(100.5, 679.5) controlPoint2: CGPointMake(101.5, 685.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier25Path.lineWidth = 1;
        [bezier25Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 26 Drawing
        UIBezierPath* bezier26Path = [UIBezierPath bezierPath];
        [bezier26Path moveToPoint: CGPointMake(85.5, 194.5)];
        [bezier26Path addCurveToPoint: CGPointMake(85.5, 264.5) controlPoint1: CGPointMake(84.5, 258.5) controlPoint2: CGPointMake(85.5, 264.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier26Path.lineWidth = 1;
        [bezier26Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 27 Drawing
        UIBezierPath* bezier27Path = [UIBezierPath bezierPath];
        [bezier27Path moveToPoint: CGPointMake(302.5, 336.5)];
        [bezier27Path addCurveToPoint: CGPointMake(302.5, 406.5) controlPoint1: CGPointMake(301.5, 400.5) controlPoint2: CGPointMake(302.5, 406.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier27Path.lineWidth = 1;
        [bezier27Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 28 Drawing
        UIBezierPath* bezier28Path = [UIBezierPath bezierPath];
        [bezier28Path moveToPoint: CGPointMake(121.5, 284.5)];
        [bezier28Path addCurveToPoint: CGPointMake(121.5, 354.5) controlPoint1: CGPointMake(120.5, 348.5) controlPoint2: CGPointMake(121.5, 354.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier28Path.lineWidth = 1;
        [bezier28Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 29 Drawing
        UIBezierPath* bezier29Path = [UIBezierPath bezierPath];
        [bezier29Path moveToPoint: CGPointMake(229.5, 414.5)];
        [bezier29Path addCurveToPoint: CGPointMake(229.5, 484.5) controlPoint1: CGPointMake(228.5, 478.5) controlPoint2: CGPointMake(229.5, 484.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier29Path.lineWidth = 1;
        [bezier29Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 30 Drawing
        UIBezierPath* bezier30Path = [UIBezierPath bezierPath];
        [bezier30Path moveToPoint: CGPointMake(229.5, 235.5)];
        [bezier30Path addCurveToPoint: CGPointMake(229.5, 305.5) controlPoint1: CGPointMake(228.5, 299.5) controlPoint2: CGPointMake(229.5, 305.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier30Path.lineWidth = 1;
        [bezier30Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 31 Drawing
        UIBezierPath* bezier31Path = [UIBezierPath bezierPath];
        [bezier31Path moveToPoint: CGPointMake(336.5, 194.5)];
        [bezier31Path addCurveToPoint: CGPointMake(336.5, 264.5) controlPoint1: CGPointMake(335.5, 258.5) controlPoint2: CGPointMake(336.5, 264.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier31Path.lineWidth = 1;
        [bezier31Path stroke];
        CGContextRestoreGState(context);
    }


    //// Group 17
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 371.78, 376);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);



        //// Bezier 32 Drawing
        UIBezierPath* bezier32Path = [UIBezierPath bezierPath];
        [bezier32Path moveToPoint: CGPointMake(-258.73, -106.87)];
        [bezier32Path addCurveToPoint: CGPointMake(-258.73, -64.25) controlPoint1: CGPointMake(-259.84, -67.9) controlPoint2: CGPointMake(-258.73, -64.25)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier32Path.lineWidth = 1;
        [bezier32Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 33 Drawing
        UIBezierPath* bezier33Path = [UIBezierPath bezierPath];
        [bezier33Path moveToPoint: CGPointMake(-211.25, -58.16)];
        [bezier33Path addCurveToPoint: CGPointMake(-211.25, -15.53) controlPoint1: CGPointMake(-212.35, -19.18) controlPoint2: CGPointMake(-211.25, -15.53)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier33Path.lineWidth = 1;
        [bezier33Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 34 Drawing
        UIBezierPath* bezier34Path = [UIBezierPath bezierPath];
        [bezier34Path moveToPoint: CGPointMake(-234.44, 18.57)];
        [bezier34Path addCurveToPoint: CGPointMake(-234.44, 61.2) controlPoint1: CGPointMake(-235.54, 57.55) controlPoint2: CGPointMake(-234.44, 61.2)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier34Path.lineWidth = 1;
        [bezier34Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 35 Drawing
        UIBezierPath* bezier35Path = [UIBezierPath bezierPath];
        [bezier35Path moveToPoint: CGPointMake(-159.35, 106.87)];
        [bezier35Path addCurveToPoint: CGPointMake(-159.35, 149.5) controlPoint1: CGPointMake(-160.46, 145.85) controlPoint2: CGPointMake(-159.35, 149.5)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier35Path.lineWidth = 1;
        [bezier35Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 36 Drawing
        UIBezierPath* bezier36Path = [UIBezierPath bezierPath];
        [bezier36Path moveToPoint: CGPointMake(-177.02, -149.5)];
        [bezier36Path addCurveToPoint: CGPointMake(-177.02, -106.87) controlPoint1: CGPointMake(-178.12, -110.53) controlPoint2: CGPointMake(-177.02, -106.87)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier36Path.lineWidth = 1;
        [bezier36Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 37 Drawing
        UIBezierPath* bezier37Path = [UIBezierPath bezierPath];
        [bezier37Path moveToPoint: CGPointMake(-53.35, 61.2)];
        [bezier37Path addCurveToPoint: CGPointMake(-53.35, 103.83) controlPoint1: CGPointMake(-54.45, 100.17) controlPoint2: CGPointMake(-53.35, 103.83)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier37Path.lineWidth = 1;
        [bezier37Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 38 Drawing
        UIBezierPath* bezier38Path = [UIBezierPath bezierPath];
        [bezier38Path moveToPoint: CGPointMake(-105.75, -52.68)];
        [bezier38Path addCurveToPoint: CGPointMake(-105.75, -10.05) controlPoint1: CGPointMake(-106.85, -13.71) controlPoint2: CGPointMake(-105.75, -10.05)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier38Path.lineWidth = 1;
        [bezier38Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 39 Drawing
        UIBezierPath* bezier39Path = [UIBezierPath bezierPath];
        [bezier39Path moveToPoint: CGPointMake(-76.54, 2.74)];
        [bezier39Path addCurveToPoint: CGPointMake(-76.54, 45.37) controlPoint1: CGPointMake(-77.64, 41.71) controlPoint2: CGPointMake(-76.54, 45.37)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier39Path.lineWidth = 1;
        [bezier39Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 40 Drawing
        UIBezierPath* bezier40Path = [UIBezierPath bezierPath];
        [bezier40Path moveToPoint: CGPointMake(-17.94, -148.79)];
        [bezier40Path addCurveToPoint: CGPointMake(-17.94, -106.16) controlPoint1: CGPointMake(-19.05, -109.81) controlPoint2: CGPointMake(-17.94, -106.16)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier40Path.lineWidth = 1;
        [bezier40Path stroke];
        CGContextRestoreGState(context);


        //// Bezier 41 Drawing
        UIBezierPath* bezier41Path = [UIBezierPath bezierPath];
        [bezier41Path moveToPoint: CGPointMake(29.22, -61.17)];
        [bezier41Path addCurveToPoint: CGPointMake(29.22, -18.55) controlPoint1: CGPointMake(28.12, -22.2) controlPoint2: CGPointMake(29.22, -18.55)];
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        [color4 setStroke];
        bezier41Path.lineWidth = 1;
        [bezier41Path stroke];
        CGContextRestoreGState(context);



        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(3.5, 158, 32, 26)];
        [color17 setFill];
        [oval43Path fill];
        [stromCloudOutline setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 158, 37, 28)];
        [color17 setFill];
        [oval44Path fill];
        [stromCloudOutline setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(90.5, 169, 31, 22)];
        [color17 setFill];
        [oval45Path fill];
        [stromCloudOutline setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 158, 37, 28)];
        [color17 setFill];
        [oval46Path fill];
        [stromCloudOutline setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(35.5, 158, 39, 28)];
        [color17 setFill];
        [oval47Path fill];
        [stromCloudOutline setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-14, 166.5, 39, 29)];
        [color17 setFill];
        [oval48Path fill];
        [stromCloudOutline setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(23, 169.5, 31, 22)];
        [color17 setFill];
        [oval50Path fill];
        [stromCloudOutline setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69.5, 173, 28, 22)];
        [color17 setFill];
        [oval51Path fill];
        [stromCloudOutline setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46.5, 174, 32, 26)];
        [color17 setFill];
        [oval52Path fill];
        [stromCloudOutline setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(6.5, 169, 40, 28)];
        [color17 setFill];
        [oval49Path fill];
        [stromCloudOutline setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 75 Drawing
        UIBezierPath* oval75Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(117.5, 144.5, 26, 21)];
        [color17 setFill];
        [oval75Path fill];
        [stromCloudOutline setStroke];
        oval75Path.lineWidth = 1;
        [oval75Path stroke];


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(97.5, 141, 34, 29)];
        [color17 setFill];
        [oval55Path fill];
        [stromCloudOutline setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(20.5, 146.5, 41, 34)];
        [color17 setFill];
        [oval58Path fill];
        [stromCloudOutline setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(37.5, 138.5, 43, 35)];
        [color17 setFill];
        [oval59Path fill];
        [stromCloudOutline setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69.5, 138.5, 34, 29)];
        [color17 setFill];
        [oval60Path fill];
        [stromCloudOutline setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 147, 30, 28)];
        [color17 setFill];
        [oval61Path fill];
        [stromCloudOutline setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54.5, 149, 36, 32)];
        [color17 setFill];
        [oval62Path fill];
        [stromCloudOutline setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        //// Oval 74 Drawing
        UIBezierPath* oval74Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(80.5, 147, 30, 28)];
        [color17 setFill];
        [oval74Path fill];
        [stromCloudOutline setStroke];
        oval74Path.lineWidth = 1;
        [oval74Path stroke];


        //// Oval 76 Drawing
        UIBezierPath* oval76Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 154.5, 26, 21)];
        [color17 setFill];
        [oval76Path fill];
        [stromCloudOutline setStroke];
        oval76Path.lineWidth = 1;
        [oval76Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(292, 99.5, 34, 18)];
        [color17 setFill];
        [oval86Path fill];
        [stromCloudOutline setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(229.5, 99.5, 39, 21)];
        [color17 setFill];
        [oval87Path fill];
        [stromCloudOutline setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(251, 93, 39, 22)];
        [color17 setFill];
        [oval88Path fill];
        [stromCloudOutline setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(268.5, 97.5, 33, 18)];
        [color17 setFill];
        [oval89Path fill];
        [stromCloudOutline setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(313, 113, 30, 20)];
        [color17 setFill];
        [oval92Path fill];
        [stromCloudOutline setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(254.5, 105.5, 36, 23)];
        [color17 setFill];
        [oval93Path fill];
        [stromCloudOutline setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274, 105.5, 37, 24)];
        [color17 setFill];
        [oval94Path fill];
        [stromCloudOutline setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(290.5, 111, 31, 20)];
        [color17 setFill];
        [oval95Path fill];
        [stromCloudOutline setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311.5, 103, 40, 25)];
        [color17 setFill];
        [oval99Path fill];
        [stromCloudOutline setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 15
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 68 Drawing
        UIBezierPath* oval68Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(349.5, 79, 29.5, 26)];
        [color17 setFill];
        [oval68Path fill];
        [stromCloudOutline setStroke];
        oval68Path.lineWidth = 1;
        [oval68Path stroke];


        //// Oval 69 Drawing
        UIBezierPath* oval69Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296, 88, 32, 22)];
        [color17 setFill];
        [oval69Path fill];
        [stromCloudOutline setStroke];
        oval69Path.lineWidth = 1;
        [oval69Path stroke];


        //// Oval 70 Drawing
        UIBezierPath* oval70Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(312, 79, 38, 28)];
        [color17 setFill];
        [oval70Path fill];
        [stromCloudOutline setStroke];
        oval70Path.lineWidth = 1;
        [oval70Path stroke];


        //// Oval 71 Drawing
        UIBezierPath* oval71Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327.5, 83.5, 36, 26)];
        [color17 setFill];
        [oval71Path fill];
        [stromCloudOutline setStroke];
        oval71Path.lineWidth = 1;
        [oval71Path stroke];


        //// Oval 72 Drawing
        UIBezierPath* oval72Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(378.5, 84, 36, 28)];
        [color17 setFill];
        [oval72Path fill];
        [stromCloudOutline setStroke];
        oval72Path.lineWidth = 1;
        [oval72Path stroke];


        //// Oval 73 Drawing
        UIBezierPath* oval73Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(355, 86, 36, 28)];
        [color17 setFill];
        [oval73Path fill];
        [stromCloudOutline setStroke];
        oval73Path.lineWidth = 1;
        [oval73Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 31
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(321.5, 70.5, 31, 26)];
        [color17 setFill];
        [oval143Path fill];
        [stromCloudOutline setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(246.5, 59.5, 33, 29)];
        [color17 setFill];
        [oval149Path fill];
        [stromCloudOutline setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(271.5, 59.5, 40, 30)];
        [color17 setFill];
        [oval144Path fill];
        [stromCloudOutline setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(302.5, 62.5, 27, 22)];
        [color17 setFill];
        [oval148Path fill];
        [stromCloudOutline setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(297.5, 75.5, 38, 30)];
        [color17 setFill];
        [oval142Path fill];
        [stromCloudOutline setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(232.5, 72.5, 35, 28)];
        [color17 setFill];
        [oval145Path fill];
        [stromCloudOutline setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(321.5, 80.5, 28, 24)];
        [color17 setFill];
        [oval147Path fill];
        [stromCloudOutline setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(257.5, 70.5, 36, 28)];
        [color17 setFill];
        [oval150Path fill];
        [stromCloudOutline setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(279.5, 76.5, 34, 28)];
        [color17 setFill];
        [oval152Path fill];
        [stromCloudOutline setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(247.5, 84.5, 27, 20)];
        [color17 setFill];
        [oval151Path fill];
        [stromCloudOutline setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(264.5, 81.5, 30, 24)];
        [color17 setFill];
        [oval146Path fill];
        [stromCloudOutline setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 166 Drawing
        UIBezierPath* oval166Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(384.5, 70.5, 30, 25)];
        [color17 setFill];
        [oval166Path fill];
        [stromCloudOutline setStroke];
        oval166Path.lineWidth = 1;
        [oval166Path stroke];


        //// Oval 159 Drawing
        UIBezierPath* oval159Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(296.5, 64.5, 37, 31)];
        [color17 setFill];
        [oval159Path fill];
        [stromCloudOutline setStroke];
        oval159Path.lineWidth = 1;
        [oval159Path stroke];


        //// Oval 160 Drawing
        UIBezierPath* oval160Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(361.5, 59.5, 43, 30)];
        [color17 setFill];
        [oval160Path fill];
        [stromCloudOutline setStroke];
        oval160Path.lineWidth = 1;
        [oval160Path stroke];


        //// Oval 161 Drawing
        UIBezierPath* oval161Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(283.5, 69.5, 27, 25)];
        [color17 setFill];
        [oval161Path fill];
        [stromCloudOutline setStroke];
        oval161Path.lineWidth = 1;
        [oval161Path stroke];


        //// Oval 162 Drawing
        UIBezierPath* oval162Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(337.5, 58.5, 35, 29)];
        [color17 setFill];
        [oval162Path fill];
        [stromCloudOutline setStroke];
        oval162Path.lineWidth = 1;
        [oval162Path stroke];


        //// Oval 163 Drawing
        UIBezierPath* oval163Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(317.5, 65.5, 33, 29)];
        [color17 setFill];
        [oval163Path fill];
        [stromCloudOutline setStroke];
        oval163Path.lineWidth = 1;
        [oval163Path stroke];


        //// Oval 164 Drawing
        UIBezierPath* oval164Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365.5, 73.5, 29, 24)];
        [color17 setFill];
        [oval164Path fill];
        [stromCloudOutline setStroke];
        oval164Path.lineWidth = 1;
        [oval164Path stroke];


        //// Oval 165 Drawing
        UIBezierPath* oval165Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(343.5, 70.5, 29, 25)];
        [color17 setFill];
        [oval165Path fill];
        [stromCloudOutline setStroke];
        oval165Path.lineWidth = 1;
        [oval165Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(323, 179.5, 33, 22)];
        [color17 setFill];
        [oval21Path fill];
        [stromCloudOutline setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(285, 178.5, 38, 23)];
        [color17 setFill];
        [oval25Path fill];
        [stromCloudOutline setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(356.5, 171, 39, 26)];
        [color17 setFill];
        [oval26Path fill];
        [stromCloudOutline setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(313, 167.5, 39, 25)];
        [color17 setFill];
        [oval27Path fill];
        [stromCloudOutline setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(305.5, 172, 30, 20)];
        [color17 setFill];
        [oval28Path fill];
        [stromCloudOutline setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(386.5, 164.5, 28, 22)];
        [color17 setFill];
        [oval128Path fill];
        [stromCloudOutline setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(321.5, 161, 29, 22)];
        [color17 setFill];
        [oval129Path fill];
        [stromCloudOutline setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(360.5, 156, 37, 30)];
        [color17 setFill];
        [oval130Path fill];
        [stromCloudOutline setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(345, 155.5, 27.5, 24)];
        [color17 setFill];
        [oval131Path fill];
        [stromCloudOutline setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        //// Oval 154 Drawing
        UIBezierPath* oval154Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(336.5, 165.5, 33, 26)];
        [color17 setFill];
        [oval154Path fill];
        [stromCloudOutline setStroke];
        oval154Path.lineWidth = 1;
        [oval154Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 153 Drawing
        UIBezierPath* oval153Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(348, 142.5, 29.5, 26)];
        [color3 setFill];
        [oval153Path fill];
        [stromCloudOutline setStroke];
        oval153Path.lineWidth = 1;
        [oval153Path stroke];


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(333, 142.5, 29.5, 26)];
        [color3 setFill];
        [oval104Path fill];
        [stromCloudOutline setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(285.5, 151.5, 32, 22)];
        [color3 setFill];
        [oval105Path fill];
        [stromCloudOutline setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(301.5, 142.5, 38, 28)];
        [color3 setFill];
        [oval106Path fill];
        [stromCloudOutline setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(317, 147, 36, 26)];
        [color3 setFill];
        [oval107Path fill];
        [stromCloudOutline setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(365, 151.5, 36, 24)];
        [color3 setFill];
        [oval77Path fill];
        [stromCloudOutline setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(344.5, 153.5, 36, 24)];
        [color3 setFill];
        [oval78Path fill];
        [stromCloudOutline setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(217.5, 142.5, 32, 25)];
        [color17 setFill];
        [oval31Path fill];
        [stromCloudOutline setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(277.5, 142.5, 37, 27)];
        [color17 setFill];
        [oval32Path fill];
        [stromCloudOutline setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(303.5, 153.5, 30, 22)];
        [color17 setFill];
        [oval33Path fill];
        [stromCloudOutline setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(277.5, 142.5, 37, 27)];
        [color17 setFill];
        [oval34Path fill];
        [stromCloudOutline setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(249.5, 142.5, 38, 27)];
        [color17 setFill];
        [oval35Path fill];
        [stromCloudOutline setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(201, 150, 39, 29)];
        [color17 setFill];
        [oval36Path fill];
        [stromCloudOutline setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(220.5, 153.5, 39, 27)];
        [color17 setFill];
        [oval37Path fill];
        [stromCloudOutline setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(237, 154, 31, 22)];
        [color17 setFill];
        [oval38Path fill];
        [stromCloudOutline setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(283.5, 157.5, 26, 21)];
        [color17 setFill];
        [oval39Path fill];
        [stromCloudOutline setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(259.5, 158.5, 32, 25)];
        [color17 setFill];
        [oval40Path fill];
        [stromCloudOutline setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGGradientRelease(dayLightningGradient);
    CGGradientRelease(dayTimeFogGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas16
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* color9 = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 1];
    UIColor* dayTimeFog = [UIColor colorWithRed: 0.293 green: 0.336 blue: 0.38 alpha: 0.39];
    UIColor* dayTimeFogGradientColor = [UIColor colorWithRed: 0.206 green: 0.516 blue: 0.751 alpha: 1];
    UIColor* dayTimeFogGradientColor2 = [UIColor colorWithRed: 0.243 green: 0.407 blue: 0.056 alpha: 1];

    //// Gradient Declarations
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);
    CGFloat dayTimeFogGradientLocations[] = {0, 0.77, 1};
    CGGradientRef dayTimeFogGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)dayTimeFogGradientColor.CGColor, (id)[dayTimeFogGradientColor blendedColorWithFraction: 0.5 ofColor: dayTimeFogGradientColor2].CGColor, (id)dayTimeFogGradientColor2.CGColor], dayTimeFogGradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* moonShadow = [[NSShadow alloc] init];
    [moonShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.63]];
    [moonShadow setShadowOffset: CGSizeMake(28.1, -14.1)];
    [moonShadow setShadowBlurRadius: 20];
    NSShadow* moonShineShadow = [[NSShadow alloc] init];
    [moonShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.47]];
    [moonShineShadow setShadowOffset: CGSizeMake(-9.1, 18.1)];
    [moonShineShadow setShadowBlurRadius: 12];

    //// Group 7
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, dayTimeFogGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
        CGContextRestoreGState(context);
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShineShadow.shadowOffset, moonShineShadow.shadowBlurRadius, [moonShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 35.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(123.56, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(157.5, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 84.5)];
        [bezierPath addLineToPoint: CGPointMake(130.94, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(145.69, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 110.53)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 124.5)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 119.72)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 149.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(80.5, 140.5)];
        [bezierPath addLineToPoint: CGPointMake(74.86, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(63.5, 157.5)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 128.91)];
        [bezierPath addLineToPoint: CGPointMake(52.72, 113.59)];
        [bezierPath addLineToPoint: CGPointMake(20.26, 135.03)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 101.34)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(5.5, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 72.25)];
        [bezierPath addLineToPoint: CGPointMake(36.49, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 11)];
        [bezierPath addLineToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath closePath];
        CGContextSaveGState(context);
        [bezierPath addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(81.5, 11), CGPointMake(81.5, 157.5), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval 79 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.18, 89.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval79Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];

        CGContextRestoreGState(context);


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46.5, 60.5, 58.5, 56)];
        [color7 setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56.5, 61, 40.5, 44.5)];
        [color7 setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 68.5, 29.5, 31)];
        [color7 setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 78, 18, 20)];
        [color7 setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 81, 11.5, 14)];
        [color7 setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 83, 5.5, 6)];
        [color7 setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(324, 114, 36, 27)];
        [color9 setFill];
        [oval100Path fill];
        [UIColor.darkGrayColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 123.5, 30, 22)];
        [color9 setFill];
        [oval98Path fill];
        [UIColor.darkGrayColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(340.5, 120.5, 30, 23)];
        [color9 setFill];
        [oval101Path fill];
        [UIColor.darkGrayColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(387, 117, 27, 22)];
        [color9 setFill];
        [oval102Path fill];
        [UIColor.darkGrayColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 112, 33, 24)];
        [color9 setFill];
        [oval103Path fill];
        [UIColor.darkGrayColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(165.5, 98, 30, 24)];
        [color3 setFill];
        [ovalPath fill];
        [UIColor.darkGrayColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 98, 34, 27)];
        [color3 setFill];
        [oval2Path fill];
        [UIColor.darkGrayColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(87.5, 108, 28, 22)];
        [color3 setFill];
        [oval3Path fill];
        [UIColor.darkGrayColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 98, 34, 27)];
        [color3 setFill];
        [oval4Path fill];
        [UIColor.darkGrayColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(130.5, 98, 35, 27)];
        [color3 setFill];
        [oval5Path fill];
        [UIColor.darkGrayColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 105.5, 36, 27)];
        [color3 setFill];
        [oval6Path fill];
        [UIColor.darkGrayColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(156.5, 108, 36, 28)];
        [color3 setFill];
        [oval7Path fill];
        [UIColor.darkGrayColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(149, 108.5, 28, 22)];
        [color3 setFill];
        [oval8Path fill];
        [UIColor.darkGrayColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109.5, 113, 25, 19)];
        [color3 setFill];
        [oval9Path fill];
        [UIColor.darkGrayColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(126.5, 114, 30, 24)];
        [color3 setFill];
        [oval10Path fill];
        [UIColor.darkGrayColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(59.5, 96, 30, 24)];
        [color3 setFill];
        [oval11Path fill];
        [UIColor.darkGrayColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.5, 96, 34, 27)];
        [color3 setFill];
        [oval12Path fill];
        [UIColor.darkGrayColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-18.5, 106, 28, 22)];
        [color3 setFill];
        [oval13Path fill];
        [UIColor.darkGrayColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.5, 96, 34, 27)];
        [color3 setFill];
        [oval14Path fill];
        [UIColor.darkGrayColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24.5, 96, 35, 27)];
        [color3 setFill];
        [oval15Path fill];
        [UIColor.darkGrayColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69, 103.5, 36, 27)];
        [color3 setFill];
        [oval16Path fill];
        [UIColor.darkGrayColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50.5, 106, 36, 28)];
        [color3 setFill];
        [oval17Path fill];
        [UIColor.darkGrayColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(43, 106.5, 28, 22)];
        [color3 setFill];
        [oval18Path fill];
        [UIColor.darkGrayColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(3.5, 111, 25, 19)];
        [color3 setFill];
        [oval19Path fill];
        [UIColor.darkGrayColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(20.5, 112, 30, 24)];
        [color3 setFill];
        [oval20Path fill];
        [UIColor.darkGrayColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 28
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(98.5, 69.5, 25, 16.5)];
        [color3 setFill];
        [oval42Path fill];
        [UIColor.darkGrayColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 41 Drawing
        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(77.5, 68.5, 26, 16)];
        [color3 setFill];
        [oval41Path fill];
        [UIColor.darkGrayColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(114, 75.5, 30, 23)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.darkGrayColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54, 75.5, 34, 25)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.darkGrayColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(36, 84.5, 28, 21)];
        [color3 setFill];
        [oval120Path fill];
        [UIColor.darkGrayColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54, 75.5, 34, 25)];
        [color3 setFill];
        [oval121Path fill];
        [UIColor.darkGrayColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(79, 75.5, 35, 25)];
        [color3 setFill];
        [oval122Path fill];
        [UIColor.darkGrayColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(123.5, 83, 36, 25)];
        [color3 setFill];
        [oval123Path fill];
        [UIColor.darkGrayColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105, 84.5, 36, 27)];
        [color3 setFill];
        [oval124Path fill];
        [UIColor.darkGrayColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(97.5, 85, 28, 21)];
        [color3 setFill];
        [oval125Path fill];
        [UIColor.darkGrayColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(58, 89.5, 25, 18)];
        [color3 setFill];
        [oval126Path fill];
        [UIColor.darkGrayColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        //// Oval 127 Drawing
        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 90.5, 30, 23)];
        [color3 setFill];
        [oval127Path fill];
        [UIColor.darkGrayColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327, 149.5, 34, 24)];
        [color3 setFill];
        [oval21Path fill];
        [UIColor.darkGrayColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287, 149.5, 40, 25)];
        [color3 setFill];
        [oval25Path fill];
        [UIColor.darkGrayColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(337.5, 157, 41, 28)];
        [color3 setFill];
        [oval26Path fill];
        [UIColor.darkGrayColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(316, 159.5, 41, 27)];
        [color3 setFill];
        [oval27Path fill];
        [UIColor.darkGrayColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(308.5, 177, 31, 22)];
        [color3 setFill];
        [oval28Path fill];
        [UIColor.darkGrayColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(374.5, 159.5, 29, 24)];
        [color3 setFill];
        [oval128Path fill];
        [UIColor.darkGrayColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(325.5, 170, 30, 24)];
        [color3 setFill];
        [oval129Path fill];
        [UIColor.darkGrayColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(364.5, 165, 35, 29)];
        [color3 setFill];
        [oval130Path fill];
        [UIColor.darkGrayColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350, 167.5, 28.5, 26)];
        [color3 setFill];
        [oval131Path fill];
        [UIColor.darkGrayColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(219.5, 143.5, 36, 27)];
        [color3 setFill];
        [oval138Path fill];
        [UIColor.darkGrayColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(248, 151.5, 34, 25)];
        [color3 setFill];
        [oval22Path fill];
        [UIColor.darkGrayColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287, 165.5, 34, 25)];
        [color3 setFill];
        [oval24Path fill];
        [UIColor.darkGrayColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274, 160, 30, 24)];
        [color3 setFill];
        [oval132Path fill];
        [UIColor.darkGrayColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(198, 160, 34, 25)];
        [color3 setFill];
        [oval133Path fill];
        [UIColor.darkGrayColor setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(180, 170, 28, 22)];
        [color3 setFill];
        [oval134Path fill];
        [UIColor.darkGrayColor setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(198, 160, 34, 25)];
        [color3 setFill];
        [oval135Path fill];
        [UIColor.darkGrayColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(223, 160, 35, 25)];
        [color3 setFill];
        [oval136Path fill];
        [UIColor.darkGrayColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267.5, 167.5, 36, 27)];
        [color3 setFill];
        [oval137Path fill];
        [UIColor.darkGrayColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243.5, 175.5, 34, 28)];
        [color3 setFill];
        [oval139Path fill];
        [UIColor.darkGrayColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(199, 172, 31, 24)];
        [color3 setFill];
        [oval140Path fill];
        [UIColor.darkGrayColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(219, 175, 30, 24)];
        [color3 setFill];
        [oval141Path fill];
        [UIColor.darkGrayColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(180.5, 139.5, 34, 29)];
        [color3 setFill];
        [oval31Path fill];
        [UIColor.darkGrayColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(245.5, 139.5, 39, 31)];
        [color3 setFill];
        [oval32Path fill];
        [UIColor.darkGrayColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(272.5, 151.5, 33, 25)];
        [color3 setFill];
        [oval33Path fill];
        [UIColor.darkGrayColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(245.5, 139.5, 39, 31)];
        [color3 setFill];
        [oval34Path fill];
        [UIColor.darkGrayColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(214.5, 139.5, 41, 31)];
        [color3 setFill];
        [oval35Path fill];
        [UIColor.darkGrayColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(162, 149, 42, 32)];
        [color3 setFill];
        [oval36Path fill];
        [UIColor.darkGrayColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(183.5, 151.5, 42, 31)];
        [color3 setFill];
        [oval37Path fill];
        [UIColor.darkGrayColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(202, 152, 32, 25)];
        [color3 setFill];
        [oval38Path fill];
        [UIColor.darkGrayColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250.5, 156.5, 29, 24)];
        [color3 setFill];
        [oval39Path fill];
        [UIColor.darkGrayColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(225.5, 157.5, 35, 29)];
        [color3 setFill];
        [oval40Path fill];
        [UIColor.darkGrayColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(32.5, 154, 32, 25)];
        [color9 setFill];
        [oval43Path fill];
        [UIColor.darkGrayColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(91.5, 154, 36, 27)];
        [color9 setFill];
        [oval44Path fill];
        [UIColor.darkGrayColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(116.5, 165, 30, 22)];
        [color9 setFill];
        [oval45Path fill];
        [UIColor.darkGrayColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(91.5, 154, 36, 27)];
        [color9 setFill];
        [oval46Path fill];
        [UIColor.darkGrayColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 154, 37, 27)];
        [color9 setFill];
        [oval47Path fill];
        [UIColor.darkGrayColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(16, 161.5, 38, 29)];
        [color9 setFill];
        [oval48Path fill];
        [UIColor.darkGrayColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(35.5, 165, 38, 27)];
        [color9 setFill];
        [oval49Path fill];
        [UIColor.darkGrayColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(52, 165.5, 30, 22)];
        [color9 setFill];
        [oval50Path fill];
        [UIColor.darkGrayColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(96.5, 169, 27, 21)];
        [color9 setFill];
        [oval51Path fill];
        [UIColor.darkGrayColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(73.5, 170, 32, 25)];
        [color9 setFill];
        [oval52Path fill];
        [UIColor.darkGrayColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(292, 103.5, 31, 17)];
        [color3 setFill];
        [oval86Path fill];
        [UIColor.darkGrayColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(234.5, 103.5, 36, 20)];
        [color3 setFill];
        [oval87Path fill];
        [UIColor.darkGrayColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(254, 97, 36, 21)];
        [color3 setFill];
        [oval88Path fill];
        [UIColor.darkGrayColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(270.5, 101.5, 30, 17)];
        [color3 setFill];
        [oval89Path fill];
        [UIColor.darkGrayColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 91 Drawing
        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(292, 95, 33, 19)];
        [color3 setFill];
        [oval91Path fill];
        [UIColor.darkGrayColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 116, 28, 19)];
        [color3 setFill];
        [oval92Path fill];
        [UIColor.darkGrayColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(257.5, 108.5, 33, 22)];
        [color3 setFill];
        [oval93Path fill];
        [UIColor.darkGrayColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(275, 108.5, 34, 23)];
        [color3 setFill];
        [oval94Path fill];
        [UIColor.darkGrayColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(290.5, 114, 28, 19)];
        [color3 setFill];
        [oval95Path fill];
        [UIColor.darkGrayColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327.5, 106, 37, 24)];
        [color3 setFill];
        [oval99Path fill];
        [UIColor.darkGrayColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        //// Oval 97 Drawing
        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(311, 106.5, 31, 21)];
        [color3 setFill];
        [oval97Path fill];
        [UIColor.darkGrayColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(356, 90.5, 29.5, 22)];
        [color10 setFill];
        [oval104Path fill];
        [UIColor.darkGrayColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(302.5, 98.5, 32, 19)];
        [color10 setFill];
        [oval105Path fill];
        [UIColor.darkGrayColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(318.5, 90.5, 38, 24)];
        [color10 setFill];
        [oval106Path fill];
        [UIColor.darkGrayColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(334, 94, 36, 23)];
        [color10 setFill];
        [oval107Path fill];
        [UIColor.darkGrayColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(385, 94.5, 36, 24)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.darkGrayColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(361.5, 96.5, 36, 24)];
        [color10 setFill];
        [oval78Path fill];
        [UIColor.darkGrayColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 31
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(277.5, 82.5, 37, 28)];
        [color3 setFill];
        [oval142Path fill];
        [UIColor.darkGrayColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(309.5, 81.5, 31, 24)];
        [color3 setFill];
        [oval143Path fill];
        [UIColor.darkGrayColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(259.5, 66.5, 38, 28)];
        [color3 setFill];
        [oval144Path fill];
        [UIColor.darkGrayColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(208, 81, 35, 26)];
        [color3 setFill];
        [oval145Path fill];
        [UIColor.darkGrayColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(225.5, 88.5, 40, 29)];
        [color3 setFill];
        [oval146Path fill];
        [UIColor.darkGrayColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(289.5, 92.5, 27, 21)];
        [color3 setFill];
        [oval147Path fill];
        [UIColor.darkGrayColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287.5, 75.5, 27, 19)];
        [color3 setFill];
        [oval148Path fill];
        [UIColor.darkGrayColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(232.5, 68.5, 33, 26)];
        [color3 setFill];
        [oval149Path fill];
        [UIColor.darkGrayColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243.5, 78.5, 35, 25)];
        [color3 setFill];
        [oval150Path fill];
        [UIColor.darkGrayColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(245.5, 91.5, 31, 23)];
        [color3 setFill];
        [oval151Path fill];
        [UIColor.darkGrayColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(265.5, 87.5, 32, 26)];
        [color3 setFill];
        [oval152Path fill];
        [UIColor.darkGrayColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(70.5, 150, 33, 22)];
        [color10 setFill];
        [oval55Path fill];
        [UIColor.darkGrayColor setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-10.5, 153.5, 40, 27)];
        [color10 setFill];
        [oval58Path fill];
        [UIColor.darkGrayColor setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(5.5, 147.5, 43, 28)];
        [color10 setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(37.5, 147.5, 33, 22)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.darkGrayColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 154, 29, 22)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.darkGrayColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22.5, 155, 35, 26)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.darkGrayColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 12
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonShadow.shadowOffset, moonShadow.shadowBlurRadius, [moonShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 74 Drawing
        UIBezierPath* oval74Path = [UIBezierPath bezierPath];
        [oval74Path moveToPoint: CGPointMake(255.07, 653.1)];
        [oval74Path addCurveToPoint: CGPointMake(255.07, 563.14) controlPoint1: CGPointMake(268.25, 637.82) controlPoint2: CGPointMake(255.07, 590.03)];
        [oval74Path addCurveToPoint: CGPointMake(173.88, 504.16) controlPoint1: CGPointMake(255.07, 506.3) controlPoint2: CGPointMake(219.88, 504.16)];
        [oval74Path addCurveToPoint: CGPointMake(98.75, 544) controlPoint1: CGPointMake(127.88, 504.16) controlPoint2: CGPointMake(98.75, 487.17)];
        [oval74Path addCurveToPoint: CGPointMake(98.75, 628.73) controlPoint1: CGPointMake(98.75, 578.99) controlPoint2: CGPointMake(81.08, 580.42)];
        [oval74Path addCurveToPoint: CGPointMake(173.88, 653.1) controlPoint1: CGPointMake(109.77, 658.88) controlPoint2: CGPointMake(156.21, 653.1)];
        [oval74Path addCurveToPoint: CGPointMake(255.07, 653.1) controlPoint1: CGPointMake(198.11, 653.1) controlPoint2: CGPointMake(240.4, 670.1)];
        [oval74Path closePath];
        [dayTimeFog setFill];
        [oval74Path fill];


        //// Oval 54 Drawing
        UIBezierPath* oval54Path = [UIBezierPath bezierPath];
        [oval54Path moveToPoint: CGPointMake(-8.15, 521.94)];
        [oval54Path addCurveToPoint: CGPointMake(74.12, 483.35) controlPoint1: CGPointMake(-8.15, 488.88) controlPoint2: CGPointMake(22.06, 483.35)];
        [oval54Path addCurveToPoint: CGPointMake(153.93, 521.94) controlPoint1: CGPointMake(126.19, 483.35) controlPoint2: CGPointMake(153.93, 488.88)];
        [oval54Path addCurveToPoint: CGPointMake(99.78, 568.23) controlPoint1: CGPointMake(153.93, 542.3) controlPoint2: CGPointMake(119.77, 540.12)];
        [oval54Path addCurveToPoint: CGPointMake(74.55, 628) controlPoint1: CGPointMake(87.3, 585.76) controlPoint2: CGPointMake(94.55, 628)];
        [oval54Path addCurveToPoint: CGPointMake(-8.15, 521.94) controlPoint1: CGPointMake(22.48, 628) controlPoint2: CGPointMake(-8.15, 555)];
        [oval54Path closePath];
        [dayTimeFog setFill];
        [oval54Path fill];


        //// Oval 68 Drawing
        UIBezierPath* oval68Path = [UIBezierPath bezierPath];
        [oval68Path moveToPoint: CGPointMake(161.47, 724.98)];
        [oval68Path addCurveToPoint: CGPointMake(52.89, 597.62) controlPoint1: CGPointMake(161.47, 678.09) controlPoint2: CGPointMake(92.99, 597.62)];
        [oval68Path addCurveToPoint: CGPointMake(-7.93, 598.36) controlPoint1: CGPointMake(12.79, 597.62) controlPoint2: CGPointMake(-7.93, 551.47)];
        [oval68Path addCurveToPoint: CGPointMake(-14.3, 724.98) controlPoint1: CGPointMake(-7.93, 627.24) controlPoint2: CGPointMake(-29.7, 685.12)];
        [oval68Path addCurveToPoint: CGPointMake(53.21, 748.81) controlPoint1: CGPointMake(-4.69, 749.85) controlPoint2: CGPointMake(37.8, 748.81)];
        [oval68Path addCurveToPoint: CGPointMake(161.47, 724.98) controlPoint1: CGPointMake(93.31, 748.81) controlPoint2: CGPointMake(161.47, 771.87)];
        [oval68Path closePath];
        [dayTimeFog setFill];
        [oval68Path fill];


        //// Oval 70 Drawing
        UIBezierPath* oval70Path = [UIBezierPath bezierPath];
        [oval70Path moveToPoint: CGPointMake(65.61, 695.27)];
        [oval70Path addCurveToPoint: CGPointMake(29.91, 651.14) controlPoint1: CGPointMake(65.61, 655.7) controlPoint2: CGPointMake(60.58, 651.14)];
        [oval70Path addCurveToPoint: CGPointMake(-20.2, 678.88) controlPoint1: CGPointMake(-0.77, 651.14) controlPoint2: CGPointMake(-20.2, 639.31)];
        [oval70Path addCurveToPoint: CGPointMake(-8.59, 728.45) controlPoint1: CGPointMake(-20.2, 703.25) controlPoint2: CGPointMake(-20.37, 694.81)];
        [oval70Path addCurveToPoint: CGPointMake(29.91, 754.85) controlPoint1: CGPointMake(-1.23, 749.45) controlPoint2: CGPointMake(18.12, 754.85)];
        [oval70Path addCurveToPoint: CGPointMake(65.61, 695.27) controlPoint1: CGPointMake(60.58, 754.85) controlPoint2: CGPointMake(65.61, 734.84)];
        [oval70Path closePath];
        [dayTimeFog setFill];
        [oval70Path fill];


        //// Oval 71 Drawing
        UIBezierPath* oval71Path = [UIBezierPath bezierPath];
        [oval71Path moveToPoint: CGPointMake(429, 544.84)];
        [oval71Path addCurveToPoint: CGPointMake(384.39, 483.24) controlPoint1: CGPointMake(429, 489.6) controlPoint2: CGPointMake(422.73, 483.24)];
        [oval71Path addCurveToPoint: CGPointMake(321.78, 521.97) controlPoint1: CGPointMake(346.06, 483.24) controlPoint2: CGPointMake(321.78, 466.73)];
        [oval71Path addCurveToPoint: CGPointMake(336.3, 591.16) controlPoint1: CGPointMake(321.78, 555.98) controlPoint2: CGPointMake(321.58, 544.2)];
        [oval71Path addCurveToPoint: CGPointMake(384.39, 628.01) controlPoint1: CGPointMake(345.49, 620.46) controlPoint2: CGPointMake(369.67, 628.01)];
        [oval71Path addCurveToPoint: CGPointMake(429, 544.84) controlPoint1: CGPointMake(422.73, 628.01) controlPoint2: CGPointMake(429, 600.08)];
        [oval71Path closePath];
        [dayTimeFog setFill];
        [oval71Path fill];


        //// Oval 72 Drawing
        UIBezierPath* oval72Path = [UIBezierPath bezierPath];
        [oval72Path moveToPoint: CGPointMake(410.6, 675.16)];
        [oval72Path addCurveToPoint: CGPointMake(369.02, 581.39) controlPoint1: CGPointMake(410.6, 626.64) controlPoint2: CGPointMake(404.76, 581.39)];
        [oval72Path addCurveToPoint: CGPointMake(306.21, 652.89) controlPoint1: CGPointMake(333.29, 581.39) controlPoint2: CGPointMake(306.21, 604.37)];
        [oval72Path addCurveToPoint: CGPointMake(233.67, 716.94) controlPoint1: CGPointMake(306.21, 682.77) controlPoint2: CGPointMake(219.95, 675.69)];
        [oval72Path addCurveToPoint: CGPointMake(369.01, 748.22) controlPoint1: CGPointMake(242.24, 742.68) controlPoint2: CGPointMake(355.28, 748.22)];
        [oval72Path addCurveToPoint: CGPointMake(410.6, 675.16) controlPoint1: CGPointMake(404.75, 748.22) controlPoint2: CGPointMake(410.6, 723.69)];
        [oval72Path closePath];
        [dayTimeFog setFill];
        [oval72Path fill];


        //// Oval 69 Drawing
        UIBezierPath* oval69Path = [UIBezierPath bezierPath];
        [oval69Path moveToPoint: CGPointMake(353.44, 520.99)];
        [oval69Path addCurveToPoint: CGPointMake(284.73, 520.31) controlPoint1: CGPointMake(353.44, 478.66) controlPoint2: CGPointMake(327.78, 520.31)];
        [oval69Path addCurveToPoint: CGPointMake(202, 557.29) controlPoint1: CGPointMake(241.68, 520.31) controlPoint2: CGPointMake(202, 514.96)];
        [oval69Path addCurveToPoint: CGPointMake(230.72, 603) controlPoint1: CGPointMake(202, 583.35) controlPoint2: CGPointMake(214.18, 567.02)];
        [oval69Path addCurveToPoint: CGPointMake(284.73, 631.23) controlPoint1: CGPointMake(241.03, 625.45) controlPoint2: CGPointMake(268.19, 631.23)];
        [oval69Path addCurveToPoint: CGPointMake(353.44, 520.99) controlPoint1: CGPointMake(327.78, 631.23) controlPoint2: CGPointMake(353.44, 563.31)];
        [oval69Path closePath];
        [dayTimeFog setFill];
        [oval69Path fill];


        //// Oval 56 Drawing
        UIBezierPath* oval56Path = [UIBezierPath bezierPath];
        [oval56Path moveToPoint: CGPointMake(238.1, 608.25)];
        [oval56Path addCurveToPoint: CGPointMake(238.1, 724.96) controlPoint1: CGPointMake(255.07, 631.21) controlPoint2: CGPointMake(238.1, 706.64)];
        [oval56Path addCurveToPoint: CGPointMake(163.15, 741.77) controlPoint1: CGPointMake(238.1, 756.59) controlPoint2: CGPointMake(210.23, 741.77)];
        [oval56Path addCurveToPoint: CGPointMake(91.52, 724.96) controlPoint1: CGPointMake(116.06, 741.77) controlPoint2: CGPointMake(91.52, 756.59)];
        [oval56Path addCurveToPoint: CGPointMake(105.89, 646.21) controlPoint1: CGPointMake(91.52, 705.49) controlPoint2: CGPointMake(87.81, 673.1)];
        [oval56Path addCurveToPoint: CGPointMake(163.31, 623.49) controlPoint1: CGPointMake(117.18, 629.43) controlPoint2: CGPointMake(145.22, 623.49)];
        [oval56Path addCurveToPoint: CGPointMake(238.1, 608.25) controlPoint1: CGPointMake(183.12, 623.49) controlPoint2: CGPointMake(225.77, 591.57)];
        [oval56Path closePath];
        [dayTimeFog setFill];
        [oval56Path fill];


        //// Oval 23 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 298.25, 682.42);
        CGContextRotateCTM(context, -87.63 * M_PI / 180);

        UIBezierPath* oval23Path = [UIBezierPath bezierPath];
        [oval23Path moveToPoint: CGPointMake(87.56, 80.64)];
        [oval23Path addCurveToPoint: CGPointMake(69.44, -11.32) controlPoint1: CGPointMake(98.11, 53.75) controlPoint2: CGPointMake(69.44, 10.13)];
        [oval23Path addCurveToPoint: CGPointMake(40.96, -123.2) controlPoint1: CGPointMake(69.44, -48.35) controlPoint2: CGPointMake(70.23, -123.2)];
        [oval23Path addCurveToPoint: CGPointMake(-19.23, -104.81) controlPoint1: CGPointMake(11.68, -123.2) controlPoint2: CGPointMake(-19.23, -141.84)];
        [oval23Path addCurveToPoint: CGPointMake(-45.88, -6.36) controlPoint1: CGPointMake(-19.23, -82.01) controlPoint2: CGPointMake(-49.76, -50.81)];
        [oval23Path addCurveToPoint: CGPointMake(-11.93, 64.3) controlPoint1: CGPointMake(-43.46, 21.37) controlPoint2: CGPointMake(-23.18, 64.3)];
        [oval23Path addCurveToPoint: CGPointMake(87.56, 80.64) controlPoint1: CGPointMake(0.38, 64.3) controlPoint2: CGPointMake(79.89, 100.16)];
        [oval23Path closePath];
        [dayTimeFog setFill];
        [oval23Path fill];

        CGContextRestoreGState(context);


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGGradientRelease(dayTimeFogGradient);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawCanvas17
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color3 = [UIColor colorWithRed: 0.728 green: 0.728 blue: 0.728 alpha: 0.812];
    UIColor* color7 = [UIColor colorWithRed: 0.644 green: 0.169 blue: 0.012 alpha: 1];
    UIColor* color10 = [UIColor colorWithRed: 1 green: 1 blue: 1 alpha: 0.822];
    UIColor* sunBallGradientColor = [UIColor colorWithRed: 0.989 green: 0.508 blue: 0.012 alpha: 0.733];
    UIColor* sunBallGradientColor2 = [UIColor colorWithRed: 0.938 green: 0.137 blue: 0 alpha: 0.834];
    UIColor* sunStarDradientColor = [UIColor colorWithRed: 1 green: 0.765 blue: 0 alpha: 0.841];
    UIColor* sunStarDradientColor2 = [UIColor colorWithRed: 1 green: 0.386 blue: 0 alpha: 0.94];
    UIColor* moonFrontShadowColor = [UIColor colorWithRed: 1 green: 0.985 blue: 0.815 alpha: 1];
    UIColor* color9 = [UIColor colorWithRed: 0.5 green: 0.5 blue: 0.5 alpha: 1];
    UIColor* daySnowGradientColor = [UIColor colorWithRed: 0.167 green: 0.5 blue: 0.763 alpha: 1];

    //// Gradient Declarations
    CGFloat sunBallGradientLocations[] = {0, 0.75, 1};
    CGGradientRef sunBallGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunBallGradientColor.CGColor, (id)[sunBallGradientColor blendedColorWithFraction: 0.5 ofColor: sunBallGradientColor2].CGColor, (id)sunBallGradientColor2.CGColor], sunBallGradientLocations);
    CGFloat sunStarDradientLocations[] = {0, 1};
    CGGradientRef sunStarDradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)sunStarDradientColor.CGColor, (id)sunStarDradientColor2.CGColor], sunStarDradientLocations);
    CGFloat daySnowGradientLocations[] = {0, 0.62, 1};
    CGGradientRef daySnowGradient = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)daySnowGradientColor.CGColor, (id)[daySnowGradientColor blendedColorWithFraction: 0.5 ofColor: UIColor.whiteColor].CGColor, (id)UIColor.whiteColor.CGColor], daySnowGradientLocations);

    //// Shadow Declarations
    NSShadow* sunShineShadow = [[NSShadow alloc] init];
    [sunShineShadow setShadowColor: [UIColor.blackColor colorWithAlphaComponent: 0.5]];
    [sunShineShadow setShadowOffset: CGSizeMake(14.1, 16.1)];
    [sunShineShadow setShadowBlurRadius: 9];
    NSShadow* moonFrontShadow = [[NSShadow alloc] init];
    [moonFrontShadow setShadowColor: [moonFrontShadowColor colorWithAlphaComponent: CGColorGetAlpha(moonFrontShadowColor.CGColor) * 0.14]];
    [moonFrontShadow setShadowOffset: CGSizeMake(28.1, 36.1)];
    [moonFrontShadow setShadowBlurRadius: 37];

    //// Group 7
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 414, 736)];
        CGContextSaveGState(context);
        [rectanglePath addClip];
        CGContextDrawLinearGradient(context, daySnowGradient, CGPointMake(207, -0), CGPointMake(207, 736), 0);
        CGContextRestoreGState(context);
    }


    //// Group 19
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, moonFrontShadow.shadowOffset, moonFrontShadow.shadowBlurRadius, [moonFrontShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 35.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(123.56, 49.28)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(157.5, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 84.5)];
        [bezierPath addLineToPoint: CGPointMake(130.94, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(117.66, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(145.69, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(110.28, 110.53)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 124.5)];
        [bezierPath addLineToPoint: CGPointMake(101.42, 119.72)];
        [bezierPath addLineToPoint: CGPointMake(110.5, 149.5)];
        [bezierPath addLineToPoint: CGPointMake(88.14, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(80.5, 140.5)];
        [bezierPath addLineToPoint: CGPointMake(74.86, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(63.5, 157.5)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 124.31)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 128.91)];
        [bezierPath addLineToPoint: CGPointMake(52.72, 113.59)];
        [bezierPath addLineToPoint: CGPointMake(20.26, 135.03)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 101.34)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 96.75)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 89.09)];
        [bezierPath addLineToPoint: CGPointMake(5.5, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(45.34, 72.25)];
        [bezierPath addLineToPoint: CGPointMake(36.49, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(49.77, 66.12)];
        [bezierPath addLineToPoint: CGPointMake(27.64, 20.19)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 58.47)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(63.05, 44.69)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 53.88)];
        [bezierPath addLineToPoint: CGPointMake(68.96, 11)];
        [bezierPath addLineToPoint: CGPointMake(80.76, 49.28)];
        [bezierPath closePath];
        CGContextSaveGState(context);
        [bezierPath addClip];
        CGContextDrawLinearGradient(context, sunStarDradient, CGPointMake(81.5, 11), CGPointMake(81.5, 157.5), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Oval 79 Drawing
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 81.18, 89.14);
        CGContextRotateCTM(context, -0.02 * M_PI / 180);

        UIBezierPath* oval79Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-34.1, -35.09, 68.21, 70.19)];
        CGContextSaveGState(context);
        [oval79Path addClip];
        CGContextDrawLinearGradient(context, sunBallGradient, CGPointMake(0, -35.09), CGPointMake(0, 35.09), 0);
        CGContextRestoreGState(context);
        [color7 setStroke];
        oval79Path.lineWidth = 1;
        [oval79Path stroke];

        CGContextRestoreGState(context);


        //// Oval 80 Drawing
        UIBezierPath* oval80Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(46.5, 60.5, 58.5, 56)];
        [color7 setStroke];
        oval80Path.lineWidth = 1;
        [oval80Path stroke];


        //// Oval 81 Drawing
        UIBezierPath* oval81Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(56.5, 61, 40.5, 44.5)];
        [color7 setStroke];
        oval81Path.lineWidth = 1;
        [oval81Path stroke];


        //// Oval 82 Drawing
        UIBezierPath* oval82Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(67.5, 68.5, 29.5, 31)];
        [color7 setStroke];
        oval82Path.lineWidth = 1;
        [oval82Path stroke];


        //// Oval 83 Drawing
        UIBezierPath* oval83Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 78, 18, 20)];
        [color7 setStroke];
        oval83Path.lineWidth = 1;
        [oval83Path stroke];


        //// Oval 84 Drawing
        UIBezierPath* oval84Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(71.5, 81, 11.5, 14)];
        [color7 setStroke];
        oval84Path.lineWidth = 1;
        [oval84Path stroke];


        //// Oval 85 Drawing
        UIBezierPath* oval85Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(74.5, 83, 5.5, 6)];
        [color7 setStroke];
        oval85Path.lineWidth = 1;
        [oval85Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 6
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 100 Drawing
        UIBezierPath* oval100Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(324, 114, 36, 27)];
        [color9 setFill];
        [oval100Path fill];
        [UIColor.darkGrayColor setStroke];
        oval100Path.lineWidth = 1;
        [oval100Path stroke];


        //// Oval 98 Drawing
        UIBezierPath* oval98Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 123.5, 30, 22)];
        [color9 setFill];
        [oval98Path fill];
        [UIColor.darkGrayColor setStroke];
        oval98Path.lineWidth = 1;
        [oval98Path stroke];


        //// Oval 101 Drawing
        UIBezierPath* oval101Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(340.5, 120.5, 30, 23)];
        [color9 setFill];
        [oval101Path fill];
        [UIColor.darkGrayColor setStroke];
        oval101Path.lineWidth = 1;
        [oval101Path stroke];


        //// Oval 102 Drawing
        UIBezierPath* oval102Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(387, 117, 27, 22)];
        [color9 setFill];
        [oval102Path fill];
        [UIColor.darkGrayColor setStroke];
        oval102Path.lineWidth = 1;
        [oval102Path stroke];


        //// Oval 103 Drawing
        UIBezierPath* oval103Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(362, 112, 33, 24)];
        [color9 setFill];
        [oval103Path fill];
        [UIColor.darkGrayColor setStroke];
        oval103Path.lineWidth = 1;
        [oval103Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(165.5, 98, 30, 24)];
        [color3 setFill];
        [ovalPath fill];
        [UIColor.darkGrayColor setStroke];
        ovalPath.lineWidth = 1;
        [ovalPath stroke];


        //// Oval 2 Drawing
        UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 98, 34, 27)];
        [color3 setFill];
        [oval2Path fill];
        [UIColor.darkGrayColor setStroke];
        oval2Path.lineWidth = 1;
        [oval2Path stroke];


        //// Oval 3 Drawing
        UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(87.5, 108, 28, 22)];
        [color3 setFill];
        [oval3Path fill];
        [UIColor.darkGrayColor setStroke];
        oval3Path.lineWidth = 1;
        [oval3Path stroke];


        //// Oval 4 Drawing
        UIBezierPath* oval4Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105.5, 98, 34, 27)];
        [color3 setFill];
        [oval4Path fill];
        [UIColor.darkGrayColor setStroke];
        oval4Path.lineWidth = 1;
        [oval4Path stroke];


        //// Oval 5 Drawing
        UIBezierPath* oval5Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(130.5, 98, 35, 27)];
        [color3 setFill];
        [oval5Path fill];
        [UIColor.darkGrayColor setStroke];
        oval5Path.lineWidth = 1;
        [oval5Path stroke];


        //// Oval 6 Drawing
        UIBezierPath* oval6Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(175, 105.5, 36, 27)];
        [color3 setFill];
        [oval6Path fill];
        [UIColor.darkGrayColor setStroke];
        oval6Path.lineWidth = 1;
        [oval6Path stroke];


        //// Oval 7 Drawing
        UIBezierPath* oval7Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(156.5, 108, 36, 28)];
        [color3 setFill];
        [oval7Path fill];
        [UIColor.darkGrayColor setStroke];
        oval7Path.lineWidth = 1;
        [oval7Path stroke];


        //// Oval 8 Drawing
        UIBezierPath* oval8Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(149, 108.5, 28, 22)];
        [color3 setFill];
        [oval8Path fill];
        [UIColor.darkGrayColor setStroke];
        oval8Path.lineWidth = 1;
        [oval8Path stroke];


        //// Oval 9 Drawing
        UIBezierPath* oval9Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(109.5, 113, 25, 19)];
        [color3 setFill];
        [oval9Path fill];
        [UIColor.darkGrayColor setStroke];
        oval9Path.lineWidth = 1;
        [oval9Path stroke];


        //// Oval 10 Drawing
        UIBezierPath* oval10Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(126.5, 114, 30, 24)];
        [color3 setFill];
        [oval10Path fill];
        [UIColor.darkGrayColor setStroke];
        oval10Path.lineWidth = 1;
        [oval10Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 2
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 11 Drawing
        UIBezierPath* oval11Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(59.5, 96, 30, 24)];
        [color3 setFill];
        [oval11Path fill];
        [UIColor.darkGrayColor setStroke];
        oval11Path.lineWidth = 1;
        [oval11Path stroke];


        //// Oval 12 Drawing
        UIBezierPath* oval12Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.5, 96, 34, 27)];
        [color3 setFill];
        [oval12Path fill];
        [UIColor.darkGrayColor setStroke];
        oval12Path.lineWidth = 1;
        [oval12Path stroke];


        //// Oval 13 Drawing
        UIBezierPath* oval13Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-18.5, 106, 28, 22)];
        [color3 setFill];
        [oval13Path fill];
        [UIColor.darkGrayColor setStroke];
        oval13Path.lineWidth = 1;
        [oval13Path stroke];


        //// Oval 14 Drawing
        UIBezierPath* oval14Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-0.5, 96, 34, 27)];
        [color3 setFill];
        [oval14Path fill];
        [UIColor.darkGrayColor setStroke];
        oval14Path.lineWidth = 1;
        [oval14Path stroke];


        //// Oval 15 Drawing
        UIBezierPath* oval15Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24.5, 96, 35, 27)];
        [color3 setFill];
        [oval15Path fill];
        [UIColor.darkGrayColor setStroke];
        oval15Path.lineWidth = 1;
        [oval15Path stroke];


        //// Oval 16 Drawing
        UIBezierPath* oval16Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(69, 103.5, 36, 27)];
        [color3 setFill];
        [oval16Path fill];
        [UIColor.darkGrayColor setStroke];
        oval16Path.lineWidth = 1;
        [oval16Path stroke];


        //// Oval 17 Drawing
        UIBezierPath* oval17Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(50.5, 106, 36, 28)];
        [color3 setFill];
        [oval17Path fill];
        [UIColor.darkGrayColor setStroke];
        oval17Path.lineWidth = 1;
        [oval17Path stroke];


        //// Oval 18 Drawing
        UIBezierPath* oval18Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(43, 106.5, 28, 22)];
        [color3 setFill];
        [oval18Path fill];
        [UIColor.darkGrayColor setStroke];
        oval18Path.lineWidth = 1;
        [oval18Path stroke];


        //// Oval 19 Drawing
        UIBezierPath* oval19Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(3.5, 111, 25, 19)];
        [color3 setFill];
        [oval19Path fill];
        [UIColor.darkGrayColor setStroke];
        oval19Path.lineWidth = 1;
        [oval19Path stroke];


        //// Oval 20 Drawing
        UIBezierPath* oval20Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(20.5, 112, 30, 24)];
        [color3 setFill];
        [oval20Path fill];
        [UIColor.darkGrayColor setStroke];
        oval20Path.lineWidth = 1;
        [oval20Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 28
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 42 Drawing
        UIBezierPath* oval42Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(98.5, 69.5, 25, 16.5)];
        [color3 setFill];
        [oval42Path fill];
        [UIColor.darkGrayColor setStroke];
        oval42Path.lineWidth = 1;
        [oval42Path stroke];


        //// Oval 41 Drawing
        UIBezierPath* oval41Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(77.5, 68.5, 26, 16)];
        [color3 setFill];
        [oval41Path fill];
        [UIColor.darkGrayColor setStroke];
        oval41Path.lineWidth = 1;
        [oval41Path stroke];


        //// Oval 118 Drawing
        UIBezierPath* oval118Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(114, 75.5, 30, 23)];
        [color3 setFill];
        [oval118Path fill];
        [UIColor.darkGrayColor setStroke];
        oval118Path.lineWidth = 1;
        [oval118Path stroke];


        //// Oval 119 Drawing
        UIBezierPath* oval119Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54, 75.5, 34, 25)];
        [color3 setFill];
        [oval119Path fill];
        [UIColor.darkGrayColor setStroke];
        oval119Path.lineWidth = 1;
        [oval119Path stroke];


        //// Oval 120 Drawing
        UIBezierPath* oval120Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(36, 84.5, 28, 21)];
        [color3 setFill];
        [oval120Path fill];
        [UIColor.darkGrayColor setStroke];
        oval120Path.lineWidth = 1;
        [oval120Path stroke];


        //// Oval 121 Drawing
        UIBezierPath* oval121Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(54, 75.5, 34, 25)];
        [color3 setFill];
        [oval121Path fill];
        [UIColor.darkGrayColor setStroke];
        oval121Path.lineWidth = 1;
        [oval121Path stroke];


        //// Oval 122 Drawing
        UIBezierPath* oval122Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(79, 75.5, 35, 25)];
        [color3 setFill];
        [oval122Path fill];
        [UIColor.darkGrayColor setStroke];
        oval122Path.lineWidth = 1;
        [oval122Path stroke];


        //// Oval 123 Drawing
        UIBezierPath* oval123Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(123.5, 83, 36, 25)];
        [color3 setFill];
        [oval123Path fill];
        [UIColor.darkGrayColor setStroke];
        oval123Path.lineWidth = 1;
        [oval123Path stroke];


        //// Oval 124 Drawing
        UIBezierPath* oval124Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(105, 84.5, 36, 27)];
        [color3 setFill];
        [oval124Path fill];
        [UIColor.darkGrayColor setStroke];
        oval124Path.lineWidth = 1;
        [oval124Path stroke];


        //// Oval 125 Drawing
        UIBezierPath* oval125Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(97.5, 85, 28, 21)];
        [color3 setFill];
        [oval125Path fill];
        [UIColor.darkGrayColor setStroke];
        oval125Path.lineWidth = 1;
        [oval125Path stroke];


        //// Oval 126 Drawing
        UIBezierPath* oval126Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(58, 89.5, 25, 18)];
        [color3 setFill];
        [oval126Path fill];
        [UIColor.darkGrayColor setStroke];
        oval126Path.lineWidth = 1;
        [oval126Path stroke];


        //// Oval 127 Drawing
        UIBezierPath* oval127Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(75, 90.5, 30, 23)];
        [color3 setFill];
        [oval127Path fill];
        [UIColor.darkGrayColor setStroke];
        oval127Path.lineWidth = 1;
        [oval127Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 8
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 21 Drawing
        UIBezierPath* oval21Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(327, 149.5, 34, 24)];
        [color3 setFill];
        [oval21Path fill];
        [UIColor.darkGrayColor setStroke];
        oval21Path.lineWidth = 1;
        [oval21Path stroke];


        //// Oval 25 Drawing
        UIBezierPath* oval25Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287, 149.5, 40, 25)];
        [color3 setFill];
        [oval25Path fill];
        [UIColor.darkGrayColor setStroke];
        oval25Path.lineWidth = 1;
        [oval25Path stroke];


        //// Oval 26 Drawing
        UIBezierPath* oval26Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(337.5, 157, 41, 28)];
        [color3 setFill];
        [oval26Path fill];
        [UIColor.darkGrayColor setStroke];
        oval26Path.lineWidth = 1;
        [oval26Path stroke];


        //// Oval 27 Drawing
        UIBezierPath* oval27Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(316, 159.5, 41, 27)];
        [color3 setFill];
        [oval27Path fill];
        [UIColor.darkGrayColor setStroke];
        oval27Path.lineWidth = 1;
        [oval27Path stroke];


        //// Oval 28 Drawing
        UIBezierPath* oval28Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(308.5, 177, 31, 22)];
        [color3 setFill];
        [oval28Path fill];
        [UIColor.darkGrayColor setStroke];
        oval28Path.lineWidth = 1;
        [oval28Path stroke];


        //// Oval 128 Drawing
        UIBezierPath* oval128Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(374.5, 159.5, 29, 24)];
        [color3 setFill];
        [oval128Path fill];
        [UIColor.darkGrayColor setStroke];
        oval128Path.lineWidth = 1;
        [oval128Path stroke];


        //// Oval 129 Drawing
        UIBezierPath* oval129Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(325.5, 170, 30, 24)];
        [color3 setFill];
        [oval129Path fill];
        [UIColor.darkGrayColor setStroke];
        oval129Path.lineWidth = 1;
        [oval129Path stroke];


        //// Oval 130 Drawing
        UIBezierPath* oval130Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(364.5, 165, 35, 29)];
        [color3 setFill];
        [oval130Path fill];
        [UIColor.darkGrayColor setStroke];
        oval130Path.lineWidth = 1;
        [oval130Path stroke];


        //// Oval 131 Drawing
        UIBezierPath* oval131Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(350, 167.5, 28.5, 26)];
        [color3 setFill];
        [oval131Path fill];
        [UIColor.darkGrayColor setStroke];
        oval131Path.lineWidth = 1;
        [oval131Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 3
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 138 Drawing
        UIBezierPath* oval138Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(219.5, 143.5, 36, 27)];
        [color3 setFill];
        [oval138Path fill];
        [UIColor.darkGrayColor setStroke];
        oval138Path.lineWidth = 1;
        [oval138Path stroke];


        //// Oval 22 Drawing
        UIBezierPath* oval22Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(248, 151.5, 34, 25)];
        [color3 setFill];
        [oval22Path fill];
        [UIColor.darkGrayColor setStroke];
        oval22Path.lineWidth = 1;
        [oval22Path stroke];


        //// Oval 24 Drawing
        UIBezierPath* oval24Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(287, 165.5, 34, 25)];
        [color3 setFill];
        [oval24Path fill];
        [UIColor.darkGrayColor setStroke];
        oval24Path.lineWidth = 1;
        [oval24Path stroke];


        //// Oval 132 Drawing
        UIBezierPath* oval132Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274, 160, 30, 24)];
        [color3 setFill];
        [oval132Path fill];
        [UIColor.darkGrayColor setStroke];
        oval132Path.lineWidth = 1;
        [oval132Path stroke];


        //// Oval 133 Drawing
        UIBezierPath* oval133Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(198, 160, 34, 25)];
        [color3 setFill];
        [oval133Path fill];
        [UIColor.darkGrayColor setStroke];
        oval133Path.lineWidth = 1;
        [oval133Path stroke];


        //// Oval 134 Drawing
        UIBezierPath* oval134Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(180, 170, 28, 22)];
        [color3 setFill];
        [oval134Path fill];
        [UIColor.darkGrayColor setStroke];
        oval134Path.lineWidth = 1;
        [oval134Path stroke];


        //// Oval 135 Drawing
        UIBezierPath* oval135Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(198, 160, 34, 25)];
        [color3 setFill];
        [oval135Path fill];
        [UIColor.darkGrayColor setStroke];
        oval135Path.lineWidth = 1;
        [oval135Path stroke];


        //// Oval 136 Drawing
        UIBezierPath* oval136Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(223, 160, 35, 25)];
        [color3 setFill];
        [oval136Path fill];
        [UIColor.darkGrayColor setStroke];
        oval136Path.lineWidth = 1;
        [oval136Path stroke];


        //// Oval 137 Drawing
        UIBezierPath* oval137Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267.5, 167.5, 36, 27)];
        [color3 setFill];
        [oval137Path fill];
        [UIColor.darkGrayColor setStroke];
        oval137Path.lineWidth = 1;
        [oval137Path stroke];


        //// Oval 139 Drawing
        UIBezierPath* oval139Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(243.5, 175.5, 34, 28)];
        [color3 setFill];
        [oval139Path fill];
        [UIColor.darkGrayColor setStroke];
        oval139Path.lineWidth = 1;
        [oval139Path stroke];


        //// Oval 140 Drawing
        UIBezierPath* oval140Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(199, 172, 31, 24)];
        [color3 setFill];
        [oval140Path fill];
        [UIColor.darkGrayColor setStroke];
        oval140Path.lineWidth = 1;
        [oval140Path stroke];


        //// Oval 141 Drawing
        UIBezierPath* oval141Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(219, 175, 30, 24)];
        [color3 setFill];
        [oval141Path fill];
        [UIColor.darkGrayColor setStroke];
        oval141Path.lineWidth = 1;
        [oval141Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 5
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 31 Drawing
        UIBezierPath* oval31Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(180.5, 139.5, 34, 29)];
        [color3 setFill];
        [oval31Path fill];
        [UIColor.darkGrayColor setStroke];
        oval31Path.lineWidth = 1;
        [oval31Path stroke];


        //// Oval 32 Drawing
        UIBezierPath* oval32Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(245.5, 139.5, 39, 31)];
        [color3 setFill];
        [oval32Path fill];
        [UIColor.darkGrayColor setStroke];
        oval32Path.lineWidth = 1;
        [oval32Path stroke];


        //// Oval 33 Drawing
        UIBezierPath* oval33Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(272.5, 151.5, 33, 25)];
        [color3 setFill];
        [oval33Path fill];
        [UIColor.darkGrayColor setStroke];
        oval33Path.lineWidth = 1;
        [oval33Path stroke];


        //// Oval 34 Drawing
        UIBezierPath* oval34Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(245.5, 139.5, 39, 31)];
        [color3 setFill];
        [oval34Path fill];
        [UIColor.darkGrayColor setStroke];
        oval34Path.lineWidth = 1;
        [oval34Path stroke];


        //// Oval 35 Drawing
        UIBezierPath* oval35Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(214.5, 139.5, 41, 31)];
        [color3 setFill];
        [oval35Path fill];
        [UIColor.darkGrayColor setStroke];
        oval35Path.lineWidth = 1;
        [oval35Path stroke];


        //// Oval 36 Drawing
        UIBezierPath* oval36Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(162, 149, 42, 32)];
        [color3 setFill];
        [oval36Path fill];
        [UIColor.darkGrayColor setStroke];
        oval36Path.lineWidth = 1;
        [oval36Path stroke];


        //// Oval 37 Drawing
        UIBezierPath* oval37Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(183.5, 151.5, 42, 31)];
        [color3 setFill];
        [oval37Path fill];
        [UIColor.darkGrayColor setStroke];
        oval37Path.lineWidth = 1;
        [oval37Path stroke];


        //// Oval 38 Drawing
        UIBezierPath* oval38Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(202, 152, 32, 25)];
        [color3 setFill];
        [oval38Path fill];
        [UIColor.darkGrayColor setStroke];
        oval38Path.lineWidth = 1;
        [oval38Path stroke];


        //// Oval 39 Drawing
        UIBezierPath* oval39Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(250.5, 156.5, 29, 24)];
        [color3 setFill];
        [oval39Path fill];
        [UIColor.darkGrayColor setStroke];
        oval39Path.lineWidth = 1;
        [oval39Path stroke];


        //// Oval 40 Drawing
        UIBezierPath* oval40Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(225.5, 157.5, 35, 29)];
        [color3 setFill];
        [oval40Path fill];
        [UIColor.darkGrayColor setStroke];
        oval40Path.lineWidth = 1;
        [oval40Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 9
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 43 Drawing
        UIBezierPath* oval43Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(32.5, 154, 32, 25)];
        [color9 setFill];
        [oval43Path fill];
        [UIColor.darkGrayColor setStroke];
        oval43Path.lineWidth = 1;
        [oval43Path stroke];


        //// Oval 44 Drawing
        UIBezierPath* oval44Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(91.5, 154, 36, 27)];
        [color9 setFill];
        [oval44Path fill];
        [UIColor.darkGrayColor setStroke];
        oval44Path.lineWidth = 1;
        [oval44Path stroke];


        //// Oval 45 Drawing
        UIBezierPath* oval45Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(116.5, 165, 30, 22)];
        [color9 setFill];
        [oval45Path fill];
        [UIColor.darkGrayColor setStroke];
        oval45Path.lineWidth = 1;
        [oval45Path stroke];


        //// Oval 46 Drawing
        UIBezierPath* oval46Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(91.5, 154, 36, 27)];
        [color9 setFill];
        [oval46Path fill];
        [UIColor.darkGrayColor setStroke];
        oval46Path.lineWidth = 1;
        [oval46Path stroke];


        //// Oval 47 Drawing
        UIBezierPath* oval47Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(64.5, 154, 37, 27)];
        [color9 setFill];
        [oval47Path fill];
        [UIColor.darkGrayColor setStroke];
        oval47Path.lineWidth = 1;
        [oval47Path stroke];


        //// Oval 48 Drawing
        UIBezierPath* oval48Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(16, 161.5, 38, 29)];
        [color9 setFill];
        [oval48Path fill];
        [UIColor.darkGrayColor setStroke];
        oval48Path.lineWidth = 1;
        [oval48Path stroke];


        //// Oval 49 Drawing
        UIBezierPath* oval49Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(35.5, 165, 38, 27)];
        [color9 setFill];
        [oval49Path fill];
        [UIColor.darkGrayColor setStroke];
        oval49Path.lineWidth = 1;
        [oval49Path stroke];


        //// Oval 50 Drawing
        UIBezierPath* oval50Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(52, 165.5, 30, 22)];
        [color9 setFill];
        [oval50Path fill];
        [UIColor.darkGrayColor setStroke];
        oval50Path.lineWidth = 1;
        [oval50Path stroke];


        //// Oval 51 Drawing
        UIBezierPath* oval51Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(96.5, 169, 27, 21)];
        [color9 setFill];
        [oval51Path fill];
        [UIColor.darkGrayColor setStroke];
        oval51Path.lineWidth = 1;
        [oval51Path stroke];


        //// Oval 52 Drawing
        UIBezierPath* oval52Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(73.5, 170, 32, 25)];
        [color9 setFill];
        [oval52Path fill];
        [UIColor.darkGrayColor setStroke];
        oval52Path.lineWidth = 1;
        [oval52Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 4
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 86 Drawing
        UIBezierPath* oval86Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(291, 95.5, 31, 17)];
        [color3 setFill];
        [oval86Path fill];
        [UIColor.darkGrayColor setStroke];
        oval86Path.lineWidth = 1;
        [oval86Path stroke];


        //// Oval 87 Drawing
        UIBezierPath* oval87Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(233.5, 95.5, 36, 20)];
        [color3 setFill];
        [oval87Path fill];
        [UIColor.darkGrayColor setStroke];
        oval87Path.lineWidth = 1;
        [oval87Path stroke];


        //// Oval 88 Drawing
        UIBezierPath* oval88Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(253, 89, 36, 21)];
        [color3 setFill];
        [oval88Path fill];
        [UIColor.darkGrayColor setStroke];
        oval88Path.lineWidth = 1;
        [oval88Path stroke];


        //// Oval 89 Drawing
        UIBezierPath* oval89Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(269.5, 93.5, 30, 17)];
        [color3 setFill];
        [oval89Path fill];
        [UIColor.darkGrayColor setStroke];
        oval89Path.lineWidth = 1;
        [oval89Path stroke];


        //// Oval 91 Drawing
        UIBezierPath* oval91Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(291, 87, 33, 19)];
        [color3 setFill];
        [oval91Path fill];
        [UIColor.darkGrayColor setStroke];
        oval91Path.lineWidth = 1;
        [oval91Path stroke];


        //// Oval 92 Drawing
        UIBezierPath* oval92Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(310, 108, 28, 19)];
        [color3 setFill];
        [oval92Path fill];
        [UIColor.darkGrayColor setStroke];
        oval92Path.lineWidth = 1;
        [oval92Path stroke];


        //// Oval 93 Drawing
        UIBezierPath* oval93Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(256.5, 100.5, 33, 22)];
        [color3 setFill];
        [oval93Path fill];
        [UIColor.darkGrayColor setStroke];
        oval93Path.lineWidth = 1;
        [oval93Path stroke];


        //// Oval 94 Drawing
        UIBezierPath* oval94Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(274, 100.5, 34, 23)];
        [color3 setFill];
        [oval94Path fill];
        [UIColor.darkGrayColor setStroke];
        oval94Path.lineWidth = 1;
        [oval94Path stroke];


        //// Oval 95 Drawing
        UIBezierPath* oval95Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(289.5, 106, 28, 19)];
        [color3 setFill];
        [oval95Path fill];
        [UIColor.darkGrayColor setStroke];
        oval95Path.lineWidth = 1;
        [oval95Path stroke];


        //// Oval 99 Drawing
        UIBezierPath* oval99Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(326.5, 98, 37, 24)];
        [color3 setFill];
        [oval99Path fill];
        [UIColor.darkGrayColor setStroke];
        oval99Path.lineWidth = 1;
        [oval99Path stroke];


        //// Oval 97 Drawing
        UIBezierPath* oval97Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(310, 98.5, 31, 21)];
        [color3 setFill];
        [oval97Path fill];
        [UIColor.darkGrayColor setStroke];
        oval97Path.lineWidth = 1;
        [oval97Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 10
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 104 Drawing
        UIBezierPath* oval104Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(356, 90.5, 29.5, 22)];
        [color10 setFill];
        [oval104Path fill];
        [UIColor.darkGrayColor setStroke];
        oval104Path.lineWidth = 1;
        [oval104Path stroke];


        //// Oval 105 Drawing
        UIBezierPath* oval105Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(302.5, 98.5, 32, 19)];
        [color10 setFill];
        [oval105Path fill];
        [UIColor.darkGrayColor setStroke];
        oval105Path.lineWidth = 1;
        [oval105Path stroke];


        //// Oval 106 Drawing
        UIBezierPath* oval106Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(318.5, 90.5, 38, 24)];
        [color10 setFill];
        [oval106Path fill];
        [UIColor.darkGrayColor setStroke];
        oval106Path.lineWidth = 1;
        [oval106Path stroke];


        //// Oval 107 Drawing
        UIBezierPath* oval107Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(334, 94, 36, 23)];
        [color10 setFill];
        [oval107Path fill];
        [UIColor.darkGrayColor setStroke];
        oval107Path.lineWidth = 1;
        [oval107Path stroke];


        //// Oval 77 Drawing
        UIBezierPath* oval77Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(385, 94.5, 36, 24)];
        [color10 setFill];
        [oval77Path fill];
        [UIColor.darkGrayColor setStroke];
        oval77Path.lineWidth = 1;
        [oval77Path stroke];


        //// Oval 78 Drawing
        UIBezierPath* oval78Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(361.5, 96.5, 36, 24)];
        [color10 setFill];
        [oval78Path fill];
        [UIColor.darkGrayColor setStroke];
        oval78Path.lineWidth = 1;
        [oval78Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 31
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 142 Drawing
        UIBezierPath* oval142Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(257.5, 78.5, 37, 28)];
        [color3 setFill];
        [oval142Path fill];
        [UIColor.darkGrayColor setStroke];
        oval142Path.lineWidth = 1;
        [oval142Path stroke];


        //// Oval 143 Drawing
        UIBezierPath* oval143Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(289.5, 77.5, 31, 24)];
        [color3 setFill];
        [oval143Path fill];
        [UIColor.darkGrayColor setStroke];
        oval143Path.lineWidth = 1;
        [oval143Path stroke];


        //// Oval 144 Drawing
        UIBezierPath* oval144Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(239.5, 62.5, 38, 28)];
        [color3 setFill];
        [oval144Path fill];
        [UIColor.darkGrayColor setStroke];
        oval144Path.lineWidth = 1;
        [oval144Path stroke];


        //// Oval 145 Drawing
        UIBezierPath* oval145Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(188, 77, 35, 26)];
        [color3 setFill];
        [oval145Path fill];
        [UIColor.darkGrayColor setStroke];
        oval145Path.lineWidth = 1;
        [oval145Path stroke];


        //// Oval 146 Drawing
        UIBezierPath* oval146Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(205.5, 84.5, 40, 29)];
        [color3 setFill];
        [oval146Path fill];
        [UIColor.darkGrayColor setStroke];
        oval146Path.lineWidth = 1;
        [oval146Path stroke];


        //// Oval 147 Drawing
        UIBezierPath* oval147Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(269.5, 88.5, 27, 21)];
        [color3 setFill];
        [oval147Path fill];
        [UIColor.darkGrayColor setStroke];
        oval147Path.lineWidth = 1;
        [oval147Path stroke];


        //// Oval 148 Drawing
        UIBezierPath* oval148Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(267.5, 71.5, 27, 19)];
        [color3 setFill];
        [oval148Path fill];
        [UIColor.darkGrayColor setStroke];
        oval148Path.lineWidth = 1;
        [oval148Path stroke];


        //// Oval 149 Drawing
        UIBezierPath* oval149Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(212.5, 64.5, 33, 26)];
        [color3 setFill];
        [oval149Path fill];
        [UIColor.darkGrayColor setStroke];
        oval149Path.lineWidth = 1;
        [oval149Path stroke];


        //// Oval 150 Drawing
        UIBezierPath* oval150Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(223.5, 74.5, 35, 25)];
        [color3 setFill];
        [oval150Path fill];
        [UIColor.darkGrayColor setStroke];
        oval150Path.lineWidth = 1;
        [oval150Path stroke];


        //// Oval 151 Drawing
        UIBezierPath* oval151Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(225.5, 87.5, 31, 23)];
        [color3 setFill];
        [oval151Path fill];
        [UIColor.darkGrayColor setStroke];
        oval151Path.lineWidth = 1;
        [oval151Path stroke];


        //// Oval 152 Drawing
        UIBezierPath* oval152Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(245.5, 83.5, 32, 26)];
        [color3 setFill];
        [oval152Path fill];
        [UIColor.darkGrayColor setStroke];
        oval152Path.lineWidth = 1;
        [oval152Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Group 11
    {
        CGContextSaveGState(context);
        CGContextSetShadowWithColor(context, sunShineShadow.shadowOffset, sunShineShadow.shadowBlurRadius, [sunShineShadow.shadowColor CGColor]);
        CGContextBeginTransparencyLayer(context, NULL);


        //// Oval 55 Drawing
        UIBezierPath* oval55Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(70.5, 150, 33, 22)];
        [color10 setFill];
        [oval55Path fill];
        [UIColor.darkGrayColor setStroke];
        oval55Path.lineWidth = 1;
        [oval55Path stroke];


        //// Oval 58 Drawing
        UIBezierPath* oval58Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(-10.5, 153.5, 40, 27)];
        [color10 setFill];
        [oval58Path fill];
        [UIColor.darkGrayColor setStroke];
        oval58Path.lineWidth = 1;
        [oval58Path stroke];


        //// Oval 59 Drawing
        UIBezierPath* oval59Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(5.5, 147.5, 43, 28)];
        [color10 setFill];
        [oval59Path fill];
        [UIColor.darkGrayColor setStroke];
        oval59Path.lineWidth = 1;
        [oval59Path stroke];


        //// Oval 60 Drawing
        UIBezierPath* oval60Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(37.5, 147.5, 33, 22)];
        [color10 setFill];
        [oval60Path fill];
        [UIColor.darkGrayColor setStroke];
        oval60Path.lineWidth = 1;
        [oval60Path stroke];


        //// Oval 61 Drawing
        UIBezierPath* oval61Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(48.5, 154, 29, 22)];
        [color10 setFill];
        [oval61Path fill];
        [UIColor.darkGrayColor setStroke];
        oval61Path.lineWidth = 1;
        [oval61Path stroke];


        //// Oval 62 Drawing
        UIBezierPath* oval62Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(22.5, 155, 35, 26)];
        [color10 setFill];
        [oval62Path fill];
        [UIColor.darkGrayColor setStroke];
        oval62Path.lineWidth = 1;
        [oval62Path stroke];


        CGContextEndTransparencyLayer(context);
        CGContextRestoreGState(context);
    }


    //// Text Drawing
    CGRect textRect = CGRectMake(60, 568, 304, 78);
    {
        NSString* textContent = @"SNOW FLAKES";
        NSMutableParagraphStyle* textStyle = NSMutableParagraphStyle.defaultParagraphStyle.mutableCopy;
        textStyle.alignment = NSTextAlignmentLeft;

        NSDictionary* textFontAttributes = @{NSFontAttributeName: [UIFont systemFontOfSize: 42], NSForegroundColorAttributeName: moonFrontShadowColor, NSParagraphStyleAttributeName: textStyle};

        CGFloat textTextHeight = [textContent boundingRectWithSize: CGSizeMake(textRect.size.width, INFINITY)  options: NSStringDrawingUsesLineFragmentOrigin attributes: textFontAttributes context: nil].size.height;
        CGContextSaveGState(context);
        CGContextClipToRect(context, textRect);
        [textContent drawInRect: CGRectMake(CGRectGetMinX(textRect), CGRectGetMinY(textRect) + (CGRectGetHeight(textRect) - textTextHeight) / 2, CGRectGetWidth(textRect), textTextHeight) withAttributes: textFontAttributes];
        CGContextRestoreGState(context);
    }


    //// Cleanup
    CGGradientRelease(sunBallGradient);
    CGGradientRelease(sunStarDradient);
    CGGradientRelease(daySnowGradient);
    CGColorSpaceRelease(colorSpace);
}

#pragma mark Generated Images

+ (UIImage*)imageOfCanvas1
{
    if (_imageOfCanvas1)
        return _imageOfCanvas1;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas1];

    _imageOfCanvas1 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas1;
}

+ (UIImage*)imageOfCanvas4
{
    if (_imageOfCanvas4)
        return _imageOfCanvas4;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas4];

    _imageOfCanvas4 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas4;
}

+ (UIImage*)imageOfCanvas6
{
    if (_imageOfCanvas6)
        return _imageOfCanvas6;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas6];

    _imageOfCanvas6 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas6;
}

+ (UIImage*)imageOfCanvas7
{
    if (_imageOfCanvas7)
        return _imageOfCanvas7;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas7];

    _imageOfCanvas7 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas7;
}

+ (UIImage*)imageOfCanvas8
{
    if (_imageOfCanvas8)
        return _imageOfCanvas8;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas8];

    _imageOfCanvas8 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas8;
}

+ (UIImage*)imageOfCanvas9
{
    if (_imageOfCanvas9)
        return _imageOfCanvas9;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas9];

    _imageOfCanvas9 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas9;
}

+ (UIImage*)imageOfCanvas10
{
    if (_imageOfCanvas10)
        return _imageOfCanvas10;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas10];

    _imageOfCanvas10 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas10;
}

+ (UIImage*)imageOfCanvas11
{
    if (_imageOfCanvas11)
        return _imageOfCanvas11;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas11];

    _imageOfCanvas11 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas11;
}

+ (UIImage*)imageOfCanvas13
{
    if (_imageOfCanvas13)
        return _imageOfCanvas13;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas13];

    _imageOfCanvas13 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas13;
}

+ (UIImage*)imageOfCanvas2
{
    if (_imageOfCanvas2)
        return _imageOfCanvas2;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas2];

    _imageOfCanvas2 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas2;
}

+ (UIImage*)imageOfCanvas3
{
    if (_imageOfCanvas3)
        return _imageOfCanvas3;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas3];

    _imageOfCanvas3 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas3;
}

+ (UIImage*)imageOfCanvas5
{
    if (_imageOfCanvas5)
        return _imageOfCanvas5;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas5];

    _imageOfCanvas5 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas5;
}

+ (UIImage*)imageOfCanvas15
{
    if (_imageOfCanvas15)
        return _imageOfCanvas15;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(414, 736), NO, 0.0f);
    [WeatherStyleKit drawCanvas15];

    _imageOfCanvas15 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfCanvas15;
}

#pragma mark Customization Infrastructure

- (void)setCanvas1Targets: (NSArray*)canvas1Targets
{
    _canvas1Targets = canvas1Targets;

    for (id target in self.canvas1Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas1];
}

- (void)setCanvas4Targets: (NSArray*)canvas4Targets
{
    _canvas4Targets = canvas4Targets;

    for (id target in self.canvas4Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas4];
}

- (void)setCanvas6Targets: (NSArray*)canvas6Targets
{
    _canvas6Targets = canvas6Targets;

    for (id target in self.canvas6Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas6];
}

- (void)setCanvas7Targets: (NSArray*)canvas7Targets
{
    _canvas7Targets = canvas7Targets;

    for (id target in self.canvas7Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas7];
}

- (void)setCanvas8Targets: (NSArray*)canvas8Targets
{
    _canvas8Targets = canvas8Targets;

    for (id target in self.canvas8Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas8];
}

- (void)setCanvas9Targets: (NSArray*)canvas9Targets
{
    _canvas9Targets = canvas9Targets;

    for (id target in self.canvas9Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas9];
}

- (void)setCanvas10Targets: (NSArray*)canvas10Targets
{
    _canvas10Targets = canvas10Targets;

    for (id target in self.canvas10Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas10];
}

- (void)setCanvas11Targets: (NSArray*)canvas11Targets
{
    _canvas11Targets = canvas11Targets;

    for (id target in self.canvas11Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas11];
}

- (void)setCanvas13Targets: (NSArray*)canvas13Targets
{
    _canvas13Targets = canvas13Targets;

    for (id target in self.canvas13Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas13];
}

- (void)setCanvas2Targets: (NSArray*)canvas2Targets
{
    _canvas2Targets = canvas2Targets;

    for (id target in self.canvas2Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas2];
}

- (void)setCanvas3Targets: (NSArray*)canvas3Targets
{
    _canvas3Targets = canvas3Targets;

    for (id target in self.canvas3Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas3];
}

- (void)setCanvas5Targets: (NSArray*)canvas5Targets
{
    _canvas5Targets = canvas5Targets;

    for (id target in self.canvas5Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas5];
}

- (void)setCanvas15Targets: (NSArray*)canvas15Targets
{
    _canvas15Targets = canvas15Targets;

    for (id target in self.canvas15Targets)
        [target performSelector: @selector(setImage:) withObject: WeatherStyleKit.imageOfCanvas15];
}


@end



@implementation UIColor (PaintCodeAdditions)

- (UIColor*)blendedColorWithFraction: (CGFloat)fraction ofColor: (UIColor*)color2
{
    UIColor* color1 = self;

    CGFloat r1 = 0, g1 = 0, b1 = 0, a1 = 0;
    CGFloat r2 = 0, g2 = 0, b2 = 0, a2 = 0;


    [color1 getRed: &r1 green: &g1 blue: &b1 alpha: &a1];
    [color2 getRed: &r2 green: &g2 blue: &b2 alpha: &a2];

    CGFloat r = r1 * (1 - fraction) + r2 * fraction;
    CGFloat g = g1 * (1 - fraction) + g2 * fraction;
    CGFloat b = b1 * (1 - fraction) + b2 * fraction;
    CGFloat a = a1 * (1 - fraction) + a2 * fraction;

    return [UIColor colorWithRed: r green: g blue: b alpha: a];
}

@end
